/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var extensibility;
    (function (extensibility) {
        var utils;
        (function (utils) {
            var dataview;
            (function (dataview) {
                // TODO: refactor & focus DataViewTransform into a service with well-defined dependencies.
                var DataViewTransform;
                (function (DataViewTransform) {
                    // TODO: refactor this, setGrouped, and groupValues to a test helper to stop using it in the product
                    function createValueColumns(values, valueIdentityFields, source) {
                        if (values === void 0) { values = []; }
                        var result = values;
                        setGrouped(result);
                        if (valueIdentityFields) {
                            result.identityFields = valueIdentityFields;
                        }
                        if (source) {
                            result.source = source;
                        }
                        return result;
                    }
                    DataViewTransform.createValueColumns = createValueColumns;
                    function setGrouped(values, groupedResult) {
                        values.grouped = groupedResult
                            ? function () { return groupedResult; }
                            : function () { return groupValues(values); };
                    }
                    DataViewTransform.setGrouped = setGrouped;
                    /** Group together the values with a common identity. */
                    function groupValues(values) {
                        var groups = [], currentGroup;
                        for (var i = 0, len = values.length; i < len; i++) {
                            var value = values[i];
                            if (!currentGroup || currentGroup.identity !== value.identity) {
                                currentGroup = {
                                    values: []
                                };
                                if (value.identity) {
                                    currentGroup.identity = value.identity;
                                    var source = value.source;
                                    // allow null, which will be formatted as (Blank).
                                    if (source.groupName !== undefined) {
                                        currentGroup.name = source.groupName;
                                    }
                                    else if (source.displayName) {
                                        currentGroup.name = source.displayName;
                                    }
                                }
                                groups.push(currentGroup);
                            }
                            currentGroup.values.push(value);
                        }
                        return groups;
                    }
                    DataViewTransform.groupValues = groupValues;
                })(DataViewTransform = dataview.DataViewTransform || (dataview.DataViewTransform = {}));
            })(dataview = utils.dataview || (utils.dataview = {}));
        })(utils = extensibility.utils || (extensibility.utils = {}));
    })(extensibility = powerbi.extensibility || (powerbi.extensibility = {}));
})(powerbi || (powerbi = {}));
/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var extensibility;
    (function (extensibility) {
        var utils;
        (function (utils) {
            var dataview;
            (function (dataview) {
                var DataRoleHelper;
                (function (DataRoleHelper) {
                    function getMeasureIndexOfRole(grouped, roleName) {
                        if (!_.isEmpty(grouped)) {
                            var firstGroup = grouped[0];
                            if (firstGroup.values && firstGroup.values.length > 0) {
                                for (var i = 0, len = firstGroup.values.length; i < len; ++i) {
                                    var value = firstGroup.values[i];
                                    if (value && value.source) {
                                        if (hasRole(value.source, roleName)) {
                                            return i;
                                        }
                                    }
                                }
                            }
                        }
                        return -1;
                    }
                    DataRoleHelper.getMeasureIndexOfRole = getMeasureIndexOfRole;
                    function getCategoryIndexOfRole(categories, roleName) {
                        if (!_.isEmpty(categories)) {
                            for (var i = 0, ilen = categories.length; i < ilen; i++) {
                                if (hasRole(categories[i].source, roleName)) {
                                    return i;
                                }
                            }
                        }
                        return -1;
                    }
                    DataRoleHelper.getCategoryIndexOfRole = getCategoryIndexOfRole;
                    function hasRole(column, name) {
                        var roles = column.roles;
                        return roles && roles[name];
                    }
                    DataRoleHelper.hasRole = hasRole;
                    function hasRoleInDataView(dataView, name) {
                        return dataView != null
                            && dataView.metadata != null
                            && dataView.metadata.columns
                            && _.some(dataView.metadata.columns, function (c) { return c.roles && c.roles[name] !== undefined; }); // any is an alias of some
                    }
                    DataRoleHelper.hasRoleInDataView = hasRoleInDataView;
                    function hasRoleInValueColumn(valueColumn, name) {
                        return valueColumn
                            && valueColumn.source
                            && valueColumn.source.roles
                            && (valueColumn.source.roles[name] === true);
                    }
                    DataRoleHelper.hasRoleInValueColumn = hasRoleInValueColumn;
                })(DataRoleHelper = dataview.DataRoleHelper || (dataview.DataRoleHelper = {}));
            })(dataview = utils.dataview || (utils.dataview = {}));
        })(utils = extensibility.utils || (extensibility.utils = {}));
    })(extensibility = powerbi.extensibility || (powerbi.extensibility = {}));
})(powerbi || (powerbi = {}));
/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var extensibility;
    (function (extensibility) {
        var utils;
        (function (utils) {
            var dataview;
            (function (dataview) {
                var DataViewObject;
                (function (DataViewObject) {
                    function getValue(object, propertyName, defaultValue) {
                        if (!object) {
                            return defaultValue;
                        }
                        var propertyValue = object[propertyName];
                        if (propertyValue === undefined) {
                            return defaultValue;
                        }
                        return propertyValue;
                    }
                    DataViewObject.getValue = getValue;
                    /** Gets the solid color from a fill property using only a propertyName */
                    function getFillColorByPropertyName(object, propertyName, defaultColor) {
                        var value = getValue(object, propertyName);
                        if (!value || !value.solid) {
                            return defaultColor;
                        }
                        return value.solid.color;
                    }
                    DataViewObject.getFillColorByPropertyName = getFillColorByPropertyName;
                })(DataViewObject = dataview.DataViewObject || (dataview.DataViewObject = {}));
            })(dataview = utils.dataview || (utils.dataview = {}));
        })(utils = extensibility.utils || (extensibility.utils = {}));
    })(extensibility = powerbi.extensibility || (powerbi.extensibility = {}));
})(powerbi || (powerbi = {}));
/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var extensibility;
    (function (extensibility) {
        var utils;
        (function (utils) {
            var dataview;
            (function (dataview) {
                var DataViewObjects;
                (function (DataViewObjects) {
                    /** Gets the value of the given object/property pair. */
                    function getValue(objects, propertyId, defaultValue) {
                        if (!objects) {
                            return defaultValue;
                        }
                        return dataview.DataViewObject.getValue(objects[propertyId.objectName], propertyId.propertyName, defaultValue);
                    }
                    DataViewObjects.getValue = getValue;
                    /** Gets an object from objects. */
                    function getObject(objects, objectName, defaultValue) {
                        if (objects && objects[objectName]) {
                            return objects[objectName];
                        }
                        return defaultValue;
                    }
                    DataViewObjects.getObject = getObject;
                    /** Gets the solid color from a fill property. */
                    function getFillColor(objects, propertyId, defaultColor) {
                        var value = getValue(objects, propertyId);
                        if (!value || !value.solid) {
                            return defaultColor;
                        }
                        return value.solid.color;
                    }
                    DataViewObjects.getFillColor = getFillColor;
                    function getCommonValue(objects, propertyId, defaultValue) {
                        var value = getValue(objects, propertyId, defaultValue);
                        if (value && value.solid) {
                            return value.solid.color;
                        }
                        if (value === undefined
                            || value === null
                            || (typeof value === "object" && !value.solid)) {
                            return defaultValue;
                        }
                        return value;
                    }
                    DataViewObjects.getCommonValue = getCommonValue;
                })(DataViewObjects = dataview.DataViewObjects || (dataview.DataViewObjects = {}));
            })(dataview = utils.dataview || (utils.dataview = {}));
        })(utils = extensibility.utils || (extensibility.utils = {}));
    })(extensibility = powerbi.extensibility || (powerbi.extensibility = {}));
})(powerbi || (powerbi = {}));
/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var extensibility;
    (function (extensibility) {
        var utils;
        (function (utils) {
            var dataview;
            (function (dataview) {
                // powerbi.extensibility.utils.dataview
                var DataRoleHelper = powerbi.extensibility.utils.dataview.DataRoleHelper;
                var converterHelper;
                (function (converterHelper) {
                    function categoryIsAlsoSeriesRole(dataView, seriesRoleName, categoryRoleName) {
                        if (dataView.categories && dataView.categories.length > 0) {
                            // Need to pivot data if our category soure is a series role
                            var category = dataView.categories[0];
                            return category.source &&
                                DataRoleHelper.hasRole(category.source, seriesRoleName) &&
                                DataRoleHelper.hasRole(category.source, categoryRoleName);
                        }
                        return false;
                    }
                    converterHelper.categoryIsAlsoSeriesRole = categoryIsAlsoSeriesRole;
                    function getSeriesName(source) {
                        return (source.groupName !== undefined)
                            ? source.groupName
                            : source.queryName;
                    }
                    converterHelper.getSeriesName = getSeriesName;
                    function isImageUrlColumn(column) {
                        var misc = getMiscellaneousTypeDescriptor(column);
                        return misc != null && misc.imageUrl === true;
                    }
                    converterHelper.isImageUrlColumn = isImageUrlColumn;
                    function isWebUrlColumn(column) {
                        var misc = getMiscellaneousTypeDescriptor(column);
                        return misc != null && misc.webUrl === true;
                    }
                    converterHelper.isWebUrlColumn = isWebUrlColumn;
                    function getMiscellaneousTypeDescriptor(column) {
                        return column
                            && column.type
                            && column.type.misc;
                    }
                    converterHelper.getMiscellaneousTypeDescriptor = getMiscellaneousTypeDescriptor;
                    function hasImageUrlColumn(dataView) {
                        if (!dataView || !dataView.metadata || _.isEmpty(dataView.metadata.columns))
                            return false;
                        return _.some(dataView.metadata.columns, function (column) { return isImageUrlColumn(column) === true; });
                    }
                    converterHelper.hasImageUrlColumn = hasImageUrlColumn;
                })(converterHelper = dataview.converterHelper || (dataview.converterHelper = {}));
            })(dataview = utils.dataview || (utils.dataview = {}));
        })(utils = extensibility.utils || (extensibility.utils = {}));
    })(extensibility = powerbi.extensibility || (powerbi.extensibility = {}));
})(powerbi || (powerbi = {}));
/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var extensibility;
    (function (extensibility) {
        var utils;
        (function (utils) {
            var dataview;
            (function (dataview) {
                var DataViewObjectsParser = (function () {
                    function DataViewObjectsParser() {
                    }
                    DataViewObjectsParser.getDefault = function () {
                        return new this();
                    };
                    DataViewObjectsParser.createPropertyIdentifier = function (objectName, propertyName) {
                        return {
                            objectName: objectName,
                            propertyName: propertyName
                        };
                    };
                    DataViewObjectsParser.parse = function (dataView) {
                        var dataViewObjectParser = this.getDefault(), properties;
                        if (!dataView || !dataView.metadata || !dataView.metadata.objects) {
                            return dataViewObjectParser;
                        }
                        properties = dataViewObjectParser.getProperties();
                        for (var objectName in properties) {
                            for (var propertyName in properties[objectName]) {
                                var defaultValue = dataViewObjectParser[objectName][propertyName];
                                dataViewObjectParser[objectName][propertyName] = dataview.DataViewObjects.getCommonValue(dataView.metadata.objects, properties[objectName][propertyName], defaultValue);
                            }
                        }
                        return dataViewObjectParser;
                    };
                    DataViewObjectsParser.isPropertyEnumerable = function (propertyName) {
                        return !DataViewObjectsParser.InnumerablePropertyPrefix.test(propertyName);
                    };
                    DataViewObjectsParser.enumerateObjectInstances = function (dataViewObjectParser, options) {
                        var dataViewProperties = dataViewObjectParser && dataViewObjectParser[options.objectName];
                        if (!dataViewProperties) {
                            return [];
                        }
                        var instance = {
                            objectName: options.objectName,
                            selector: null,
                            properties: {}
                        };
                        for (var key in dataViewProperties) {
                            if (_.has(dataViewProperties, key)) {
                                instance.properties[key] = dataViewProperties[key];
                            }
                        }
                        return {
                            instances: [instance]
                        };
                    };
                    DataViewObjectsParser.prototype.getProperties = function () {
                        var _this = this;
                        var properties = {}, objectNames = Object.keys(this);
                        objectNames.forEach(function (objectName) {
                            if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {
                                var propertyNames = Object.keys(_this[objectName]);
                                properties[objectName] = {};
                                propertyNames.forEach(function (propertyName) {
                                    if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {
                                        properties[objectName][propertyName] =
                                            DataViewObjectsParser.createPropertyIdentifier(objectName, propertyName);
                                    }
                                });
                            }
                        });
                        return properties;
                    };
                    DataViewObjectsParser.InnumerablePropertyPrefix = /^_/;
                    return DataViewObjectsParser;
                }());
                dataview.DataViewObjectsParser = DataViewObjectsParser;
            })(dataview = utils.dataview || (utils.dataview = {}));
        })(utils = extensibility.utils || (extensibility.utils = {}));
    })(extensibility = powerbi.extensibility || (powerbi.extensibility = {}));
})(powerbi || (powerbi = {}));

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var LayoutEnum;
                (function (LayoutEnum) {
                    LayoutEnum[LayoutEnum["Top"] = 0] = "Top";
                    LayoutEnum[LayoutEnum["Right"] = 1] = "Right";
                    LayoutEnum[LayoutEnum["Bottom"] = 2] = "Bottom";
                    LayoutEnum[LayoutEnum["Left"] = 3] = "Left";
                })(LayoutEnum = powerKpi.LayoutEnum || (powerKpi.LayoutEnum = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var HorizontalLayoutEnum;
                (function (HorizontalLayoutEnum) {
                    HorizontalLayoutEnum[HorizontalLayoutEnum["Left"] = 0] = "Left";
                    HorizontalLayoutEnum[HorizontalLayoutEnum["Right"] = 1] = "Right";
                })(HorizontalLayoutEnum = powerKpi.HorizontalLayoutEnum || (powerKpi.HorizontalLayoutEnum = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var LayoutToStyleEnum;
                (function (LayoutToStyleEnum) {
                    LayoutToStyleEnum[LayoutToStyleEnum["columnLayout"] = 0] = "columnLayout";
                    LayoutToStyleEnum[LayoutToStyleEnum["columnReversedLayout"] = 1] = "columnReversedLayout";
                    LayoutToStyleEnum[LayoutToStyleEnum["rowLayout"] = 2] = "rowLayout";
                    LayoutToStyleEnum[LayoutToStyleEnum["rowReversedLayout"] = 3] = "rowReversedLayout";
                })(LayoutToStyleEnum = powerKpi.LayoutToStyleEnum || (powerKpi.LayoutToStyleEnum = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var CommonCapabilitiesBuilder = /** @class */ (function () {
                    function CommonCapabilitiesBuilder() {
                    }
                    CommonCapabilitiesBuilder.prototype.makeDataRoles = function () {
                        return [
                            powerKpi.categoryColumn,
                            powerKpi.seriesColumn,
                            powerKpi.valuesColumn,
                            powerKpi.secondaryValuesColumn,
                            powerKpi.kpiColumn,
                            powerKpi.kpiIndicatorValueColumn,
                            powerKpi.secondKPIIndicatorValueColumn,
                        ];
                    };
                    CommonCapabilitiesBuilder.prototype.makeDataViewMappings = function () {
                        return [{
                                conditions: [
                                    (_a = {},
                                        _a[powerKpi.categoryColumn.name] = { max: 1 },
                                        _a[powerKpi.seriesColumn.name] = { max: 0 },
                                        _a[powerKpi.valuesColumn.name] = { max: 0 },
                                        _a[powerKpi.secondaryValuesColumn.name] = { max: 0 },
                                        _a[powerKpi.kpiColumn.name] = { max: 0 },
                                        _a[powerKpi.kpiIndicatorValueColumn.name] = { max: 0 },
                                        _a[powerKpi.secondKPIIndicatorValueColumn.name] = { max: 0 },
                                        _a),
                                    (_b = {},
                                        _b[powerKpi.categoryColumn.name] = { max: 1 },
                                        _b[powerKpi.seriesColumn.name] = { max: 1 },
                                        _b[powerKpi.valuesColumn.name] = { max: 1 },
                                        _b[powerKpi.secondaryValuesColumn.name] = { max: 1 },
                                        _b[powerKpi.kpiColumn.name] = { max: 0 },
                                        _b[powerKpi.kpiIndicatorValueColumn.name] = { max: 1 },
                                        _b[powerKpi.secondKPIIndicatorValueColumn.name] = { max: 1 },
                                        _b),
                                    (_c = {},
                                        _c[powerKpi.categoryColumn.name] = { max: 1 },
                                        _c[powerKpi.seriesColumn.name] = { max: 0 },
                                        _c[powerKpi.valuesColumn.name] = { min: 1 },
                                        _c[powerKpi.kpiColumn.name] = { max: 0 },
                                        _c[powerKpi.kpiIndicatorValueColumn.name] = { max: 1 },
                                        _c[powerKpi.secondKPIIndicatorValueColumn.name] = { max: 1 },
                                        _c),
                                    (_d = {},
                                        _d[powerKpi.categoryColumn.name] = { max: 1 },
                                        _d[powerKpi.seriesColumn.name] = { max: 1 },
                                        _d[powerKpi.valuesColumn.name] = { max: 1 },
                                        _d[powerKpi.secondaryValuesColumn.name] = { max: 1 },
                                        _d[powerKpi.kpiColumn.name] = { max: 1 },
                                        _d[powerKpi.kpiIndicatorValueColumn.name] = { max: 1 },
                                        _d[powerKpi.secondKPIIndicatorValueColumn.name] = { max: 1 },
                                        _d),
                                    (_e = {},
                                        _e[powerKpi.categoryColumn.name] = { max: 1 },
                                        _e[powerKpi.seriesColumn.name] = { max: 0 },
                                        _e[powerKpi.valuesColumn.name] = { min: 1 },
                                        _e[powerKpi.kpiColumn.name] = { max: 1 },
                                        _e[powerKpi.kpiIndicatorValueColumn.name] = { max: 1 },
                                        _e[powerKpi.secondKPIIndicatorValueColumn.name] = { max: 1 },
                                        _e),
                                ],
                                categorical: {
                                    categories: {
                                        for: {
                                            in: powerKpi.categoryColumn.name
                                        },
                                        dataReductionAlgorithm: {
                                            window: { count: 30000 }
                                        }
                                    },
                                    values: {
                                        group: {
                                            by: powerKpi.seriesColumn.name,
                                            select: [
                                                {
                                                    for: {
                                                        in: powerKpi.valuesColumn.name
                                                    }
                                                },
                                                {
                                                    for: {
                                                        in: powerKpi.secondaryValuesColumn.name
                                                    }
                                                },
                                                {
                                                    for: {
                                                        in: powerKpi.kpiColumn.name
                                                    }
                                                },
                                                {
                                                    for: {
                                                        in: powerKpi.kpiIndicatorValueColumn.name
                                                    }
                                                },
                                                {
                                                    for: {
                                                        in: powerKpi.secondKPIIndicatorValueColumn.name
                                                    }
                                                },
                                            ]
                                        }
                                    }
                                }
                            }];
                        var _a, _b, _c, _d, _e;
                    };
                    CommonCapabilitiesBuilder.prototype.makeObjects = function () {
                        var kpiIndicatorProperties = powerKpi.KPIIndicatorDescriptor
                            .createDefault()
                            .getObjectProperties();
                        kpiIndicatorProperties["show"] = this.boolean();
                        kpiIndicatorProperties["fontSize"] = this.fontSize("Size");
                        kpiIndicatorProperties["position"] = this.position("Position", powerKpi.horizontalPositionEnum);
                        kpiIndicatorProperties["shouldBackgroundColorMatchKpiColor"] = this.boolean("Background Match KPI Color");
                        var kpiIndicatorValue = this.getKPISettings("KPI Indicator Value", true, true);
                        kpiIndicatorValue.properties["matchKPIColor"] = this.boolean("Match KPI Indicator Color");
                        return {
                            layout: {
                                displayName: "Layout",
                                properties: {
                                    autoHideVisualComponents: this.boolean("Auto Scale"),
                                    auto: this.boolean("Auto"),
                                    layout: this.layout()
                                }
                            },
                            title: {
                                displayName: "Title",
                                properties: {}
                            },
                            subtitle: {
                                displayName: "Subtitle",
                                properties: {
                                    show: this.boolean(),
                                    titleText: {
                                        displayName: "Title Text",
                                        type: { text: true },
                                        suppressFormatPainterCopy: true,
                                    },
                                    fontColor: this.fontColor(),
                                    background: this.nullableColor(),
                                    alignment: {
                                        displayName: "Alignment",
                                        type: { formatting: { alignment: true } }
                                    },
                                    fontSize: this.fontSize(),
                                    fontFamily: this.fontFamily(),
                                }
                            },
                            kpiIndicator: {
                                displayName: "KPI Indicator",
                                description: "KPI Indicator options",
                                properties: kpiIndicatorProperties
                            },
                            kpiIndicatorValue: kpiIndicatorValue,
                            kpiIndicatorLabel: this.getKPIIndicatorLabel("KPI Indicator Label"),
                            secondKPIIndicatorValue: this.getKPISettings("Second KPI Indicator Value", true, true),
                            secondKPIIndicatorLabel: this.getKPIIndicatorLabel("Second KPI Indicator Label"),
                            actualValueKPI: this.getKPISettings("KPI Actual Value", true),
                            actualLabelKPI: this.getKPISettings("KPI Actual Label"),
                            dateValueKPI: this.getKPISettings("KPI Date Value", true, true),
                            dateLabelKPI: this.getKPISettings("KPI Date Label"),
                            labels: {
                                displayName: "Data Labels",
                                description: "Display data label options",
                                properties: {
                                    show: this.boolean(),
                                    color: this.color(),
                                    displayUnits: this.displayUnits(),
                                    precision: this.precision(),
                                    fontSize: this.fontSize(),
                                    fontFamily: this.fontFamily(),
                                    isBold: this.isBold(),
                                    isItalic: this.isItalic(),
                                    percentile: this.numeric("Label Density")
                                }
                            },
                            line: {
                                displayName: "Line",
                                properties: {
                                    fillColor: this.color(),
                                    shouldMatchKpiColor: {
                                        displayName: "Match KPI Color",
                                        type: { bool: true }
                                    },
                                    lineType: {
                                        displayName: "Type",
                                        type: { enumeration: powerKpi.lineTypeEnumType }
                                    },
                                    thickness: {
                                        displayName: "Thickness",
                                        type: { numeric: true }
                                    },
                                    rawOpacity: {
                                        displayName: "Opacity",
                                        type: { numeric: true }
                                    },
                                    rawAreaOpacity: {
                                        displayName: "Area Opacity",
                                        type: { numeric: true }
                                    },
                                    lineStyle: {
                                        displayName: "Style",
                                        type: { enumeration: powerKpi.lineStyleEnumType }
                                    },
                                    interpolation: {
                                        displayName: "Interpolation",
                                        type: { enumeration: powerKpi.lineInterpolationEnumType }
                                    },
                                    interpolationWithColorizedLine: {
                                        displayName: "Interpolation",
                                        type: { enumeration: powerKpi.lineInterpolationWithColorizedLineEnumType }
                                    },
                                }
                            },
                            // series, lineStyle, lineThickness are here for backward compatibility. It's been actually moved to line
                            series: {
                                displayName: "Data Colors",
                                properties: {
                                    fillColor: {
                                        displayName: "Color",
                                        type: {
                                            fill: {
                                                solid: {
                                                    color: true
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            lineStyle: {
                                displayName: "Line Style",
                                properties: {
                                    lineStyle: {
                                        type: {
                                            enumeration: powerKpi.lineStyleEnumType
                                        }
                                    }
                                }
                            },
                            lineThickness: {
                                displayName: "Line Thickness",
                                properties: {
                                    thickness: {
                                        type: {
                                            numeric: true
                                        }
                                    }
                                }
                            },
                            legend: {
                                displayName: "Legend",
                                description: "Display legend options",
                                properties: {
                                    show: this.boolean(),
                                    position: this.position("Position", powerKpi.positionEnum),
                                    showTitle: this.boolean("Title"),
                                    titleText: this.text("Legend Name"),
                                    labelColor: this.color(),
                                    fontFamily: this.fontFamily(),
                                    fontSize: this.fontSize()
                                }
                            },
                            xAxis: this.getAxis("X Axis"),
                            yAxis: this.getAxis("Y Axis", true),
                            secondaryYAxis: this.getAxis("Secondary Y Axis", true),
                            referenceLineOfXAxis: this.getAxisLineSettings("X Axis Reference Lines"),
                            referenceLineOfYAxis: this.getAxisLineSettings("Y Axis Reference Lines"),
                            secondaryReferenceLineOfYAxis: this.getAxisLineSettings("Secondary Y Axis Reference Lines"),
                            tooltipLabel: this.getTooltipSettings("Tooltip Label", true),
                            tooltipVariance: this.getTooltipSettings("Tooltip KPI Indicator Value", true),
                            secondTooltipVariance: this.getTooltipSettings("Second Tooltip KPI Indicator Value", true),
                            tooltipValues: this.getTooltipSettings("Tooltip Values")
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.makeSorting = function () {
                        return {
                            implicit: {
                                clauses: [{
                                        role: powerKpi.categoryColumn.name,
                                        direction: 1
                                    }]
                            }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.boolean = function (displayName) {
                        if (displayName === void 0) { displayName = "Show"; }
                        return {
                            displayName: displayName,
                            type: { bool: true }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.fontColor = function (displayName) {
                        if (displayName === void 0) { displayName = "Font Color"; }
                        return {
                            displayName: displayName,
                            type: { fill: { solid: { color: true } } }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.nullableColor = function (displayName) {
                        if (displayName === void 0) { displayName = "Background Color"; }
                        return {
                            displayName: displayName,
                            type: { fill: { solid: { color: { nullable: true } } } }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.fontSize = function (displayName) {
                        if (displayName === void 0) { displayName = "Text Size"; }
                        return {
                            displayName: displayName,
                            type: { formatting: { fontSize: true } }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.numeric = function (displayName, placeHolderText) {
                        if (displayName === void 0) { displayName = "Number"; }
                        return {
                            displayName: displayName,
                            placeHolderText: placeHolderText,
                            type: { numeric: true },
                            suppressFormatPainterCopy: true
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.color = function (displayName) {
                        if (displayName === void 0) { displayName = "Color"; }
                        return {
                            displayName: displayName,
                            type: { fill: { solid: { color: true } } }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.displayUnits = function (displayName) {
                        if (displayName === void 0) { displayName = "Display Units"; }
                        return {
                            displayName: displayName,
                            description: "Select the units (millions, billions, etc.)",
                            type: { formatting: { labelDisplayUnits: true } },
                            suppressFormatPainterCopy: true,
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.precision = function (displayName) {
                        if (displayName === void 0) { displayName = "Decimal Places"; }
                        return {
                            displayName: displayName,
                            description: "Select the number of decimal places to display",
                            placeHolderText: "Auto",
                            type: { numeric: true },
                            suppressFormatPainterCopy: true
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.fontFamily = function (displayName) {
                        if (displayName === void 0) { displayName = "Font Family"; }
                        return {
                            displayName: displayName,
                            type: { formatting: { fontFamily: true } }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.isBold = function (displayName) {
                        if (displayName === void 0) { displayName = "Bold"; }
                        return {
                            displayName: displayName,
                            type: { bool: true }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.isItalic = function (displayName) {
                        if (displayName === void 0) { displayName = "Italic"; }
                        return {
                            displayName: displayName,
                            type: { bool: true }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.text = function (displayName, placeHolderText) {
                        if (displayName === void 0) { displayName = "Text"; }
                        return {
                            displayName: displayName,
                            placeHolderText: placeHolderText,
                            type: { text: true }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.format = function (displayName, placeHolderText) {
                        if (displayName === void 0) { displayName = "Format"; }
                        return this.text(displayName, placeHolderText);
                    };
                    CommonCapabilitiesBuilder.prototype.position = function (displayName, positionEnum) {
                        return {
                            displayName: displayName,
                            type: { enumeration: positionEnum }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.layout = function (displayName) {
                        if (displayName === void 0) { displayName = "Layout"; }
                        return {
                            displayName: displayName,
                            type: { enumeration: powerKpi.layoutEnum }
                        };
                    };
                    CommonCapabilitiesBuilder.prototype.getKPISettings = function (displayName, isNumberFormattingSupported, isFormatSupported) {
                        if (isNumberFormattingSupported === void 0) { isNumberFormattingSupported = false; }
                        if (isFormatSupported === void 0) { isFormatSupported = false; }
                        var objectDescriptor = {
                            displayName: displayName,
                            properties: {
                                show: this.boolean(),
                                fontColor: this.fontColor(),
                                fontSize: this.fontSize(),
                                isBold: this.isBold(),
                                isItalic: this.isItalic(),
                                fontFamily: this.fontFamily(),
                            }
                        };
                        if (isFormatSupported) {
                            objectDescriptor.properties['format'] = this.format();
                        }
                        if (isNumberFormattingSupported) {
                            objectDescriptor.properties['displayUnits'] = this.displayUnits();
                            objectDescriptor.properties['precision'] = this.precision();
                        }
                        return objectDescriptor;
                    };
                    CommonCapabilitiesBuilder.prototype.getTooltipSettings = function (displayName, isFormatSupported) {
                        if (isFormatSupported === void 0) { isFormatSupported = false; }
                        var objectDescriptor = {
                            displayName: displayName,
                            properties: {
                                show: this.boolean(),
                                displayUnits: this.displayUnits(),
                                precision: this.precision(),
                                label: this.text("Label", "Variance")
                            }
                        };
                        if (isFormatSupported) {
                            objectDescriptor.properties['format'] = this.format();
                        }
                        return objectDescriptor;
                    };
                    CommonCapabilitiesBuilder.prototype.getAxis = function (displayName, isMinMaxCustomizable) {
                        if (isMinMaxCustomizable === void 0) { isMinMaxCustomizable = false; }
                        var descriptor = {
                            displayName: displayName,
                            properties: {
                                show: this.boolean(),
                                fontColor: this.fontColor(),
                                displayUnits: this.displayUnits(),
                                precision: this.precision(),
                                fontSize: this.fontSize(),
                                percentile: this.numeric("Ticks Density"),
                                fontFamily: this.fontFamily(),
                            }
                        };
                        if (isMinMaxCustomizable) {
                            descriptor.properties["min"] = this.numeric("Min", "Auto");
                            descriptor.properties["max"] = this.numeric("Max", "Auto");
                        }
                        return descriptor;
                    };
                    CommonCapabilitiesBuilder.prototype.getKPIIndicatorLabel = function (displayName) {
                        var kpiIndicatorLabel = this.getKPISettings(displayName);
                        kpiIndicatorLabel.properties["label"] = this.text("Label");
                        return kpiIndicatorLabel;
                    };
                    CommonCapabilitiesBuilder.prototype.getAxisLineSettings = function (displayName) {
                        return {
                            displayName: displayName,
                            properties: {
                                show: this.boolean(""),
                                color: this.color(),
                                thickness: this.numeric("Thickness")
                            }
                        };
                    };
                    return CommonCapabilitiesBuilder;
                }());
                powerKpi.CommonCapabilitiesBuilder = CommonCapabilitiesBuilder;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKpi.categoryColumn = {
                    name: "Axis",
                    displayName: "Axis",
                    kind: VisualDataRoleKind.Grouping
                };
                powerKpi.kpiColumn = {
                    name: "KPI",
                    displayName: "KPI Indicator Index",
                    kind: VisualDataRoleKind.Measure,
                };
                powerKpi.kpiIndicatorValueColumn = {
                    name: "KPIIndicatorValue",
                    displayName: "KPI Indicator Value",
                    kind: VisualDataRoleKind.Measure,
                };
                powerKpi.secondKPIIndicatorValueColumn = {
                    name: "SecondKPIIndicatorValue",
                    displayName: "Second KPI Indicator Value",
                    kind: VisualDataRoleKind.Measure,
                };
                powerKpi.valuesColumn = {
                    name: "Values",
                    displayName: "Values",
                    kind: VisualDataRoleKind.Measure,
                };
                powerKpi.seriesColumn = {
                    name: "SeriesColumn",
                    displayName: "Series",
                    kind: VisualDataRoleKind.Grouping,
                };
                powerKpi.secondaryValuesColumn = {
                    name: "SecondaryValues",
                    displayName: "Secondary Values",
                    kind: VisualDataRoleKind.Measure,
                };
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var CapabilitiesFactory = /** @class */ (function () {
                    function CapabilitiesFactory(builders) {
                        if (builders === void 0) { builders = []; }
                        this.builders = builders;
                    }
                    CapabilitiesFactory.prototype.getCapabilities = function () {
                        var dataRoles = [];
                        var dataViewMappings = [];
                        var objects = {};
                        var sorting = {};
                        this.builders.forEach(function (builder) {
                            dataRoles.push.apply(dataRoles, builder.makeDataRoles());
                            dataViewMappings.push.apply(dataViewMappings, builder.makeDataViewMappings());
                            objects = __assign({}, objects, builder.makeObjects());
                            sorting = __assign({}, sorting, builder.makeSorting());
                        });
                        return {
                            dataRoles: dataRoles,
                            objects: objects,
                            dataViewMappings: dataViewMappings,
                            sorting: sorting,
                        };
                    };
                    return CapabilitiesFactory;
                }());
                powerKpi.CapabilitiesFactory = CapabilitiesFactory;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var BaseDescriptor = /** @class */ (function () {
                    function BaseDescriptor() {
                    }
                    BaseDescriptor.prototype.applyDefault = function (defaultSettings) {
                        var _this = this;
                        if (!defaultSettings) {
                            return;
                        }
                        Object
                            .keys(defaultSettings)
                            .forEach(function (propertyName) {
                            _this[propertyName] = defaultSettings[propertyName];
                        });
                    };
                    BaseDescriptor.prototype.enumerateProperties = function () {
                        var properties = {};
                        for (var key in this) {
                            var shouldKeyBeEnumerated = this.shouldKeyBeEnumerated
                                ? this.shouldKeyBeEnumerated(key)
                                : this.hasOwnProperty(key);
                            if (shouldKeyBeEnumerated) {
                                if (this.getValueByKey) {
                                    properties[key] = this.getValueByKey(key);
                                }
                                else {
                                    properties[key] = this[key];
                                }
                            }
                        }
                        return properties;
                    };
                    return BaseDescriptor;
                }());
                powerKpi.BaseDescriptor = BaseDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var ViewportDescriptor = /** @class */ (function (_super) {
                    __extends(ViewportDescriptor, _super);
                    function ViewportDescriptor(_viewport) {
                        if (_viewport === void 0) { _viewport = { width: 0, height: 0 }; }
                        var _this = _super.call(this) || this;
                        _this._viewport = _viewport;
                        return _this;
                    }
                    return ViewportDescriptor;
                }(powerKpi.BaseDescriptor));
                powerKpi.ViewportDescriptor = ViewportDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var ShowDescriptor = /** @class */ (function (_super) {
                    __extends(ShowDescriptor, _super);
                    function ShowDescriptor(viewport) {
                        if (viewport === void 0) { viewport = { width: 0, height: 0 }; }
                        var _this = _super.call(this, viewport) || this;
                        _this._show = true;
                        _this.isAbleToBeShown = true;
                        Object.defineProperty(_this, "show", Object.getOwnPropertyDescriptor(ShowDescriptor.prototype, "show"));
                        return _this;
                    }
                    Object.defineProperty(ShowDescriptor.prototype, "show", {
                        get: function () {
                            if (!this.isAbleToBeShown) {
                                return false;
                            }
                            return this._show;
                        },
                        set: function (isShown) {
                            this._show = isShown;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    ShowDescriptor.prototype.parse = function (options) {
                        this.isAbleToBeShown = !(options
                            && options.isAutoHideBehaviorEnabled
                            && options.viewport
                            && this._viewport
                            &&
                                (options.viewport.width <= this._viewport.width
                                    ||
                                        options.viewport.height <= this._viewport.height));
                    };
                    return ShowDescriptor;
                }(powerKpi.ViewportDescriptor));
                powerKpi.ShowDescriptor = ShowDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var FontSizeDescriptor = /** @class */ (function (_super) {
                    __extends(FontSizeDescriptor, _super);
                    function FontSizeDescriptor(viewport) {
                        var _this = _super.call(this, viewport) || this;
                        _this.minFontSize = 8;
                        _this.isMinFontSizeApplied = false;
                        _this.viewportForFontSize8 = {
                            width: 210,
                            height: 210
                        };
                        _this._fontSize = _this.minFontSize; // This value is in pt.
                        Object.defineProperty(_this, "fontSize", Object.getOwnPropertyDescriptor(FontSizeDescriptor.prototype, "fontSize"));
                        return _this;
                    }
                    Object.defineProperty(FontSizeDescriptor.prototype, "fontSize", {
                        get: function () {
                            if (this.isMinFontSizeApplied) {
                                return this.minFontSize;
                            }
                            return this._fontSize;
                        },
                        set: function (fontSize) {
                            // Power BI returns numbers as strings for some unknown reason. This is why we convert value to number.
                            var parsedFontSize = +fontSize;
                            this._fontSize = isNaN(parsedFontSize)
                                ? this.minFontSize
                                : parsedFontSize;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    Object.defineProperty(FontSizeDescriptor.prototype, "fontSizeInPx", {
                        get: function () {
                            return PixelConverter.fromPointToPixel(this.fontSize);
                        },
                        enumerable: true,
                        configurable: true
                    });
                    FontSizeDescriptor.prototype.parse = function (options) {
                        _super.prototype.parse.call(this, options);
                        this.isMinFontSizeApplied =
                            options
                                && options.isAutoHideBehaviorEnabled
                                && options.viewport
                                &&
                                    (options.viewport.width <= this.viewportForFontSize8.width
                                        ||
                                            options.viewport.height <= this.viewportForFontSize8.height);
                    };
                    return FontSizeDescriptor;
                }(powerKpi.ShowDescriptor));
                powerKpi.FontSizeDescriptor = FontSizeDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var NumberDescriptorBase = /** @class */ (function (_super) {
                    __extends(NumberDescriptorBase, _super);
                    function NumberDescriptorBase(viewport, shouldPropertiesBeHiddenByType) {
                        if (shouldPropertiesBeHiddenByType === void 0) { shouldPropertiesBeHiddenByType = false; }
                        var _this = _super.call(this, viewport) || this;
                        _this.minPrecision = 0;
                        _this.maxPrecision = 17;
                        _this.format = undefined;
                        _this.defaultFormat = undefined;
                        _this.columnFormat = undefined;
                        _this.displayUnits = 0;
                        _this.precision = undefined;
                        _this.shouldNumericPropertiesBeHiddenByType = shouldPropertiesBeHiddenByType;
                        return _this;
                    }
                    NumberDescriptorBase.prototype.parse = function (options) {
                        _super.prototype.parse.call(this, options);
                        this.precision = this.getValidPrecision(this.precision);
                        this.hidePropertiesByType(options.type);
                    };
                    NumberDescriptorBase.prototype.hidePropertiesByType = function (type) {
                        if (type === void 0) { type = powerKpi.DataRepresentationTypeEnum.NumberType; }
                        this.applyDefaultFormatByType(type);
                        if (this.shouldNumericPropertiesBeHiddenByType
                            && type !== powerKpi.DataRepresentationTypeEnum.NumberType) {
                            this.hideNumberProperties();
                        }
                        if (!(type === powerKpi.DataRepresentationTypeEnum.NumberType
                            || type === powerKpi.DataRepresentationTypeEnum.DateType)) {
                            this.hideFormatProperty();
                        }
                    };
                    NumberDescriptorBase.prototype.getValidPrecision = function (precision) {
                        if (isNaN(precision)) {
                            return precision;
                        }
                        return Math.min(Math.max(this.minPrecision, precision), this.maxPrecision);
                    };
                    /**
                     * Hides properties at the formatting panel
                     */
                    NumberDescriptorBase.prototype.hideNumberProperties = function () {
                        Object.defineProperties(this, {
                            displayUnits: {
                                enumerable: false
                            },
                            precision: {
                                enumerable: false
                            }
                        });
                    };
                    NumberDescriptorBase.prototype.hideFormatProperty = function () {
                        Object.defineProperty(this, "format", {
                            enumerable: false
                        });
                    };
                    NumberDescriptorBase.prototype.applyDefaultFormatByType = function (type) {
                        if (this.defaultFormat) {
                            return;
                        }
                        switch (type) {
                            case powerKpi.DataRepresentationTypeEnum.DateType: {
                                this.defaultFormat = "%M/%d/yyyy";
                                if (this.format === undefined) {
                                    this.format = this.defaultFormat;
                                }
                                break;
                            }
                            case powerKpi.DataRepresentationTypeEnum.NumberType: {
                                this.defaultFormat = "#,0.00";
                                break;
                            }
                            default: {
                                this.defaultFormat = undefined;
                            }
                        }
                    };
                    NumberDescriptorBase.prototype.getFormat = function () {
                        return this.format || this.columnFormat || this.defaultFormat;
                    };
                    NumberDescriptorBase.prototype.setColumnFormat = function (format) {
                        if (!format) {
                            return;
                        }
                        this.columnFormat = format;
                    };
                    NumberDescriptorBase.prototype.getValueByKey = function (key) {
                        if (key === "format") {
                            return this.getFormat();
                        }
                        return this[key];
                    };
                    return NumberDescriptorBase;
                }(powerKpi.FontSizeDescriptor));
                powerKpi.NumberDescriptorBase = NumberDescriptorBase;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var AxisDescriptor = /** @class */ (function (_super) {
                    __extends(AxisDescriptor, _super);
                    function AxisDescriptor(viewportToBeHidden, viewportToIncreaseDensity, shouldPropertiesBeHiddenByType) {
                        if (shouldPropertiesBeHiddenByType === void 0) { shouldPropertiesBeHiddenByType = false; }
                        var _this = _super.call(this, viewportToBeHidden, shouldPropertiesBeHiddenByType) || this;
                        _this.shouldDensityBeAtMax = false;
                        _this.maxDensity = 100;
                        _this.fontColor = "rgb(0,0,0)";
                        _this._percentile = _this.maxDensity;
                        _this.fontFamily = "'Segoe UI Light', wf_segoe-ui_light, helvetica, arial, sans-serif";
                        _this.viewportToIncreaseDensity = viewportToIncreaseDensity;
                        Object.defineProperty(_this, "percentile", Object.getOwnPropertyDescriptor(AxisDescriptor.prototype, "percentile"));
                        return _this;
                    }
                    Object.defineProperty(AxisDescriptor.prototype, "percentile", {
                        // This property is an alias of density and it's defined special for Power BI. It's predefined PBI property name in order to create a percentage slider at format panel
                        get: function () {
                            if (this.shouldDensityBeAtMax) {
                                return this.maxDensity;
                            }
                            return this._percentile;
                        },
                        set: function (value) {
                            this._percentile = value;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    Object.defineProperty(AxisDescriptor.prototype, "density", {
                        get: function () {
                            return this.percentile;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    AxisDescriptor.prototype.parse = function (options) {
                        _super.prototype.parse.call(this, options);
                        this.shouldDensityBeAtMax = options.isAutoHideBehaviorEnabled
                            && this.viewportToIncreaseDensity
                            && options.viewport
                            && (options.viewport.width <= this.viewportToIncreaseDensity.width
                                ||
                                    options.viewport.height <= this.viewportToIncreaseDensity.height);
                    };
                    return AxisDescriptor;
                }(powerKpi.NumberDescriptorBase));
                powerKpi.AxisDescriptor = AxisDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var YAxisDescriptor = /** @class */ (function (_super) {
                    __extends(YAxisDescriptor, _super);
                    function YAxisDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.min = NaN;
                        _this.max = NaN;
                        return _this;
                    }
                    return YAxisDescriptor;
                }(powerKpi.AxisDescriptor));
                powerKpi.YAxisDescriptor = YAxisDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var AxisReferenceLineDescriptor = /** @class */ (function (_super) {
                    __extends(AxisReferenceLineDescriptor, _super);
                    function AxisReferenceLineDescriptor(isShown) {
                        if (isShown === void 0) { isShown = true; }
                        var _this = _super.call(this) || this;
                        _this._minThickness = 0.2;
                        _this._maxThickness = 5;
                        _this.color = "#e9e9e9";
                        _this.thickness = 1;
                        _this.show = isShown;
                        return _this;
                    }
                    AxisReferenceLineDescriptor.prototype.parse = function () {
                        this.thickness = Math.min(Math.max(this._minThickness, this.thickness), this._maxThickness);
                    };
                    return AxisReferenceLineDescriptor;
                }(powerKpi.BaseDescriptor));
                powerKpi.AxisReferenceLineDescriptor = AxisReferenceLineDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var SubtitleAlignment;
                (function (SubtitleAlignment) {
                    SubtitleAlignment[SubtitleAlignment["left"] = "left"] = "left";
                    SubtitleAlignment[SubtitleAlignment["center"] = "center"] = "center";
                    SubtitleAlignment[SubtitleAlignment["right"] = "right"] = "right";
                })(SubtitleAlignment = powerKpi.SubtitleAlignment || (powerKpi.SubtitleAlignment = {}));
                var SubtitleDescriptor = /** @class */ (function (_super) {
                    __extends(SubtitleDescriptor, _super);
                    function SubtitleDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.titleText = "";
                        _this.fontColor = "#A6A6A6";
                        _this.background = "";
                        _this.alignment = SubtitleAlignment.left;
                        _this.fontFamily = "'Segoe UI', wf_segoe-ui_normal, helvetica, arial, sans-serif";
                        return _this;
                    }
                    return SubtitleDescriptor;
                }(powerKpi.FontSizeDescriptor));
                powerKpi.SubtitleDescriptor = SubtitleDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                /**
                 * We use this class to move the Title option up above the Subtitle at the formatting panel
                 */
                var FakeTitleDescriptor = /** @class */ (function (_super) {
                    __extends(FakeTitleDescriptor, _super);
                    function FakeTitleDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.untrackedProperty = false;
                        return _this;
                    }
                    return FakeTitleDescriptor;
                }(powerKpi.BaseDescriptor));
                powerKpi.FakeTitleDescriptor = FakeTitleDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var LabelsDescriptor = /** @class */ (function (_super) {
                    __extends(LabelsDescriptor, _super);
                    function LabelsDescriptor(viewport) {
                        var _this = _super.call(this, viewport) || this;
                        _this.color = "rgb(119, 119, 119)";
                        _this.fontFamily = "'Segoe UI Light', wf_segoe-ui_light, helvetica, arial, sans-serif";
                        _this.isBold = false;
                        _this.isItalic = false;
                        _this.percentile = 100; // This property is an alias of density and it's defined special for Power BI. It's predefined PBI property name in order to create a percentage slider at format panel
                        _this.show = false;
                        return _this;
                    }
                    Object.defineProperty(LabelsDescriptor.prototype, "density", {
                        get: function () {
                            return this.percentile;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    return LabelsDescriptor;
                }(powerKpi.NumberDescriptorBase));
                powerKpi.LabelsDescriptor = LabelsDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var LegendDescriptor = /** @class */ (function (_super) {
                    __extends(LegendDescriptor, _super);
                    function LegendDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.position = "BottomCenter";
                        _this.showTitle = false;
                        _this.titleText = "";
                        _this.labelColor = "rgb(102, 102, 102)";
                        _this.fontFamily = "'Segoe UI Light', wf_segoe-ui_light, helvetica, arial, sans-serif";
                        return _this;
                    }
                    return LegendDescriptor;
                }(powerKpi.FontSizeDescriptor));
                powerKpi.LegendDescriptor = LegendDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var KPIIndicatorValueDescriptor = /** @class */ (function (_super) {
                    __extends(KPIIndicatorValueDescriptor, _super);
                    function KPIIndicatorValueDescriptor(viewport, shouldPropertiesBeHiddenByType) {
                        if (shouldPropertiesBeHiddenByType === void 0) { shouldPropertiesBeHiddenByType = false; }
                        var _this = _super.call(this, viewport, shouldPropertiesBeHiddenByType) || this;
                        _this.fontColor = "#333333";
                        _this.isBold = true;
                        _this.isItalic = false;
                        _this.fontFamily = "'Segoe UI', wf_segoe-ui_normal, helvetica, arial, sans-serif";
                        _this.fontSize = 12;
                        _this.displayUnits = 1;
                        return _this;
                    }
                    return KPIIndicatorValueDescriptor;
                }(powerKpi.NumberDescriptorBase));
                powerKpi.KPIIndicatorValueDescriptor = KPIIndicatorValueDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var KPIIndicatorLabelDescriptor = /** @class */ (function (_super) {
                    __extends(KPIIndicatorLabelDescriptor, _super);
                    function KPIIndicatorLabelDescriptor(viewport) {
                        var _this = _super.call(this, viewport) || this;
                        _this.fontColor = "#acacac";
                        _this.fontSize = 9;
                        _this.isBold = false;
                        return _this;
                    }
                    return KPIIndicatorLabelDescriptor;
                }(powerKpi.KPIIndicatorValueDescriptor));
                powerKpi.KPIIndicatorLabelDescriptor = KPIIndicatorLabelDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var KPIIndicatorDescriptor = /** @class */ (function (_super) {
                    __extends(KPIIndicatorDescriptor, _super);
                    function KPIIndicatorDescriptor(viewport) {
                        var _this = _super.call(this, viewport) || this;
                        _this.position = powerKpi.HorizontalLayoutEnum[powerKpi.HorizontalLayoutEnum.Left];
                        _this.shouldBackgroundColorMatchKpiColor = false;
                        _this._maxAmountOfKPIs = 5;
                        _this._default = Object.freeze({
                            color: null,
                            shape: null
                        });
                        _this.kpiIndexPropertyName = "kpiIndex";
                        _this._colors = [
                            "#01b7a8",
                            "#f2c80f",
                            "#fd625e",
                            "#a66999",
                            "#374649"
                        ];
                        _this._shapes = [
                            { name: "circle-full", displayName: "Circle" },
                            { name: "triangle", displayName: "Triangle" },
                            { name: "rhombus", displayName: "Diamond" },
                            { name: "square", displayName: "Square" },
                            { name: "flag", displayName: "Flag" },
                            { name: "exclamation", displayName: "Exclamation" },
                            { name: "checkmark", displayName: "Checkmark" },
                            { name: "arrow-up", displayName: "Arrow Up" },
                            { name: "arrow-right-up", displayName: "Arrow Right Up" },
                            { name: "arrow-right-down", displayName: "Arrow Right Down" },
                            { name: "arrow-down", displayName: "Arrow Down" },
                            { name: "caret-up", displayName: "Caret Up" },
                            { name: "caret-down", displayName: "Caret Down" },
                            { name: "circle-empty", displayName: "Circle Empty" },
                            { name: "circle-x", displayName: "Circle X" },
                            { name: "circle-exclamation", displayName: "Circle Exclamation" },
                            { name: "circle-checkmark", displayName: "Circle Checkmark" },
                            { name: "x", displayName: "X" },
                            { name: "star-empty", displayName: "Star Empty" },
                            { name: "star-full", displayName: "Star Full" }
                        ];
                        _this._properties = [
                            {
                                name: "color",
                                displayName: function (text) { return text; },
                                defaultValue: function (index) {
                                    var color = _this.getElementByIndex(_this._colors, index);
                                    return color || _this._colors[0];
                                },
                                type: { fill: { solid: { color: true } } }
                            },
                            {
                                name: "shape",
                                displayName: function () { return "    Indicator"; },
                                defaultValue: function (index) {
                                    var shape = _this.getElementByIndex(_this._shapes, index);
                                    return shape
                                        ? shape.name
                                        : _this._shapes[0].name;
                                },
                                type: { enumeration: _this.getEnumType() }
                            },
                            {
                                name: _this.kpiIndexPropertyName,
                                displayName: function () { return "    Value"; },
                                defaultValue: function (index) { return index + 1; },
                                type: { numeric: true },
                            },
                        ];
                        _this.applySettingToContext();
                        _this.show = true;
                        _this.fontSize = 12;
                        return _this;
                    }
                    KPIIndicatorDescriptor.prototype.getElementByIndex = function (setOfValues, index) {
                        var amountOfValues = setOfValues.length;
                        var currentIndex = index < amountOfValues
                            ? index
                            : Math.round(index / amountOfValues);
                        return setOfValues[currentIndex];
                    };
                    KPIIndicatorDescriptor.prototype.applySettingToContext = function () {
                        var _this = this;
                        var _loop_1 = function (index) {
                            this_1._properties.forEach(function (property) {
                                var indexedName = _this.getPropertyName(property.name, index);
                                _this[indexedName] = typeof property.defaultValue === "function"
                                    ? property.defaultValue(index)
                                    : property.defaultValue;
                            });
                        };
                        var this_1 = this;
                        for (var index = 0; index < this._maxAmountOfKPIs; index++) {
                            _loop_1(index);
                        }
                    };
                    KPIIndicatorDescriptor.prototype.getEnumType = function () {
                        var members = this._shapes.map(function (shape) {
                            return {
                                value: shape.name,
                                displayName: shape.displayName
                            };
                        });
                        return powerbi.createEnumType(members);
                    };
                    KPIIndicatorDescriptor.prototype.getPropertyName = function (name, index) {
                        return name + "_" + index;
                    };
                    KPIIndicatorDescriptor.prototype.getObjectProperties = function () {
                        var _this = this;
                        var objectProperties = {};
                        var _loop_2 = function (index) {
                            this_2._properties.forEach(function (property) {
                                var indexedName = _this.getPropertyName(property.name, index);
                                objectProperties[indexedName] = {
                                    displayName: property.displayName("KPI " + (index + 1)),
                                    type: property.type
                                };
                            });
                        };
                        var this_2 = this;
                        for (var index = 0; index < this._maxAmountOfKPIs; index++) {
                            _loop_2(index);
                        }
                        return objectProperties;
                    };
                    KPIIndicatorDescriptor.prototype.getCurrentKPI = function (kpiIndex) {
                        var _this = this;
                        if (!isNaN(kpiIndex) && kpiIndex !== null) {
                            var _loop_3 = function (index) {
                                var currentKPIIndex = this_3[this_3.getPropertyName(this_3.kpiIndexPropertyName, index)];
                                if (currentKPIIndex === kpiIndex) {
                                    return { value: this_3._properties.reduce(function (current, property) {
                                            var indexedName = _this.getPropertyName(property.name, index);
                                            current[property.name] = _this[indexedName];
                                            return current;
                                        }, {}) };
                                }
                            };
                            var this_3 = this;
                            for (var index = 0; index < this._maxAmountOfKPIs; index++) {
                                var state_1 = _loop_3(index);
                                if (typeof state_1 === "object")
                                    return state_1.value;
                            }
                        }
                        return this._default;
                    };
                    KPIIndicatorDescriptor.createDefault = function () {
                        return new KPIIndicatorDescriptor();
                    };
                    return KPIIndicatorDescriptor;
                }(powerKpi.FontSizeDescriptor));
                powerKpi.KPIIndicatorDescriptor = KPIIndicatorDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var KPIIndicatorCustomizableLabelDescriptor = /** @class */ (function (_super) {
                    __extends(KPIIndicatorCustomizableLabelDescriptor, _super);
                    function KPIIndicatorCustomizableLabelDescriptor(viewport) {
                        var _this = _super.call(this, viewport) || this;
                        _this.label = "";
                        _this.show = false;
                        return _this;
                    }
                    KPIIndicatorCustomizableLabelDescriptor.prototype.isShown = function () {
                        return this.show && !!this.label;
                    };
                    return KPIIndicatorCustomizableLabelDescriptor;
                }(powerKpi.KPIIndicatorLabelDescriptor));
                powerKpi.KPIIndicatorCustomizableLabelDescriptor = KPIIndicatorCustomizableLabelDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var KPIIndicatorValueSignDescriptor = /** @class */ (function (_super) {
                    __extends(KPIIndicatorValueSignDescriptor, _super);
                    function KPIIndicatorValueSignDescriptor(viewport) {
                        var _this = _super.call(this, viewport) || this;
                        _this.matchKPIColor = true;
                        /**
                         * Below is small hack to change order of properties
                         * The matchKPIColor should be before fontColor for better UX
                         */
                        delete _this.fontColor;
                        _this.fontColor = "#333333";
                        return _this;
                    }
                    KPIIndicatorValueSignDescriptor.prototype.parse = function (options) {
                        _super.prototype.parse.call(this, options);
                        this.makePropertyFontColorPropertyEnumerable(!this.matchKPIColor);
                    };
                    KPIIndicatorValueSignDescriptor.prototype.makePropertyFontColorPropertyEnumerable = function (isEnumerable) {
                        Object.defineProperty(this, "fontColor", {
                            enumerable: isEnumerable
                        });
                    };
                    return KPIIndicatorValueSignDescriptor;
                }(powerKpi.KPIIndicatorValueDescriptor));
                powerKpi.KPIIndicatorValueSignDescriptor = KPIIndicatorValueSignDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var LineInterpolation;
                (function (LineInterpolation) {
                    LineInterpolation["linear"] = "linear";
                    LineInterpolation["stepBefore"] = "step-before";
                    LineInterpolation["stepAfter"] = "step-after";
                    LineInterpolation["basis"] = "basis";
                    LineInterpolation["basisOpen"] = "basis-open";
                    LineInterpolation["basisClosed"] = "basis-closed";
                    LineInterpolation["bundle"] = "bundle";
                    LineInterpolation["cardinal"] = "cardinal";
                    LineInterpolation["cardinalOpen"] = "cardinal-open";
                    LineInterpolation["cardinalClosed"] = "cardinal-closed";
                    LineInterpolation["monotone"] = "monotone";
                })(LineInterpolation = powerKpi.LineInterpolation || (powerKpi.LineInterpolation = {}));
                powerKpi.lineInterpolationEnumType = powerbi.createEnumType([
                    {
                        value: LineInterpolation.linear,
                        displayName: "Linear"
                    },
                    {
                        value: LineInterpolation.stepBefore,
                        displayName: "Step-before"
                    },
                    {
                        value: LineInterpolation.stepAfter,
                        displayName: "Step-after"
                    },
                    {
                        value: LineInterpolation.basis,
                        displayName: "Basis"
                    },
                    {
                        value: LineInterpolation.basisOpen,
                        displayName: "Basis-open"
                    },
                    {
                        value: LineInterpolation.basisClosed,
                        displayName: "Basis-closed"
                    },
                    {
                        value: LineInterpolation.bundle,
                        displayName: "Bundle"
                    },
                    {
                        value: LineInterpolation.cardinal,
                        displayName: "Cardinal"
                    },
                    {
                        value: LineInterpolation.cardinalOpen,
                        displayName: "Cardinal-open"
                    },
                    {
                        value: LineInterpolation.cardinalClosed,
                        displayName: "Cardinal-closed"
                    },
                    {
                        value: LineInterpolation.monotone,
                        displayName: "Monotone"
                    },
                ]);
                powerKpi.lineInterpolationWithColorizedLineEnumType = powerbi.createEnumType([
                    {
                        value: LineInterpolation.linear,
                        displayName: "Linear"
                    },
                    {
                        value: LineInterpolation.stepBefore,
                        displayName: "Step-before"
                    },
                    {
                        value: LineInterpolation.stepAfter,
                        displayName: "Step-after"
                    },
                ]);
                var LineStyle;
                (function (LineStyle) {
                    LineStyle["solidLine"] = "solidLine";
                    LineStyle["dottedLine"] = "dottedLine";
                    LineStyle["dashedLine"] = "dashedLine";
                    LineStyle["dotDashedLine"] = "dotDashedLine";
                })(LineStyle = powerKpi.LineStyle || (powerKpi.LineStyle = {}));
                powerKpi.lineStyleEnumType = powerbi.createEnumType([
                    {
                        value: LineStyle.solidLine,
                        displayName: "Solid"
                    },
                    {
                        value: LineStyle.dottedLine,
                        displayName: "Dotted"
                    },
                    {
                        value: LineStyle.dashedLine,
                        displayName: "Dashed"
                    },
                    {
                        value: LineStyle.dotDashedLine,
                        displayName: "Dot-dashed"
                    },
                ]);
                var LineType;
                (function (LineType) {
                    LineType["line"] = "line";
                    LineType["area"] = "area";
                    LineType["column"] = "column";
                })(LineType = powerKpi.LineType || (powerKpi.LineType = {}));
                powerKpi.lineTypeEnumType = powerbi.createEnumType([
                    {
                        value: LineType.line,
                        displayName: "Line",
                    },
                    {
                        value: LineType.area,
                        displayName: "Area",
                    },
                ]);
                var LineDescriptor = /** @class */ (function (_super) {
                    __extends(LineDescriptor, _super);
                    function LineDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.minThickness = 0.25;
                        _this.maxThickness = 10;
                        _this.minOpacity = 15;
                        _this.maxOpacity = 100;
                        _this.fillColor = undefined;
                        _this.shouldMatchKpiColor = false;
                        _this.lineType = LineType.line;
                        _this.thickness = 2;
                        _this.rawOpacity = 100;
                        _this.rawAreaOpacity = 50;
                        _this.lineStyle = LineStyle.solidLine;
                        _this.interpolation = LineInterpolation.linear;
                        _this.interpolationWithColorizedLine = LineInterpolation.linear;
                        return _this;
                    }
                    Object.defineProperty(LineDescriptor.prototype, "opacity", {
                        get: function () {
                            return this.convertOpacityToCssFormat(this.rawOpacity);
                        },
                        enumerable: true,
                        configurable: true
                    });
                    Object.defineProperty(LineDescriptor.prototype, "areaOpacity", {
                        get: function () {
                            return this.convertOpacityToCssFormat(this.rawAreaOpacity);
                        },
                        enumerable: true,
                        configurable: true
                    });
                    LineDescriptor.prototype.convertOpacityToCssFormat = function (opacity) {
                        return opacity / 100;
                    };
                    LineDescriptor.prototype.getInterpolation = function () {
                        return this.shouldMatchKpiColor
                            ? this.interpolationWithColorizedLine
                            : this.interpolation;
                    };
                    LineDescriptor.prototype.parse = function () {
                        this.thickness = Math.min(Math.max(this.minThickness, this.thickness), this.maxThickness);
                        this.rawOpacity = this.getOpacity(this.rawOpacity);
                        this.rawAreaOpacity = this.getOpacity(this.rawAreaOpacity);
                    };
                    LineDescriptor.prototype.getOpacity = function (opacity) {
                        return Math.min(this.maxOpacity, Math.max(this.minOpacity, opacity));
                    };
                    LineDescriptor.prototype.shouldKeyBeEnumerated = function (key) {
                        if (key === "interpolation" && this.shouldMatchKpiColor) {
                            return false;
                        }
                        if (key === "interpolationWithColorizedLine" && !this.shouldMatchKpiColor) {
                            return false;
                        }
                        if (key === "rawAreaOpacity" && this.lineType !== LineType.area) {
                            return false;
                        }
                        return this.hasOwnProperty(key);
                    };
                    return LineDescriptor;
                }(powerKpi.BaseDescriptor));
                powerKpi.LineDescriptor = LineDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                powerKpi.horizontalPositionEnum = powerbi.createEnumType([
                    {
                        value: "Left",
                        displayName: "Left"
                    },
                    {
                        value: "Right",
                        displayName: "Right"
                    },
                ]);
                powerKpi.layoutEnum = powerbi.createEnumType([
                    { value: "Top", displayName: "Top" },
                    { value: "Left", displayName: "Left" },
                    { value: "Bottom", displayName: "Bottom" },
                    { value: "Right", displayName: "Right" }
                ]);
                powerKpi.positionEnum = powerbi.createEnumType([
                    { value: "Top", displayName: "Top" },
                    { value: "Bottom", displayName: "Bottom" },
                    { value: "Left", displayName: "Left" },
                    { value: "Right", displayName: "Right" },
                    { value: "TopCenter", displayName: "Top Center" },
                    { value: "BottomCenter", displayName: "Bottom Center" },
                    { value: "LeftCenter", displayName: "Left Center" },
                    { value: "RightCenter", displayName: "Right Center" }
                ]);
                var LayoutDescriptor = /** @class */ (function (_super) {
                    __extends(LayoutDescriptor, _super);
                    function LayoutDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this._minSupportedHeight = 250;
                        _this.autoHideVisualComponents = true;
                        _this.auto = true;
                        _this.layout = powerKpi.LayoutEnum[powerKpi.LayoutEnum.Top];
                        return _this;
                    }
                    LayoutDescriptor.prototype.parse = function (options) {
                        if (this.auto) {
                            Object.defineProperty(this, "layout", {
                                enumerable: false
                            });
                            if (options.viewport.height < this._minSupportedHeight) {
                                this._layout = powerKpi.LayoutEnum[powerKpi.LayoutEnum.Left];
                            }
                            else {
                                this._layout = powerKpi.LayoutEnum[powerKpi.LayoutEnum.Top];
                            }
                            return;
                        }
                        this._layout = this.layout;
                    };
                    LayoutDescriptor.prototype.getLayout = function () {
                        return this._layout;
                    };
                    return LayoutDescriptor;
                }(powerKpi.BaseDescriptor));
                powerKpi.LayoutDescriptor = LayoutDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var TooltipDescriptor = /** @class */ (function (_super) {
                    __extends(TooltipDescriptor, _super);
                    function TooltipDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.show = true;
                        return _this;
                    }
                    return TooltipDescriptor;
                }(powerKpi.NumberDescriptorBase));
                powerKpi.TooltipDescriptor = TooltipDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var TooltipLabelDescriptor = /** @class */ (function (_super) {
                    __extends(TooltipLabelDescriptor, _super);
                    function TooltipLabelDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.label = "";
                        return _this;
                    }
                    return TooltipLabelDescriptor;
                }(powerKpi.TooltipDescriptor));
                powerKpi.TooltipLabelDescriptor = TooltipLabelDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var DotsDescriptor = /** @class */ (function (_super) {
                    __extends(DotsDescriptor, _super);
                    function DotsDescriptor() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.radiusFactor = 1.4;
                        return _this;
                    }
                    DotsDescriptor.prototype.getMarginByThickness = function (thickness, defaultMargin) {
                        if (isNaN(thickness)) {
                            return defaultMargin;
                        }
                        var currentThickness = thickness * this.radiusFactor;
                        return {
                            top: currentThickness,
                            right: currentThickness,
                            bottom: currentThickness,
                            left: currentThickness
                        };
                    };
                    return DotsDescriptor;
                }(powerKpi.BaseDescriptor));
                powerKpi.DotsDescriptor = DotsDescriptor;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // powerbi.extensibility.utils.dataview
                var DataViewObjects = powerbi.extensibility.utils.dataview.DataViewObjects;
                var DataViewObjectsParser = powerbi.extensibility.utils.dataview.DataViewObjectsParser;
                // powerbi.extensibility.utils.dataview
                var SettingsBase = /** @class */ (function (_super) {
                    __extends(SettingsBase, _super);
                    function SettingsBase() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    SettingsBase.prototype.parse = function (dataView) {
                        return this.parseObjects(dataView
                            && dataView.metadata
                            && dataView.metadata.objects);
                    };
                    SettingsBase.prototype.parseObjects = function (objects) {
                        if (objects) {
                            var properties = this.getProperties();
                            for (var objectName in properties) {
                                for (var propertyName in properties[objectName]) {
                                    var defaultValue = this[objectName][propertyName];
                                    this[objectName][propertyName] = DataViewObjects.getCommonValue(objects, properties[objectName][propertyName], defaultValue);
                                }
                                this.processDescriptor(this[objectName]);
                            }
                        }
                        return this;
                    };
                    SettingsBase.prototype.processDescriptor = function (descriptor) {
                        if (!descriptor || !descriptor.parse) {
                            return;
                        }
                        descriptor.parse();
                    };
                    SettingsBase.prototype.enumerateObjectInstances = function (options) {
                        var descriptor = this[options.objectName];
                        if (!descriptor) {
                            return [];
                        }
                        return [{
                                objectName: options.objectName,
                                selector: null,
                                properties: descriptor.enumerateProperties(),
                            }];
                    };
                    return SettingsBase;
                }(DataViewObjectsParser));
                powerKpi.SettingsBase = SettingsBase;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var SeriesSettings = /** @class */ (function (_super) {
                    __extends(SeriesSettings, _super);
                    function SeriesSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.line = new powerKpi.LineDescriptor();
                        return _this;
                    }
                    SeriesSettings.prototype.parseObjects = function (objects) {
                        if (objects) {
                            var lineObject = (objects.line || {});
                            if (!lineObject.fillColor
                                && objects.series
                                && objects.series.fillColor) {
                                lineObject.fillColor = objects.series.fillColor;
                            }
                            if (!lineObject.lineStyle
                                && objects.lineStyle
                                && objects.lineStyle.lineStyle !== undefined
                                && objects.lineStyle.lineStyle !== null) {
                                lineObject.lineStyle = objects.lineStyle.lineStyle;
                            }
                            if (!lineObject.thickness
                                && objects.lineThickness
                                && objects.lineThickness.thickness !== undefined
                                && objects.lineThickness.thickness !== null) {
                                lineObject.thickness = objects.lineThickness.thickness;
                            }
                            return _super.prototype.parseObjects.call(this, __assign({}, objects, { line: lineObject }));
                        }
                        return _super.prototype.parseObjects.call(this, objects);
                    };
                    return SeriesSettings;
                }(powerKpi.SettingsBase));
                powerKpi.SeriesSettings = SeriesSettings;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                /* These viewports describe the minimal viewport for each visual component */
                var kpiCaptionViewport = {
                    width: 90,
                    height: 90
                };
                var kpiLabelViewport = {
                    width: 165,
                    height: 165
                };
                var subtitleViewport = {
                    width: 150,
                    height: 150
                };
                var legendViewport = {
                    width: 120,
                    height: 120
                };
                var LabelsViewport = {
                    width: 80,
                    height: 80
                };
                var axisViewportToDecreaseFontSize = {
                    width: 70,
                    height: 70
                };
                var axisViewportToIncreaseDensity = {
                    width: 250,
                    height: 250
                };
                var Settings = /** @class */ (function (_super) {
                    __extends(Settings, _super);
                    function Settings() {
                        var _this = _super.call(this) || this;
                        _this.layout = new powerKpi.LayoutDescriptor();
                        _this.title = new powerKpi.FakeTitleDescriptor();
                        _this.subtitle = new powerKpi.SubtitleDescriptor(subtitleViewport);
                        _this.kpiIndicator = new powerKpi.KPIIndicatorDescriptor(kpiCaptionViewport);
                        _this.kpiIndicatorValue = new powerKpi.KPIIndicatorValueSignDescriptor(kpiCaptionViewport);
                        _this.kpiIndicatorLabel = new powerKpi.KPIIndicatorCustomizableLabelDescriptor(kpiLabelViewport);
                        _this.secondKPIIndicatorValue = new powerKpi.KPIIndicatorValueDescriptor(kpiCaptionViewport);
                        _this.secondKPIIndicatorLabel = new powerKpi.KPIIndicatorCustomizableLabelDescriptor(kpiLabelViewport);
                        _this.actualValueKPI = new powerKpi.KPIIndicatorValueDescriptor(kpiCaptionViewport);
                        _this.actualLabelKPI = new powerKpi.KPIIndicatorLabelDescriptor(kpiLabelViewport);
                        _this.dateValueKPI = new powerKpi.KPIIndicatorValueDescriptor(kpiCaptionViewport, true);
                        _this.dateLabelKPI = new powerKpi.KPIIndicatorLabelDescriptor(kpiLabelViewport);
                        _this.labels = new powerKpi.LabelsDescriptor(LabelsViewport);
                        _this.line = new powerKpi.LineDescriptor();
                        _this.dots = new powerKpi.DotsDescriptor();
                        _this.legend = new powerKpi.LegendDescriptor(legendViewport);
                        _this.xAxis = new powerKpi.AxisDescriptor(axisViewportToDecreaseFontSize, axisViewportToIncreaseDensity, true);
                        _this.yAxis = new powerKpi.YAxisDescriptor(axisViewportToDecreaseFontSize, axisViewportToIncreaseDensity, false);
                        _this.secondaryYAxis = new powerKpi.YAxisDescriptor(axisViewportToDecreaseFontSize, axisViewportToIncreaseDensity, false);
                        _this.referenceLineOfXAxis = new powerKpi.AxisReferenceLineDescriptor(false);
                        _this.referenceLineOfYAxis = new powerKpi.AxisReferenceLineDescriptor();
                        _this.secondaryReferenceLineOfYAxis = new powerKpi.AxisReferenceLineDescriptor(false);
                        _this.tooltipLabel = new powerKpi.TooltipDescriptor(undefined, true);
                        _this.tooltipVariance = new powerKpi.TooltipLabelDescriptor();
                        _this.secondTooltipVariance = new powerKpi.TooltipLabelDescriptor();
                        _this.tooltipValues = new powerKpi.TooltipDescriptor();
                        var percentageFormat = "+0.00 %;-0.00 %;0.00 %";
                        _this.kpiIndicatorValue.defaultFormat = percentageFormat;
                        _this.secondKPIIndicatorValue.defaultFormat = percentageFormat;
                        _this.tooltipVariance.defaultFormat = percentageFormat;
                        _this.secondTooltipVariance.defaultFormat = percentageFormat;
                        return _this;
                    }
                    Settings.prototype.parseSettings = function (viewport, type) {
                        var _this = this;
                        var options = {
                            viewport: viewport,
                            type: type,
                            isAutoHideBehaviorEnabled: this.layout.autoHideVisualComponents
                        };
                        Object.keys(this)
                            .forEach(function (settingName) {
                            var settingsObj = _this[settingName];
                            if (settingsObj.parse) {
                                settingsObj.parse(options);
                            }
                        });
                    };
                    Settings.prototype.processDescriptor = function (descriptor) { };
                    return Settings;
                }(powerKpi.SettingsBase));
                powerKpi.Settings = Settings;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var DataRepresentationScale = /** @class */ (function () {
                    function DataRepresentationScale(scale, isOrdinal) {
                        if (scale === void 0) { scale = null; }
                        if (isOrdinal === void 0) { isOrdinal = false; }
                        this.isOrdinalScale = false;
                        this.baseScale = scale;
                        this.isOrdinalScale = isOrdinal;
                    }
                    DataRepresentationScale.create = function () {
                        return new DataRepresentationScale();
                    };
                    DataRepresentationScale.prototype.domain = function (values, type) {
                        var scale;
                        if (values && values.length) {
                            switch (type) {
                                case powerKpi.DataRepresentationTypeEnum.DateType: {
                                    scale = d3.time.scale();
                                    break;
                                }
                                case powerKpi.DataRepresentationTypeEnum.NumberType: {
                                    scale = d3.scale.linear();
                                    break;
                                }
                                case powerKpi.DataRepresentationTypeEnum.StringType: {
                                    scale = d3.scale.ordinal();
                                    this.isOrdinalScale = true;
                                    break;
                                }
                            }
                        }
                        if (scale) {
                            scale.domain(values);
                        }
                        this.baseScale = scale;
                        return this;
                    };
                    DataRepresentationScale.prototype.getDomain = function () {
                        if (!this.baseScale) {
                            return [];
                        }
                        return this.baseScale.domain() || [];
                    };
                    DataRepresentationScale.prototype.scale = function (value) {
                        if (!this.baseScale) {
                            return 0;
                        }
                        return this.baseScale(value);
                    };
                    DataRepresentationScale.prototype.copy = function () {
                        return new DataRepresentationScale(this.baseScale && this.baseScale.copy(), this.isOrdinalScale);
                    };
                    DataRepresentationScale.prototype.range = function (rangeValues) {
                        if (this.baseScale) {
                            if (this.isOrdinalScale) {
                                this.baseScale.rangePoints(rangeValues);
                            }
                            else {
                                this.baseScale.range(rangeValues);
                            }
                        }
                        return this;
                    };
                    Object.defineProperty(DataRepresentationScale.prototype, "isOrdinal", {
                        get: function () {
                            return this.isOrdinalScale;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    return DataRepresentationScale;
                }());
                powerKpi.DataRepresentationScale = DataRepresentationScale;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var DataRepresentationTypeEnum;
                (function (DataRepresentationTypeEnum) {
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["None"] = 0] = "None";
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["DateType"] = 1] = "DateType";
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["NumberType"] = 2] = "NumberType";
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["StringType"] = 3] = "StringType";
                })(DataRepresentationTypeEnum = powerKpi.DataRepresentationTypeEnum || (powerKpi.DataRepresentationTypeEnum = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var DataRepresentationPointFilter = /** @class */ (function () {
                    function DataRepresentationPointFilter() {
                    }
                    DataRepresentationPointFilter.prototype.isPointValid = function (point) {
                        return point
                            && point.y !== null
                            && point.y !== undefined
                            && !isNaN(point.y);
                    };
                    DataRepresentationPointFilter.prototype.groupPointByColor = function (gradientPoints, point) {
                        if (!this.isPointValid(point) || !gradientPoints) {
                            return;
                        }
                        var currentGradient = gradientPoints.slice(-1)[0];
                        if (!currentGradient) {
                            gradientPoints.push({
                                color: point.color,
                                points: [point],
                            });
                        }
                        else if (currentGradient && currentGradient.color === point.color) {
                            currentGradient.points.push(point);
                        }
                        else if (currentGradient && currentGradient.color !== point.color) {
                            currentGradient.points.push(point);
                            gradientPoints.push({
                                color: point.color,
                                points: [point],
                            });
                        }
                    };
                    return DataRepresentationPointFilter;
                }());
                powerKpi.DataRepresentationPointFilter = DataRepresentationPointFilter;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var VarianceConverter = /** @class */ (function () {
                    function VarianceConverter() {
                        this.pointFilter = new powerKpi.DataRepresentationPointFilter();
                    }
                    VarianceConverter.prototype.getVarianceByCurrentPointsOfSeries = function (firstSeries, secondSeries) {
                        if (!this.isSeriesValid(firstSeries) || !this.isSeriesValid(secondSeries)) {
                            return NaN;
                        }
                        var firstPoint = firstSeries.current, index = firstPoint.index, secondPoint = !isNaN(index) && secondSeries.points[index];
                        return this.getVarianceByPoints(firstPoint, secondPoint);
                    };
                    VarianceConverter.prototype.isSeriesValid = function (series) {
                        return series && series.current && series.current.y !== null;
                    };
                    VarianceConverter.prototype.getVarianceByPoints = function (firstPoint, secondePoint) {
                        if (!this.pointFilter.isPointValid(firstPoint) || !this.pointFilter.isPointValid(secondePoint)) {
                            return NaN;
                        }
                        return this.getVariance(firstPoint.y, secondePoint.y);
                    };
                    VarianceConverter.prototype.getVariance = function (firstValue, secondValue) {
                        return firstValue / secondValue - 1;
                    };
                    return VarianceConverter;
                }());
                powerKpi.VarianceConverter = VarianceConverter;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var SelectionIdBuilder = powerbi.visuals.SelectionIdBuilder;
                var DataConverter = /** @class */ (function (_super) {
                    __extends(DataConverter, _super);
                    function DataConverter() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    DataConverter.prototype.convert = function (options) {
                        var dataRepresentation = this.process(options);
                        this.postProcess(dataRepresentation);
                        return dataRepresentation;
                    };
                    DataConverter.prototype.process = function (options) {
                        var _this = this;
                        var dataView = options.dataView, viewport = options.viewport, style = options.style;
                        var settings = powerKpi.Settings.parse(dataView);
                        var type = powerKpi.DataRepresentationTypeEnum.None;
                        var dataRepresentation = {
                            viewport: viewport,
                            settings: settings,
                            series: [],
                            groups: [],
                            sortedSeries: [],
                            x: {
                                type: type,
                                values: [],
                                min: undefined,
                                max: undefined,
                                metadata: undefined,
                                name: undefined,
                                format: undefined,
                                scale: powerKpi.DataRepresentationScale.create()
                            },
                            variance: [],
                            variances: [],
                            margin: {
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: 0
                            }
                        };
                        if (!dataView
                            || !dataView.categorical
                            || !dataView.categorical.categories
                            || !dataView.categorical.categories[0]
                            || !dataView.categorical.categories[0].values
                            || !dataView.categorical.values
                            || !dataView.categorical.values.grouped) {
                            return dataRepresentation;
                        }
                        var axisCategory = dataView.categorical.categories[0];
                        var axisCategoryType = axisCategory.source.type;
                        dataRepresentation.x.metadata = axisCategory.source;
                        dataRepresentation.x.name = axisCategory.source.displayName;
                        if (axisCategoryType.dateTime) {
                            type = powerKpi.DataRepresentationTypeEnum.DateType;
                        }
                        else if (axisCategoryType.integer || axisCategoryType.numeric) {
                            type = powerKpi.DataRepresentationTypeEnum.NumberType;
                        }
                        else if (axisCategoryType.text) {
                            type = powerKpi.DataRepresentationTypeEnum.StringType;
                        }
                        settings.parse(dataView);
                        settings.parseSettings(viewport, type);
                        dataRepresentation.x.type = type;
                        var maxThickness = NaN;
                        var seriesColorIndex = 0;
                        dataView.categorical.values.grouped().forEach(function (group, groupIndex) {
                            var groupedValues = group.values;
                            var currentKPIColumn = groupedValues
                                .filter(function (groupedValue) {
                                return groupedValue.source.roles[powerKpi.kpiColumn.name];
                            });
                            var kpiIndexes = (currentKPIColumn
                                && currentKPIColumn[0]
                                && currentKPIColumn[0].values) || [];
                            groupedValues.forEach(function (groupedValue, seriesIndex) {
                                var format = _this.getFormatStringByColumn(groupedValue.source);
                                if (groupedValue.source.roles[powerKpi.kpiIndicatorValueColumn.name]) {
                                    dataRepresentation.variances[0] = groupedValue.values;
                                    settings.kpiIndicatorValue.setColumnFormat(format);
                                    settings.tooltipVariance.setColumnFormat(format);
                                }
                                if (groupedValue.source.roles[powerKpi.secondKPIIndicatorValueColumn.name]) {
                                    dataRepresentation.variances[1] = groupedValue.values;
                                    settings.secondKPIIndicatorValue.setColumnFormat(format);
                                    settings.secondTooltipVariance.setColumnFormat(format);
                                }
                                var groupIndex = -1;
                                if (groupedValue.source.roles[powerKpi.valuesColumn.name]) {
                                    groupIndex = 0;
                                }
                                else if (groupedValue.source.roles[powerKpi.secondaryValuesColumn.name]) {
                                    groupIndex = 1;
                                }
                                if (groupIndex !== -1) {
                                    if (!dataRepresentation.groups[groupIndex]) {
                                        dataRepresentation.groups[groupIndex] = {
                                            series: [],
                                            y: {
                                                format: format,
                                                min: undefined,
                                                max: undefined,
                                                scale: powerKpi.DataRepresentationScale.create(),
                                            }
                                        };
                                    }
                                    var seriesGroup_1 = dataRepresentation.groups[groupIndex];
                                    var currentPoint_1 = {
                                        x: null,
                                        y: NaN,
                                        index: NaN,
                                        kpiIndex: NaN,
                                        color: undefined,
                                    };
                                    var seriesSettings_1 = powerKpi.SeriesSettings.getDefault();
                                    for (var propertyName in seriesSettings_1) {
                                        var descriptor = seriesSettings_1[propertyName];
                                        var defaultDescriptor = settings[propertyName];
                                        if (descriptor && descriptor.applyDefault && defaultDescriptor) {
                                            descriptor.applyDefault(defaultDescriptor);
                                        }
                                    }
                                    seriesSettings_1.parseObjects(group.objects || groupedValue.source.objects);
                                    if (!seriesSettings_1.line.fillColor
                                        && style
                                        && style.colorPalette
                                        && style.colorPalette.dataColors) {
                                        seriesSettings_1.line.fillColor = style.colorPalette.dataColors
                                            .getColorByIndex(seriesColorIndex)
                                            .value;
                                        seriesColorIndex++;
                                    }
                                    var gradientPoints_1 = [];
                                    var seriesY_1 = {
                                        min: undefined,
                                        max: undefined,
                                    };
                                    var points = axisCategory
                                        .values
                                        .map(function (axisValue, categoryIndex) {
                                        var value = groupedValue.values[categoryIndex];
                                        _this.applyXArguments(dataRepresentation, axisValue);
                                        _this.applyYArguments(seriesGroup_1.y, value);
                                        _this.applyYArguments(seriesY_1, value);
                                        var kpiIndex = _this.getKPIIndex(kpiIndexes[categoryIndex]);
                                        var color = seriesSettings_1.line.fillColor;
                                        if (seriesSettings_1.line.shouldMatchKpiColor) {
                                            var currentKPI = settings
                                                .kpiIndicator
                                                .getCurrentKPI(kpiIndex);
                                            color = currentKPI && currentKPI.color || color;
                                        }
                                        if (value !== null) {
                                            currentPoint_1.x = axisValue;
                                            currentPoint_1.y = value;
                                            currentPoint_1.index = categoryIndex;
                                            currentPoint_1.kpiIndex = kpiIndex;
                                            currentPoint_1.color = color;
                                        }
                                        var point = {
                                            color: color,
                                            kpiIndex: kpiIndex,
                                            x: axisValue,
                                            y: value,
                                        };
                                        _this.pointFilter.groupPointByColor(gradientPoints_1, point);
                                        return point;
                                    });
                                    var selectionId = SelectionIdBuilder.builder()
                                        .withSeries(dataView.categorical.values, group.identity
                                        ? group
                                        : groupedValue)
                                        .withMeasure(groupedValue.source.queryName)
                                        .createSelectionId();
                                    if (isNaN(maxThickness) || seriesSettings_1.line.thickness > maxThickness) {
                                        maxThickness = seriesSettings_1.line.thickness;
                                    }
                                    var name_1 = group.name
                                        ? group.name + " - " + groupedValue.source.displayName
                                        : groupedValue.source.displayName;
                                    seriesGroup_1.series.push({
                                        name: name_1,
                                        points: points,
                                        format: format,
                                        selectionId: selectionId,
                                        gradientPoints: gradientPoints_1,
                                        domain: seriesY_1,
                                        y: seriesGroup_1.y,
                                        current: currentPoint_1,
                                        settings: seriesSettings_1,
                                    });
                                }
                            });
                        });
                        var axisCategoryFormat = this.getFormatStringByColumn(axisCategory && axisCategory.source);
                        dataRepresentation.settings.dateValueKPI.setColumnFormat(axisCategoryFormat);
                        dataRepresentation.settings.tooltipLabel.setColumnFormat(axisCategoryFormat);
                        dataRepresentation.x.values = axisCategory.values;
                        // Applies series formats
                        dataRepresentation.x.format = dataRepresentation.settings.dateValueKPI.getFormat();
                        var xScale = this.getXAxisScale(dataRepresentation.x.scale, dataRepresentation.x.min, dataRepresentation.x.max, dataRepresentation.x.type, axisCategory.values);
                        dataRepresentation.margin = settings.dots.getMarginByThickness(maxThickness, dataRepresentation.margin);
                        var group = dataRepresentation.groups
                            && (dataRepresentation.groups[0] || dataRepresentation.groups[1]);
                        if (dataRepresentation.variances[0]) {
                            dataRepresentation.variance.push(dataRepresentation.variances[0]
                                && dataRepresentation.variances[0].length
                                && dataRepresentation.variances[0].slice(-1)[0] || NaN);
                        }
                        else {
                            dataRepresentation.variance.push(this.getVarianceByCurrentPointsOfSeries(group && group.series[0], group && group.series[1]));
                        }
                        if (dataRepresentation.variances[1]) {
                            dataRepresentation.variance.push(dataRepresentation.variances[1]
                                && dataRepresentation.variances[1].length
                                && dataRepresentation.variances[1].slice(-1)[0] || NaN);
                        }
                        else {
                            dataRepresentation.variance.push(this.getVarianceByCurrentPointsOfSeries(group && group.series[0], group && group.series[2]));
                        }
                        return dataRepresentation;
                    };
                    DataConverter.prototype.postProcess = function (dataRepresentation) {
                        var _this = this;
                        if (!dataRepresentation || !dataRepresentation.groups) {
                            return;
                        }
                        var groups = dataRepresentation.groups, settings = dataRepresentation.settings, viewport = dataRepresentation.viewport;
                        dataRepresentation.groups.forEach(function (seriesGroup, seriesGroupIndex) {
                            if (seriesGroup) {
                                dataRepresentation.series = dataRepresentation.series.concat(seriesGroup.series);
                                var yAxisSettings = seriesGroupIndex === 0
                                    ? settings.yAxis
                                    : settings.secondaryYAxis;
                                var yMin = _this.getNotNaNValue(yAxisSettings.min, seriesGroup.y.min);
                                var yMax = _this.getNotNaNValue(yAxisSettings.max, seriesGroup.y.max);
                                seriesGroup.y.min = Math.min(yMin, yMax);
                                seriesGroup.y.max = Math.max(yMin, yMax);
                                seriesGroup.y.scale.domain([seriesGroup.y.min, seriesGroup.y.max], powerKpi.DataRepresentationTypeEnum.NumberType);
                            }
                        });
                        dataRepresentation.sortedSeries = this.sortSeries(dataRepresentation.series, viewport.height);
                    };
                    DataConverter.prototype.sortSeries = function (series, height) {
                        return series
                            .slice()
                            .sort(function (a, b) {
                            // To sort series we have to convert value to px as scales are not the same
                            var aYScale = a.y.scale
                                .copy()
                                .range([height, 0]);
                            var bYScale = b.y.scale
                                .copy()
                                .range([height, 0]);
                            var bScaledMin = bYScale.scale(b.domain.min);
                            var bScaledMax = bYScale.scale(b.domain.max);
                            var aScaledMin = aYScale.scale(a.domain.min);
                            var aScaledMax = aYScale.scale(a.domain.max);
                            return (aScaledMax - bScaledMax)
                                || (aScaledMin - bScaledMin); // Brackets are not required but they make this condition simpler to understand
                        });
                    };
                    DataConverter.prototype.applyXArguments = function (dataRepresentation, axisValue) {
                        if (dataRepresentation.x.min === undefined) {
                            dataRepresentation.x.min = axisValue;
                        }
                        if (dataRepresentation.x.max === undefined) {
                            dataRepresentation.x.max = axisValue;
                        }
                        if (dataRepresentation.x.type === powerKpi.DataRepresentationTypeEnum.DateType
                            || dataRepresentation.x.type === powerKpi.DataRepresentationTypeEnum.NumberType) {
                            if (axisValue < dataRepresentation.x.min) {
                                dataRepresentation.x.min = axisValue;
                            }
                            if (axisValue > dataRepresentation.x.max) {
                                dataRepresentation.x.max = axisValue;
                            }
                        }
                        else if (dataRepresentation.x.type === powerKpi.DataRepresentationTypeEnum.StringType) {
                            var textLength = this.getLength(axisValue);
                            if (textLength < this.getLength(dataRepresentation.x.min)) {
                                dataRepresentation.x.min = axisValue;
                            }
                            if (textLength > this.getLength(dataRepresentation.x.max)) {
                                dataRepresentation.x.max = axisValue;
                            }
                        }
                    };
                    DataConverter.prototype.getNotNaNValue = function (value, fallbackValue) {
                        return isNaN(value)
                            ? fallbackValue
                            : value;
                    };
                    DataConverter.prototype.getLength = function (text) {
                        if (!text || !text.length) {
                            return 0;
                        }
                        return text.length;
                    };
                    DataConverter.prototype.applyYArguments = function (axis, value) {
                        if (axis.min === undefined) {
                            axis.min = value;
                        }
                        if (axis.max === undefined) {
                            axis.max = value;
                        }
                        if (value !== null && value < axis.min) {
                            axis.min = value;
                        }
                        if (value !== null && value > axis.max) {
                            axis.max = value;
                        }
                    };
                    DataConverter.prototype.getKPIIndex = function (kpiIndex) {
                        return kpiIndex === undefined
                            || kpiIndex === null
                            || isNaN(kpiIndex)
                            || kpiIndex instanceof Date
                            ? NaN
                            : kpiIndex;
                    };
                    DataConverter.prototype.getXAxisScale = function (scale, min, max, type, categoryValues) {
                        var values;
                        switch (type) {
                            case powerKpi.DataRepresentationTypeEnum.DateType:
                            case powerKpi.DataRepresentationTypeEnum.NumberType: {
                                values = [min, max];
                                break;
                            }
                            case powerKpi.DataRepresentationTypeEnum.StringType: {
                                values = categoryValues;
                                break;
                            }
                        }
                        return scale.domain(values, type);
                    };
                    DataConverter.prototype.getFormatStringByColumn = function (column) {
                        if (!column || !column.format) {
                            return undefined;
                        }
                        return column.format;
                    };
                    return DataConverter;
                }(powerKpi.VarianceConverter));
                powerKpi.DataConverter = DataConverter;
                function createConverter() {
                    return new DataConverter();
                }
                powerKpi.createConverter = createConverter;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var BaseComponent = /** @class */ (function () {
                    function BaseComponent() {
                        this.isComponentShown = true;
                        this.classNamePrefix = "powerKpi_";
                        this.hiddenClassName = this.getClassNameWithPrefix("hidden");
                        this.boldClassName = this.getClassNameWithPrefix("bold");
                        this.italicClassName = this.getClassNameWithPrefix("italic");
                        this.underlinedClassName = this.getClassNameWithPrefix("underlined");
                        this.minWidth = 20;
                        this.width = 0;
                        this.minHeight = 20;
                        this.height = 0;
                    }
                    BaseComponent.prototype.initElement = function (baseElement, className, tagName) {
                        if (tagName === void 0) { tagName = "div"; }
                        this.element = this.createElement(baseElement, className, tagName);
                    };
                    BaseComponent.prototype.createElement = function (baseElement, className, tagName) {
                        if (tagName === void 0) { tagName = "div"; }
                        return baseElement
                            .append(tagName)
                            .classed(this.getClassNameWithPrefix(className), true);
                    };
                    BaseComponent.prototype.getClassNameWithPrefix = function (className) {
                        return className
                            ? "" + this.classNamePrefix + className
                            : className;
                    };
                    BaseComponent.prototype.getSelectorWithPrefix = function (className) {
                        return createClassAndSelector(this.getClassNameWithPrefix(className));
                    };
                    BaseComponent.prototype.clear = function () {
                        if (!this.element) {
                            return;
                        }
                        this.clearElement(this.element);
                    };
                    BaseComponent.prototype.clearElement = function (element) {
                        element
                            .selectAll("*")
                            .remove();
                    };
                    BaseComponent.prototype.destroy = function () {
                        if (this.element) {
                            this.element.remove();
                        }
                        this.element = null;
                        this.constructorOptions = null;
                        this.renderOptions = null;
                    };
                    BaseComponent.prototype.updateViewport = function (viewport) {
                        this.element.style({
                            width: PixelConverter.toString(viewport.width),
                            height: PixelConverter.toString(viewport.height)
                        });
                    };
                    BaseComponent.prototype.hide = function () {
                        if (!this.element || !this.isComponentShown) {
                            return;
                        }
                        this.element.style("display", "none");
                        this.isComponentShown = false;
                    };
                    BaseComponent.prototype.show = function () {
                        if (!this.element || this.isComponentShown) {
                            return;
                        }
                        this.element.style("display", null);
                        this.isComponentShown = true;
                    };
                    BaseComponent.prototype.toggle = function () {
                        if (this.isComponentShown) {
                            this.hide();
                        }
                        else {
                            this.show();
                        }
                    };
                    Object.defineProperty(BaseComponent.prototype, "isShown", {
                        get: function () {
                            return this.isComponentShown;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    BaseComponent.prototype.updateBackgroundColor = function (element, color) {
                        if (!element) {
                            return;
                        }
                        element.style("background-color", color || null);
                    };
                    BaseComponent.prototype.updateSize = function (width, height) {
                        if (!isNaN(width) && isFinite(width)) {
                            this.width = Math.max(this.minWidth, width);
                        }
                        else {
                            this.width = undefined;
                        }
                        if (!isNaN(height) && isFinite(height)) {
                            this.height = Math.max(this.minHeight, height);
                        }
                        else {
                            this.height = undefined;
                        }
                        this.updateSizeOfElement(this.width, this.height);
                    };
                    BaseComponent.prototype.updateSizeOfElement = function (width, height) {
                        if (!this.element) {
                            return;
                        }
                        var styleObject = {};
                        styleObject["width"]
                            = styleObject["min-width"]
                                = styleObject["max-width"]
                                    = width !== undefined && width !== null
                                        ? PixelConverter.toString(width)
                                        : null;
                        styleObject["height"]
                            = styleObject["min-height"]
                                = styleObject["max-height"]
                                    = height !== undefined && height !== null
                                        ? PixelConverter.toString(height)
                                        : null;
                        this.element.style(styleObject);
                    };
                    BaseComponent.prototype.getViewport = function () {
                        return {
                            width: this.width,
                            height: this.height,
                        };
                    };
                    BaseComponent.prototype.updateElementOrder = function (element, order) {
                        if (!element) {
                            return;
                        }
                        var browserSpecificOrder = order + 1;
                        element.style({
                            "-webkit-box-ordinal-group": browserSpecificOrder,
                            "-ms-flex-order": order,
                            order: order,
                        });
                    };
                    return BaseComponent;
                }());
                powerKpi.BaseComponent = BaseComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var BaseContainerComponent = /** @class */ (function (_super) {
                    __extends(BaseContainerComponent, _super);
                    function BaseContainerComponent() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.components = [];
                        return _this;
                    }
                    BaseContainerComponent.prototype.clear = function (components) {
                        if (components === void 0) { components = this.components; }
                        this.forEach(components, function (component) {
                            component.clear();
                        });
                        _super.prototype.clear.call(this);
                    };
                    BaseContainerComponent.prototype.destroy = function (components) {
                        if (components === void 0) { components = this.components; }
                        this.destroyComponents(components);
                        _super.prototype.destroy.call(this);
                    };
                    BaseContainerComponent.prototype.destroyComponents = function (components) {
                        if (components === void 0) { components = this.components; }
                        this.forEach(components.splice(0, components.length), function (component) {
                            component.destroy();
                        });
                    };
                    BaseContainerComponent.prototype.forEach = function (components, iterator) {
                        components.forEach(function (component, index) {
                            if (component) {
                                iterator(component, index);
                            }
                        });
                    };
                    BaseContainerComponent.prototype.initComponents = function (components, expectedAmountOfComponents, initComponent) {
                        if (!components) {
                            return;
                        }
                        components
                            .splice(expectedAmountOfComponents)
                            .forEach(function (component) {
                            component.clear();
                            component.destroy();
                        });
                        if (components.length < expectedAmountOfComponents) {
                            for (var index = components.length; index < expectedAmountOfComponents; index++) {
                                components.push(initComponent(index));
                            }
                        }
                    };
                    return BaseContainerComponent;
                }(powerKpi.BaseComponent));
                powerKpi.BaseContainerComponent = BaseContainerComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon.CssConstants
                var PixelConverter = jsCommon.PixelConverter;
                var LineComponent = /** @class */ (function (_super) {
                    __extends(LineComponent, _super);
                    function LineComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "lineComponent";
                        _this.lineSelector = _this.getSelectorWithPrefix(_this.className + "_line");
                        _this.initElement(options.element, _this.className, "g");
                        return _this;
                    }
                    LineComponent.prototype.render = function (options) {
                        var _this = this;
                        var x = options.x, y = options.y, viewport = options.viewport, thickness = options.thickness, interpolation = options.interpolation, gradientPoints = options.gradientPoints, lineStyle = options.lineStyle, opacity = options.opacity;
                        var xScale = x
                            .copy()
                            .range([0, viewport.width]);
                        var yScale = y
                            .copy()
                            .range([viewport.height, 0]);
                        var lineSelection = this.element
                            .selectAll(this.lineSelector.selector)
                            .data(gradientPoints);
                        lineSelection.enter()
                            .append("svg:path")
                            .classed(this.lineSelector.class, true);
                        lineSelection
                            .attr({
                            d: function (gradientGroup) {
                                return _this.getLine(xScale, yScale, interpolation)(gradientGroup.points);
                            },
                            "class": this.lineSelector.class + " " + lineStyle,
                        })
                            .style({
                            opacity: opacity,
                            "stroke": function (gradientGroup) { return gradientGroup.color; },
                            "stroke-width": function () { return PixelConverter.toString(thickness); },
                        });
                        lineSelection
                            .exit()
                            .remove();
                    };
                    LineComponent.prototype.getLine = function (xScale, yScale, interpolation) {
                        return d3.svg.line()
                            .x(function (data) {
                            return xScale.scale(data.x);
                        })
                            .y(function (data) {
                            return yScale.scale(data.y);
                        })
                            .interpolate(interpolation);
                    };
                    return LineComponent;
                }(powerKpi.BaseComponent));
                powerKpi.LineComponent = LineComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var AreaComponent = /** @class */ (function (_super) {
                    __extends(AreaComponent, _super);
                    function AreaComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.additionalClassName = "areaComponent";
                        _this.areaSelector = _this.getSelectorWithPrefix(_this.additionalClassName + "_area");
                        _this.element.classed(_this.additionalClassName, true);
                        return _this;
                    }
                    AreaComponent.prototype.render = function (options) {
                        this.renderArea(options);
                        _super.prototype.render.call(this, options);
                    };
                    AreaComponent.prototype.renderArea = function (options) {
                        var _this = this;
                        var x = options.x, y = options.y, viewport = options.viewport, interpolation = options.interpolation, gradientPoints = options.gradientPoints, areaOpacity = options.areaOpacity;
                        var xScale = x
                            .copy()
                            .range([0, viewport.width]);
                        var yScale = y
                            .copy()
                            .range([viewport.height, 0]);
                        var areaSelection = this.element
                            .selectAll(this.areaSelector.selector)
                            .data(gradientPoints);
                        areaSelection.enter()
                            .append("svg:path")
                            .classed(this.areaSelector.class, true);
                        areaSelection
                            .attr({
                            d: function (gradientGroup) {
                                return _this.getArea(xScale, yScale, viewport, interpolation)(gradientGroup.points);
                            },
                        })
                            .style({
                            opacity: areaOpacity,
                            "fill": function (gradientGroup) { return gradientGroup.color; },
                        });
                        areaSelection
                            .exit()
                            .remove();
                    };
                    AreaComponent.prototype.getArea = function (xScale, yScale, viewport, interpolation) {
                        return d3.svg.area()
                            .x(function (dataPoint) {
                            return xScale.scale(dataPoint.x);
                        })
                            .y0(viewport.height)
                            .y1(function (dataPoint) {
                            return yScale.scale(dataPoint.y);
                        })
                            .interpolate(interpolation);
                    };
                    return AreaComponent;
                }(powerKpi.LineComponent));
                powerKpi.AreaComponent = AreaComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var ComboComponent = /** @class */ (function (_super) {
                    __extends(ComboComponent, _super);
                    function ComboComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "comboComponent";
                        _this.initElement(options.element, _this.className, "g");
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        return _this;
                    }
                    ComboComponent.prototype.render = function (options) {
                        var _this = this;
                        var lineType = options.lineType;
                        if (lineType !== this.currentLineType) {
                            this.destroyComponents();
                            this.currentLineType = lineType;
                        }
                        this.initComponents(this.components, 1, function () {
                            switch (_this.currentLineType) {
                                case powerKpi.LineType.area: {
                                    return new powerKpi.AreaComponent(_this.constructorOptions);
                                }
                                case powerKpi.LineType.column:
                                default: {
                                    return new powerKpi.LineComponent(_this.constructorOptions);
                                }
                            }
                        });
                        this.forEach(this.components, function (component) {
                            component.render(options);
                        });
                    };
                    return ComboComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.ComboComponent = ComboComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var ChartComponent = /** @class */ (function (_super) {
                    __extends(ChartComponent, _super);
                    function ChartComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "multiShapeComponent";
                        _this.amountOfDataPointsForFallbackComponents = 1;
                        _this.shouldRenderFallbackComponents = false;
                        _this.initElement(options.element, _this.className, "g");
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        return _this;
                    }
                    ChartComponent.prototype.render = function (options) {
                        var _this = this;
                        var _a = options.data, sortedSeries = _a.sortedSeries, viewport = _a.viewport, x = _a.x, settings = _a.settings;
                        var shouldRenderFallbackComponents = sortedSeries
                            && sortedSeries[0]
                            && sortedSeries[0].points
                            && sortedSeries[0].points.length === this.amountOfDataPointsForFallbackComponents;
                        if (this.shouldRenderFallbackComponents !== shouldRenderFallbackComponents) {
                            this.forEach(this.components, function (component) {
                                component.destroy();
                            });
                            this.components = [];
                            this.shouldRenderFallbackComponents = shouldRenderFallbackComponents;
                        }
                        this.initComponents(this.components, sortedSeries.length, function () {
                            return _this.shouldRenderFallbackComponents
                                ? new powerKpi.DotComponent(_this.constructorOptions)
                                : new powerKpi.ComboComponent(_this.constructorOptions);
                        });
                        this.forEach(this.components, function (component, componentIndex) {
                            var currentSeries = sortedSeries[componentIndex];
                            if (_this.shouldRenderFallbackComponents) {
                                var point = currentSeries.points[0];
                                component.render({
                                    point: point,
                                    viewport: viewport,
                                    thickness: currentSeries.settings.line.thickness,
                                    x: x.scale,
                                    y: currentSeries.y.scale,
                                    radiusFactor: settings.dots.radiusFactor,
                                    opacity: currentSeries.settings.line.opacity,
                                });
                            }
                            else {
                                component.render({
                                    viewport: viewport,
                                    thickness: currentSeries.settings.line.thickness,
                                    x: x.scale,
                                    y: currentSeries.y.scale,
                                    interpolation: currentSeries.settings.line.getInterpolation(),
                                    lineStyle: currentSeries.settings.line.lineStyle,
                                    gradientPoints: currentSeries.gradientPoints,
                                    lineType: currentSeries.settings.line.lineType,
                                    opacity: currentSeries.settings.line.opacity,
                                    areaOpacity: currentSeries.settings.line.areaOpacity,
                                });
                            }
                        });
                    };
                    return ChartComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.ChartComponent = ChartComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // powerbi
                var ValueType = powerbi.ValueType;
                var NumberFormat = powerbi.NumberFormat;
                var DateTimeSequence = powerbi.DateTimeSequence;
                // powerbi.visuals
                var axisScale = powerbi.visuals.axisScale;
                var AxisHelper = powerbi.visuals.AxisHelper;
                var valueFormatter = powerbi.visuals.valueFormatter;
                var PowerKPIAxisHelper;
                (function (PowerKPIAxisHelper) {
                    var DefaultOuterPadding = 0;
                    var DefaultInnerTickSize = 6;
                    var DefaultOuterTickSize = 0;
                    var OrientationLeft = "left";
                    var OrientationBottom = "bottom";
                    var DefaultXLabelMaxWidth = 1;
                    var DefaultXLabelFactor = 2;
                    var DefaultMinInterval = 0;
                    var MinTickInterval100Pct = 0.01;
                    var MinTickIntervalInteger = 1;
                    var RecommendedNumberOfTicksSmall = 3;
                    var RecommendedNumberOfTicksMiddle = 5;
                    var RecommendedNumberOfTicksLarge = 8;
                    var AvailableWidthYAxisSmall = 150;
                    var AvailableWidthYAxisMiddle = 300;
                    var MinAmountOfTicksForDates = 1;
                    var MinAmountOfTicks = 0;
                    /**
                     * Default ranges are for when we have a field chosen for the axis,
                     * but no values are returned by the query.
                     */
                    PowerKPIAxisHelper.emptyDomain = [0, 0];
                    var TickLabelPadding = 2; // between text labels, used by AxisHelper
                    var MinOrdinalRectThickness = 20;
                    var ScalarTickLabelPadding = 3;
                    var MinTickCount = 2;
                    var DefaultBestTickCount = 3;
                    /**
                     * Create a D3 axis including scale. Can be vertical or horizontal, and either datetime, numeric, or text.
                     * @param options The properties used to create the axis.
                     */
                    function createAxis(options) {
                        var pixelSpan = options.pixelSpan, dataDomain = options.dataDomain, metaDataColumn = options.metaDataColumn, formatString = options.formatString, outerPadding = options.outerPadding || DefaultOuterPadding, isCategoryAxis = !!options.isCategoryAxis, isScalar = !!options.isScalar, isVertical = !!options.isVertical, useTickIntervalForDisplayUnits = !!options.useTickIntervalForDisplayUnits, getValueFn = options.getValueFn, categoryThickness = options.categoryThickness, axisDisplayUnits = options.axisDisplayUnits, axisPrecision = options.axisPrecision, is100Pct = !!options.is100Pct, tickLabelPadding = options.tickLabelPadding || TickLabelPadding;
                        var dataType = getCategoryValueType(metaDataColumn, isScalar);
                        // Create the Scale
                        var scaleResult = createScale(options);
                        var scale = scaleResult.scale;
                        var bestTickCount = scaleResult.bestTickCount;
                        var scaleDomain = scale.domain();
                        var isLogScaleAllowed = isLogScalePossible(dataDomain, dataType);
                        // fix categoryThickness if scalar and the domain was adjusted when making the scale "nice"
                        if (categoryThickness && isScalar && dataDomain && dataDomain.length === 2) {
                            var oldSpan = dataDomain[1] - dataDomain[0];
                            var newSpan = scaleDomain[1] - scaleDomain[0];
                            if (oldSpan > 0 && newSpan > 0) {
                                categoryThickness = categoryThickness * oldSpan / newSpan;
                            }
                        }
                        var minTickInterval = isScalar
                            ? getMinTickValueInterval(formatString, dataType, is100Pct)
                            : undefined;
                        var tickValues = getRecommendedTickValues(bestTickCount, scale, dataType, isScalar, minTickInterval, options.shouldTheMinValueBeIncluded);
                        if (isScalar
                            && bestTickCount === 1
                            && tickValues
                            && tickValues.length > 1) {
                            tickValues = [tickValues[0]];
                        }
                        if (options.scaleType && options.scaleType === axisScale.log && isLogScaleAllowed) {
                            tickValues = tickValues.filter(function (d) {
                                return powerOfTen(d);
                            });
                        }
                        var formatter = createFormatter(scaleDomain, dataDomain, dataType, isScalar, formatString, bestTickCount, tickValues, getValueFn, useTickIntervalForDisplayUnits, axisDisplayUnits, axisPrecision);
                        // sets default orientation only, cartesianChart will fix y2 for comboChart
                        // tickSize(pixelSpan) is used to create gridLines
                        var axis = d3.svg.axis()
                            .scale(scale)
                            .tickSize(DefaultInnerTickSize, DefaultOuterTickSize)
                            .orient(isVertical
                            ? OrientationLeft
                            : OrientationBottom)
                            .ticks(bestTickCount)
                            .tickValues(tickValues);
                        var formattedTickValues = [];
                        if (metaDataColumn) {
                            formattedTickValues = formatAxisTickValues(axis, tickValues, formatter, dataType, getValueFn);
                        }
                        var xLabelMaxWidth;
                        // Use category layout of labels if specified, otherwise use scalar layout of labels
                        if (!isScalar && categoryThickness) {
                            xLabelMaxWidth = Math.max(DefaultXLabelMaxWidth, categoryThickness - tickLabelPadding * DefaultXLabelFactor);
                        }
                        else {
                            // When there are 0 or 1 ticks, then xLabelMaxWidth = pixelSpan
                            xLabelMaxWidth = tickValues.length > DefaultXLabelMaxWidth
                                ? getScalarLabelMaxWidth(scale, tickValues)
                                : pixelSpan;
                            xLabelMaxWidth = xLabelMaxWidth - ScalarTickLabelPadding * DefaultXLabelFactor;
                        }
                        return {
                            scale: scale,
                            axis: axis,
                            formatter: formatter,
                            values: formattedTickValues,
                            axisType: dataType,
                            axisLabel: null,
                            isCategoryAxis: isCategoryAxis,
                            xLabelMaxWidth: xLabelMaxWidth,
                            categoryThickness: categoryThickness,
                            outerPadding: outerPadding,
                            usingDefaultDomain: scaleResult.usingDefaultDomain,
                            isLogScaleAllowed: isLogScaleAllowed,
                            dataDomain: dataDomain,
                        };
                    }
                    PowerKPIAxisHelper.createAxis = createAxis;
                    /**
                     * Indicates whether the number is power of 10.
                     */
                    function powerOfTen(d) {
                        var value = Math.abs(d);
                        // formula log2(Y)/log2(10) = log10(Y)
                        // because double issues this won"t return exact value
                        // we need to ceil it to nearest number.
                        var log10 = Math.log(value) / Math.LN10;
                        log10 = Math.ceil(log10 - 1e-12);
                        return value / Math.pow(10, log10) === 1;
                    }
                    PowerKPIAxisHelper.powerOfTen = powerOfTen;
                    function getScalarLabelMaxWidth(scale, tickValues) {
                        // find the distance between two ticks. scalar ticks can be anywhere, such as:
                        // |---50----------100--------|
                        if (scale && !_.isEmpty(tickValues)) {
                            return Math.abs(scale(tickValues[1]) - scale(tickValues[0]));
                        }
                        return DefaultXLabelMaxWidth;
                    }
                    function createFormatter(scaleDomain, dataDomain, dataType, isScalar, formatString, bestTickCount, tickValues, getValueFn, useTickIntervalForDisplayUnits, axisDisplayUnits, axisPrecision) {
                        if (useTickIntervalForDisplayUnits === void 0) { useTickIntervalForDisplayUnits = false; }
                        var formatter;
                        if (dataType.dateTime) {
                            if (isScalar) {
                                var value = new Date(scaleDomain[0]);
                                var value2 = new Date(scaleDomain[1]);
                                // datetime with only one value needs to pass the same value
                                // (from the original dataDomain value, not the adjusted scaleDomain)
                                // so formatting works correctly.
                                if (bestTickCount === 1) {
                                    value = value2 = new Date(dataDomain[0]);
                                }
                                // this will ignore the formatString and create one based on the smallest non-zero portion of the values supplied.
                                formatter = valueFormatter.create({
                                    format: formatString,
                                    value: value,
                                    value2: value2,
                                    tickCount: bestTickCount,
                                });
                            }
                            else {
                                // Use the model formatString for ordinal datetime
                                formatter = valueFormatter.createDefaultFormatter(formatString, true);
                            }
                        }
                        else {
                            if (useTickIntervalForDisplayUnits && isScalar && tickValues.length > 1) {
                                var value1 = axisDisplayUnits
                                    ? axisDisplayUnits
                                    : tickValues[1] - tickValues[0];
                                var options = {
                                    format: formatString,
                                    value: value1,
                                    value2: 0,
                                    allowFormatBeautification: true,
                                };
                                if (axisPrecision) {
                                    options.precision = axisPrecision;
                                }
                                else {
                                    options.precision = AxisHelper.calculateAxisPrecision(tickValues[0], tickValues[1], axisDisplayUnits, formatString);
                                }
                                formatter = valueFormatter.create(options);
                            }
                            else {
                                // do not use display units, just the basic value formatter
                                // datetime is handled above, so we are ordinal and either boolean, numeric, or text.
                                formatter = valueFormatter.createDefaultFormatter(formatString, true);
                            }
                        }
                        return formatter;
                    }
                    PowerKPIAxisHelper.createFormatter = createFormatter;
                    function getMinTickValueInterval(formatString, columnType, is100Pct) {
                        var isCustomFormat = formatString && !NumberFormat.isStandardFormat(formatString);
                        if (isCustomFormat) {
                            var precision = NumberFormat.getCustomFormatMetadata(formatString, true).precision;
                            if (formatString.indexOf("%") > -1) {
                                precision += 2; // percent values are multiplied by 100 during formatting
                            }
                            return Math.pow(10, -precision);
                        }
                        else if (is100Pct) {
                            return MinTickInterval100Pct;
                        }
                        else if (columnType.integer) {
                            return MinTickIntervalInteger;
                        }
                        return DefaultMinInterval;
                    }
                    PowerKPIAxisHelper.getMinTickValueInterval = getMinTickValueInterval;
                    /**
                     * Format the linear tick labels or the category labels.
                     */
                    function formatAxisTickValues(axis, tickValues, formatter, dataType, getValueFn) {
                        var formattedTickValues = [];
                        if (!getValueFn) {
                            getValueFn = function (data) { return data; };
                        }
                        if (formatter) {
                            axis.tickFormat(function (d) { return formatter.format(getValueFn(d, dataType)); });
                            formattedTickValues = tickValues.map(function (d) { return formatter.format(getValueFn(d, dataType)); });
                        }
                        else {
                            formattedTickValues = tickValues.map(function (d) { return getValueFn(d, dataType); });
                        }
                        return formattedTickValues;
                    }
                    function isLogScalePossible(domain, axisType) {
                        if (domain == null || domain.length < 2 || isDateTime(axisType)) {
                            return false;
                        }
                        return (domain[0] > 0 && domain[1] > 0)
                            || (domain[0] < 0 && domain[1] < 0); // domain must exclude 0
                    }
                    PowerKPIAxisHelper.isLogScalePossible = isLogScalePossible;
                    function isDateTime(type) {
                        return !!(type && type.dateTime);
                    }
                    PowerKPIAxisHelper.isDateTime = isDateTime;
                    function getRecommendedTickValues(maxTicks, scale, axisType, isScalar, minTickInterval, shouldTheMinValueBeIncluded) {
                        if (shouldTheMinValueBeIncluded === void 0) { shouldTheMinValueBeIncluded = false; }
                        if (!isScalar || isOrdinalScale(scale)) {
                            return getRecommendedTickValuesForAnOrdinalRange(maxTicks, scale.domain());
                        }
                        else if (isDateTime(axisType)) {
                            return getRecommendedTickValuesForADateTimeRange(maxTicks, scale.domain());
                        }
                        return getRecommendedTickValuesForAQuantitativeRange(maxTicks, scale, minTickInterval, shouldTheMinValueBeIncluded);
                    }
                    PowerKPIAxisHelper.getRecommendedTickValues = getRecommendedTickValues;
                    function getRecommendedTickValuesForAnOrdinalRange(maxTicks, labels) {
                        var tickLabels = [];
                        // return no ticks in this case
                        if (maxTicks <= 0) {
                            return tickLabels;
                        }
                        var len = labels.length;
                        if (maxTicks > len) {
                            return labels;
                        }
                        for (var i = 0, step = Math.ceil(len / maxTicks); i < len; i += step) {
                            tickLabels.push(labels[i]);
                        }
                        return tickLabels;
                    }
                    PowerKPIAxisHelper.getRecommendedTickValuesForAnOrdinalRange = getRecommendedTickValuesForAnOrdinalRange;
                    function getRecommendedTickValuesForAQuantitativeRange(maxTicks, scale, minInterval, shouldTheMinValueBeIncluded) {
                        if (shouldTheMinValueBeIncluded === void 0) { shouldTheMinValueBeIncluded = false; }
                        var tickLabels = [];
                        // if maxticks is zero return none
                        if (maxTicks === 0) {
                            return tickLabels;
                        }
                        if (scale.ticks) {
                            if (shouldTheMinValueBeIncluded && scale.domain) {
                                var domain = scale.domain();
                                var minValue = domain[0];
                                var maxValue = domain[1] !== undefined && domain[1] !== null
                                    ? domain[1]
                                    : minValue;
                                var span = Math.abs(maxValue - minValue);
                                var step = Math.pow(10, Math.floor(Math.log(span / maxTicks) / Math.LN10));
                                var err = maxTicks / span * step;
                                if (err <= .15) {
                                    step *= 10;
                                }
                                else if (err <= .35) {
                                    step *= 5;
                                }
                                else if (err <= .75) {
                                    step *= 2;
                                }
                                if (!isNaN(step) && isFinite(step)) {
                                    tickLabels = d3.range(minValue, maxValue, step);
                                }
                            }
                            else {
                                tickLabels = scale.ticks(maxTicks);
                                if (tickLabels.length > maxTicks && maxTicks > 1) {
                                    tickLabels = scale.ticks(maxTicks - 1);
                                }
                                if (tickLabels.length < MinTickCount) {
                                    tickLabels = scale.ticks(maxTicks + 1);
                                }
                            }
                            tickLabels = createTrueZeroTickLabel(tickLabels);
                            if (minInterval && tickLabels.length > 1) {
                                var tickInterval = tickLabels[1] - tickLabels[0];
                                while (tickInterval > 0 && tickInterval < minInterval) {
                                    for (var i = 1; i < tickLabels.length; i++) {
                                        tickLabels.splice(i, 1);
                                    }
                                    tickInterval = tickInterval * 2;
                                }
                                // keep at least two labels - the loop above may trim all but one if we have odd # of tick labels and dynamic range < minInterval
                                if (tickLabels.length === 1) {
                                    tickLabels.push(tickLabels[0] + minInterval);
                                }
                            }
                            return tickLabels;
                        }
                        return tickLabels;
                    }
                    PowerKPIAxisHelper.getRecommendedTickValuesForAQuantitativeRange = getRecommendedTickValuesForAQuantitativeRange;
                    function getRecommendedTickValuesForADateTimeRange(maxTicks, dataDomain) {
                        var tickLabels = [];
                        if (dataDomain[0] === 0 && dataDomain[1] === 0) {
                            return [];
                        }
                        var dateTimeTickLabels = DateTimeSequence.calculate(new Date(dataDomain[0]), new Date(dataDomain[1]), maxTicks).sequence;
                        tickLabels = dateTimeTickLabels.map(function (d) { return d.getTime(); });
                        tickLabels = ensureValuesInRange(tickLabels, dataDomain[0], dataDomain[1]);
                        return tickLabels;
                    }
                    function isOrdinalScale(scale) {
                        return typeof scale.invert === "undefined";
                    }
                    PowerKPIAxisHelper.isOrdinalScale = isOrdinalScale;
                    /**
                     * Gets the ValueType of a category column, defaults to Text if the type is not present.
                     */
                    function getCategoryValueType(metadataColumn, isScalar) {
                        if (metadataColumn && columnDataTypeHasValue(metadataColumn.type)) {
                            return metadataColumn.type;
                        }
                        if (isScalar) {
                            return ValueType.fromDescriptor({ numeric: true });
                        }
                        return ValueType.fromDescriptor({ text: true });
                    }
                    PowerKPIAxisHelper.getCategoryValueType = getCategoryValueType;
                    function columnDataTypeHasValue(dataType) {
                        return dataType && (dataType.bool || dataType.numeric || dataType.text || dataType.dateTime);
                    }
                    PowerKPIAxisHelper.columnDataTypeHasValue = columnDataTypeHasValue;
                    function createScale(options) {
                        var pixelSpan = options.pixelSpan, dataDomain = options.dataDomain, metaDataColumn = options.metaDataColumn, isScalar = options.isScalar, isVertical = options.isVertical, forcedTickCount = options.forcedTickCount, shouldClamp = options.shouldClamp, maxTickCount = options.maxTickCount, density = options.density;
                        var outerPadding = options.outerPadding || DefaultOuterPadding, minOrdinalRectThickness = options.minOrdinalRectThickness || MinOrdinalRectThickness;
                        var dataType = getCategoryValueType(metaDataColumn, isScalar);
                        var maxTicks = isVertical
                            ? getRecommendedNumberOfTicksForYAxis(pixelSpan)
                            : getRecommendedNumberOfTicksForXAxis(pixelSpan, minOrdinalRectThickness);
                        if (maxTickCount &&
                            maxTicks > maxTickCount) {
                            maxTicks = maxTickCount;
                        }
                        var scalarDomain = dataDomain
                            ? dataDomain.slice()
                            : null;
                        var bestTickCount = maxTicks;
                        var scale;
                        var usingDefaultDomain = false;
                        if (dataDomain == null
                            || (dataDomain.length === 2 && dataDomain[0] == null && dataDomain[1] == null)
                            || (dataDomain.length !== 2 && isScalar)) {
                            usingDefaultDomain = true;
                            if (dataType.dateTime || !isOrdinal(dataType)) {
                                dataDomain = PowerKPIAxisHelper.emptyDomain;
                            }
                            else {
                                dataDomain = [];
                            }
                            if (isOrdinal(dataType)) {
                                scale = createOrdinalScale(pixelSpan, dataDomain);
                            }
                            else {
                                scale = createNumericalScale(options.scaleType, pixelSpan, dataDomain, dataType, outerPadding, bestTickCount);
                            }
                        }
                        else {
                            if (isScalar && dataDomain.length > 0) {
                                bestTickCount = forcedTickCount !== undefined
                                    ? (maxTicks !== 0 ? forcedTickCount : 0)
                                    : getBestNumberOfTicks(dataDomain[0], dataDomain[dataDomain.length - 1], [metaDataColumn], maxTicks, dataType.dateTime);
                                var normalizedRange = normalizeLinearDomain({
                                    min: dataDomain[0],
                                    max: dataDomain[dataDomain.length - 1]
                                });
                                scalarDomain = [
                                    normalizedRange.min,
                                    normalizedRange.max
                                ];
                            }
                            if (isScalar && dataType.numeric && !dataType.dateTime) {
                                // Note: Don't pass bestTickCount to createNumericalScale, because it overrides boundaries of the domain.
                                scale = createNumericalScale(options.scaleType, pixelSpan, scalarDomain, dataType, outerPadding, null, shouldClamp);
                                bestTickCount = maxTicks === 0
                                    ? 0
                                    : getAmountOfTicksByDensity(Math.floor((pixelSpan - outerPadding) / minOrdinalRectThickness), density);
                            }
                            else if (isScalar && dataType.dateTime) {
                                // Use of a linear scale, instead of a D3.time.scale, is intentional since we want
                                // to control the formatting of the time values, since d3"s implementation isn"t
                                // in accordance to our design.
                                // scalarDomain: should already be in long-int time (via category.values[0].getTime())
                                scale = createLinearScale(pixelSpan, scalarDomain, outerPadding, null, shouldClamp); // DO NOT PASS TICKCOUNT
                                bestTickCount = maxTicks === 0 ? 0
                                    : getAmountOfTicksByDensity((Math.max(MinAmountOfTicksForDates, (pixelSpan - outerPadding) / minOrdinalRectThickness)), density);
                                bestTickCount = bestTickCount < MinAmountOfTicksForDates
                                    ? MinAmountOfTicksForDates
                                    : bestTickCount;
                            }
                            else if (dataType.text || dataType.dateTime || dataType.numeric || dataType.bool) {
                                scale = createOrdinalScale(pixelSpan, scalarDomain);
                                bestTickCount = maxTicks === 0
                                    ? 0
                                    : getAmountOfTicksByDensity((Math.min(scalarDomain.length, (pixelSpan - outerPadding) / minOrdinalRectThickness)), density);
                            }
                        }
                        // vertical ordinal axis (e.g. categorical bar chart) does not need to reverse
                        if (isVertical && isScalar) {
                            scale.range(scale.range().reverse());
                        }
                        normalizeInfinityInScale(scale);
                        return {
                            scale: scale,
                            bestTickCount: bestTickCount,
                            usingDefaultDomain: usingDefaultDomain,
                        };
                    }
                    PowerKPIAxisHelper.createScale = createScale;
                    function getAmountOfTicksByDensity(amountOfTicks, density) {
                        return Math.floor(Math.max(amountOfTicks, MinAmountOfTicks) * density / 100);
                    }
                    function normalizeInfinityInScale(scale) {
                        // When large values (eg Number.MAX_VALUE) are involved, a call to scale.nice occasionally
                        // results in infinite values being included in the domain. To correct for that, we need to
                        // re-normalize the domain now to not include infinities.
                        var scaledDomain = scale.domain();
                        for (var i = 0, len = scaledDomain.length; i < len; ++i) {
                            if (scaledDomain[i] === Number.POSITIVE_INFINITY) {
                                scaledDomain[i] = Number.MAX_VALUE;
                            }
                            else if (scaledDomain[i] === Number.NEGATIVE_INFINITY) {
                                scaledDomain[i] = -Number.MAX_VALUE;
                            }
                        }
                        scale.domain(scaledDomain);
                    }
                    PowerKPIAxisHelper.normalizeInfinityInScale = normalizeInfinityInScale;
                    function createOrdinalScale(pixelSpan, dataDomain) {
                        return d3.scale.ordinal()
                            .rangePoints([0, pixelSpan])
                            .domain(dataDomain);
                    }
                    PowerKPIAxisHelper.createOrdinalScale = createOrdinalScale;
                    function normalizeLinearDomain(domain) {
                        if (isNaN(domain.min) || isNaN(domain.max)) {
                            domain.min = PowerKPIAxisHelper.emptyDomain[0];
                            domain.max = PowerKPIAxisHelper.emptyDomain[1];
                        }
                        else if (domain.min === domain.max) {
                            // d3 linear scale will give zero tickValues if max === min, so extend a little
                            domain.min = domain.min < 0 ? domain.min * 1.2 : domain.min * 0.8;
                            domain.max = domain.max < 0 ? domain.max * 0.8 : domain.max * 1.2;
                        }
                        else {
                            // Check that min is very small and is a negligable portion of the whole domain.
                            // (fix floating pt precision bugs)
                            // sometimes highlight value math causes small negative numbers which makes the axis add
                            // a large tick interval instead of just rendering at zero.
                            if (Math.abs(domain.min) < 0.0001 && domain.min / (domain.max - domain.min) < 0.0001) {
                                domain.min = 0;
                            }
                        }
                        return domain;
                    }
                    // this function can return different scales e.g. log, linear
                    // NOTE: export only for testing, do not access directly
                    function createNumericalScale(axisScaleType, pixelSpan, dataDomain, dataType, outerPadding, niceCount, shouldClamp) {
                        if (outerPadding === void 0) { outerPadding = 0; }
                        return createLinearScale(pixelSpan, dataDomain, outerPadding, niceCount, shouldClamp);
                    }
                    PowerKPIAxisHelper.createNumericalScale = createNumericalScale;
                    // NOTE: export only for testing, do not access directly
                    function createLinearScale(pixelSpan, dataDomain, outerPadding, niceCount, shouldClamp) {
                        if (outerPadding === void 0) { outerPadding = 0; }
                        var originalScale = d3.scale.linear()
                            .range([dataDomain[0], dataDomain[1]])
                            .domain([0, pixelSpan])
                            .clamp(false);
                        var end = pixelSpan - outerPadding;
                        var scale = d3.scale.linear()
                            .range([0, end])
                            .domain([originalScale(0), originalScale(end)])
                            .clamp(shouldClamp);
                        // we use millisecond ticks since epoch for datetime, so we don"t want any "nice" with numbers like 17398203392.
                        if (niceCount) {
                            scale.nice(niceCount);
                        }
                        return scale;
                    }
                    PowerKPIAxisHelper.createLinearScale = createLinearScale;
                    function getRecommendedNumberOfTicksForXAxis(availableWidth, minOrdinalRectThickness) {
                        var numberOfTicks = RecommendedNumberOfTicksLarge;
                        for (; numberOfTicks > 1; numberOfTicks--) {
                            if (numberOfTicks * minOrdinalRectThickness < availableWidth) {
                                break;
                            }
                        }
                        return numberOfTicks;
                    }
                    PowerKPIAxisHelper.getRecommendedNumberOfTicksForXAxis = getRecommendedNumberOfTicksForXAxis;
                    function getRecommendedNumberOfTicksForYAxis(availableWidth) {
                        if (availableWidth < AvailableWidthYAxisSmall) {
                            return RecommendedNumberOfTicksSmall;
                        }
                        if (availableWidth < AvailableWidthYAxisMiddle) {
                            return RecommendedNumberOfTicksMiddle;
                        }
                        return RecommendedNumberOfTicksLarge;
                    }
                    PowerKPIAxisHelper.getRecommendedNumberOfTicksForYAxis = getRecommendedNumberOfTicksForYAxis;
                    function isOrdinal(type) {
                        return !!(type
                            && (type.text
                                || type.bool
                                || (type.misc && type.misc.barcode)
                                || (type.geography && type.geography.postalCode)));
                    }
                    PowerKPIAxisHelper.isOrdinal = isOrdinal;
                    /**
                     * Get the best number of ticks based on minimum value, maximum value,
                     * measure metadata and max tick count.
                     *
                     * @param min The minimum of the data domain.
                     * @param max The maximum of the data domain.
                     * @param valuesMetadata The measure metadata array.
                     * @param maxTickCount The max count of intervals.
                     * @param isDateTime - flag to show single tick when min is equal to max.
                     */
                    function getBestNumberOfTicks(min, max, valuesMetadata, maxTickCount, isDateTime) {
                        if (isNaN(min) || isNaN(max)) {
                            return DefaultBestTickCount;
                        }
                        if (maxTickCount <= 1 || (max <= 1 && min >= -1)) {
                            return maxTickCount;
                        }
                        if (min === max) {
                            // datetime needs to only show one tick value in this case so formatting works correctly
                            if (!!isDateTime) {
                                return 1;
                            }
                            return DefaultBestTickCount;
                        }
                        if (hasNonIntegerData(valuesMetadata)) {
                            return maxTickCount;
                        }
                        // e.g. 5 - 2 + 1 = 4, => [2,3,4,5]
                        return Math.min(max - min + 1, maxTickCount);
                    }
                    PowerKPIAxisHelper.getBestNumberOfTicks = getBestNumberOfTicks;
                    function ensureValuesInRange(values, min, max) {
                        var filteredValues = values.filter(function (v) { return v >= min && v <= max; });
                        if (filteredValues.length < 2) {
                            filteredValues = [min, max];
                        }
                        return filteredValues;
                    }
                    PowerKPIAxisHelper.ensureValuesInRange = ensureValuesInRange;
                    function hasNonIntegerData(valuesMetadata) {
                        for (var i = 0, len = valuesMetadata.length; i < len; i++) {
                            var currentMetadata = valuesMetadata[i];
                            if (currentMetadata && currentMetadata.type && !currentMetadata.type.integer) {
                                return true;
                            }
                        }
                        return false;
                    }
                    PowerKPIAxisHelper.hasNonIntegerData = hasNonIntegerData;
                    /**
                     * Round out very small zero tick values (e.g. -1e-33 becomes 0).
                     *
                     * @param ticks Array of numbers (from d3.scale.ticks([maxTicks])).
                     * @param epsilon Max ratio of calculated tick interval which we will recognize as zero.
                     *
                     * e.g.
                     *     ticks = [-2, -1, 1e-10, 3, 4]; epsilon = 1e-5;
                     *     closeZero = 1e-5 * | 2 - 1 | = 1e-5
                     *     // Tick values <= 1e-5 replaced with 0
                     *     return [-2, -1, 0, 3, 4];
                     */
                    function createTrueZeroTickLabel(ticks, epsilon) {
                        if (epsilon === void 0) { epsilon = 1e-5; }
                        if (!ticks || ticks.length < 2) {
                            return ticks;
                        }
                        var closeZero = epsilon * Math.abs(ticks[1] - ticks[0]);
                        return ticks.map(function (tick) { return Math.abs(tick) <= closeZero ? 0 : tick; });
                    }
                })(PowerKPIAxisHelper = powerKpi.PowerKPIAxisHelper || (powerKpi.PowerKPIAxisHelper = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var AxisBaseComponent = /** @class */ (function (_super) {
                    __extends(AxisBaseComponent, _super);
                    function AxisBaseComponent() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    AxisBaseComponent.prototype.getTicks = function () {
                        return this.axisProperties
                            && this.axisProperties.axis
                            && this.axisProperties.axis.tickValues
                            && this.axisProperties.axis.tickValues() || [];
                    };
                    AxisBaseComponent.prototype.destroy = function () {
                        _super.prototype.destroy.call(this);
                        this.element = null;
                        this.gElement = null;
                    };
                    AxisBaseComponent.prototype.getLabelHeight = function (value, formatter, fontSize, fontFamily) {
                        var text = formatter.format(value);
                        var textProperties = this.getTextProperties(text, fontSize, fontFamily);
                        return powerbi.TextMeasurementService.measureSvgTextHeight(textProperties, text);
                    };
                    AxisBaseComponent.prototype.getLabelWidth = function (values, formatter, fontSize, fontFamily) {
                        var _this = this;
                        var width = Math.max.apply(Math, values.map(function (value) {
                            var text = formatter.format(value);
                            var textProperties = _this.getTextProperties(text, fontSize, fontFamily);
                            return powerbi.TextMeasurementService.measureSvgTextWidth(textProperties, text);
                        }));
                        return isFinite(width)
                            ? width
                            : 0;
                    };
                    AxisBaseComponent.prototype.getTextProperties = function (text, fontSize, fontFamily) {
                        return {
                            text: text,
                            fontFamily: fontFamily,
                            fontSize: PixelConverter.toString(fontSize)
                        };
                    };
                    AxisBaseComponent.prototype.getValueFormatter = function (min, max, metadata, tickCount, precision, valueFormat) {
                        return visuals.valueFormatter.create({
                            tickCount: tickCount,
                            precision: precision,
                            format: valueFormat,
                            value: min,
                            value2: max,
                            columnType: metadata && metadata.type
                        });
                    };
                    return AxisBaseComponent;
                }(powerKpi.BaseComponent));
                powerKpi.AxisBaseComponent = AxisBaseComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var TextMeasurementService = powerbi.TextMeasurementService;
                // powerbi.visuals
                var SVGUtil = powerbi.visuals.SVGUtil;
                var XAxisComponent = /** @class */ (function (_super) {
                    __extends(XAxisComponent, _super);
                    function XAxisComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.labelPadding = 8;
                        _this.className = "visualXAxis";
                        _this.elementClassNameContainer = "visualXAxisContainer";
                        _this.maxElementHeight = 0;
                        _this.maxElementWidth = 0;
                        _this.firstLabelWidth = 0;
                        _this.latestLabelWidth = 0;
                        _this.mainElementYOffset = -7.5;
                        _this.maxAmountOfTicks = 50;
                        _this.additionalLabelHeight = 5;
                        _this.additionalLabelWidth = 8;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true)
                            .append("svg")
                            .classed(_this.elementClassNameContainer, true);
                        _this.gElement = _this.element
                            .append("g")
                            .attr({
                            transform: SVGUtil.translate(0, _this.mainElementYOffset)
                        });
                        return _this;
                    }
                    XAxisComponent.prototype.preRender = function (options) {
                        if (!this.areRenderOptionsValid(options)) {
                            return;
                        }
                        var axis = options.axis, settings = options.settings;
                        if (settings.show) {
                            this.show();
                        }
                        else {
                            this.hide();
                        }
                        var fontSize = settings.fontSizeInPx;
                        this.formatter = this.getValueFormatterOfXAxis(axis, settings);
                        var domain = axis.scale.getDomain();
                        this.maxElementHeight = this.getLabelHeight(axis.max, this.formatter, fontSize, settings.fontFamily);
                        this.maxElementWidth = this.getLabelWidth([axis.min, axis.max], this.formatter, fontSize, settings.fontFamily);
                        this.firstLabelWidth = this.getLabelWidthWithAdditionalOffset([domain[0] || ""], this.formatter, fontSize, settings.fontFamily) / 2;
                        this.latestLabelWidth = this.getLabelWidthWithAdditionalOffset([domain.slice(-1)[0] || ""], this.formatter, fontSize, settings.fontFamily) / 2;
                    };
                    XAxisComponent.prototype.render = function (options) {
                        var _this = this;
                        if (!this.areRenderOptionsValid(options)) {
                            this.hide();
                            this.axisProperties = null;
                            return;
                        }
                        var axis = options.axis, settings = options.settings, viewport = options.viewport, margin = options.margin, additionalMargin = options.additionalMargin;
                        var fontSize = settings.fontSizeInPx;
                        var width = Math.max(0, viewport.width - margin.left - margin.right);
                        this.axisProperties = this.getAxisProperties(width, axis.scale.getDomain(), axis.metadata, !axis.scale.isOrdinal, settings.density);
                        if (!this.isShown) {
                            return;
                        }
                        this.element.style({
                            "font-family": settings.fontFamily,
                            "font-size": PixelConverter.toString(fontSize),
                            fill: settings.fontColor
                        });
                        this.updateViewport({
                            width: width,
                            height: this.maxElementHeight
                        });
                        this.element.style("margin-left", PixelConverter.toString(margin.left + additionalMargin.left));
                        this.gElement.attr("transform", SVGUtil.translate(0, 0));
                        this.axisProperties.axis
                            .orient("bottom")
                            .tickFormat(function (item, index) {
                            var currentValue = axis.type === powerKpi.DataRepresentationTypeEnum.DateType
                                ? new Date(item)
                                : item;
                            var formattedLabel = axis.metadata && axis.metadata.type && axis.metadata.type.dateTime
                                ? _this.axisProperties.formatter.format(currentValue)
                                : _this.formatter.format(currentValue);
                            var availableWidth = NaN;
                            if (_this.maxElementWidth > width) {
                                availableWidth = width;
                            }
                            if (!isNaN(availableWidth)) {
                                return TextMeasurementService.getTailoredTextOrDefault(_this.getTextProperties(formattedLabel, fontSize, settings.fontFamily), availableWidth);
                            }
                            return formattedLabel;
                        });
                        this.gElement.call(this.axisProperties.axis);
                    };
                    XAxisComponent.prototype.getAxisProperties = function (pixelSpan, dataDomain, metaDataColumn, isScalar, density) {
                        return powerKpi.PowerKPIAxisHelper.createAxis({
                            pixelSpan: pixelSpan,
                            dataDomain: dataDomain,
                            isScalar: isScalar,
                            density: density,
                            metaDataColumn: metaDataColumn,
                            isVertical: false,
                            isCategoryAxis: true,
                            formatString: undefined,
                            outerPadding: 0,
                            useTickIntervalForDisplayUnits: true,
                            shouldClamp: false,
                            outerPaddingRatio: 0,
                            innerPaddingRatio: 1,
                            tickLabelPadding: undefined,
                            minOrdinalRectThickness: this.maxElementWidth + this.labelPadding
                        });
                    };
                    XAxisComponent.prototype.getViewport = function () {
                        if (!this.isShown) {
                            return {
                                width: 0,
                                height: 0,
                                height2: 0,
                                width2: 0,
                            };
                        }
                        var height = this.maxElementHeight + this.additionalLabelHeight;
                        return {
                            width: this.firstLabelWidth,
                            width2: this.latestLabelWidth,
                            height: height,
                            height2: 0,
                        };
                    };
                    XAxisComponent.prototype.areRenderOptionsValid = function (options) {
                        return !!(options && options.axis && options.settings);
                    };
                    XAxisComponent.prototype.getValueFormatterOfXAxis = function (x, xAxis) {
                        var minValue;
                        var maxValue;
                        var precision;
                        if (x.type === powerKpi.DataRepresentationTypeEnum.NumberType) {
                            minValue = xAxis.displayUnits || x.max;
                            precision = xAxis.precision;
                        }
                        else {
                            minValue = x.min;
                            maxValue = x.max;
                        }
                        return this.getValueFormatter(minValue, maxValue, x.metadata, this.maxAmountOfTicks, precision, x.format || undefined);
                    };
                    XAxisComponent.prototype.getLabelWidthWithAdditionalOffset = function (values, formatter, fontSize, fontFamily) {
                        var width = this.getLabelWidth(values, formatter, fontSize, fontFamily);
                        return width > 0
                            ? width + this.additionalLabelWidth
                            : 0;
                    };
                    return XAxisComponent;
                }(powerKpi.AxisBaseComponent));
                powerKpi.XAxisComponent = XAxisComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var TextMeasurementService = powerbi.TextMeasurementService;
                var SVGUtil = powerbi.visuals.SVGUtil;
                var valueFormatter = powerbi.visuals.valueFormatter;
                var YAxisComponent = /** @class */ (function (_super) {
                    __extends(YAxisComponent, _super);
                    function YAxisComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "visualYAxis";
                        _this.additionalOffset = 10;
                        _this.labelOffset = 12;
                        _this.maxLabelWidth = 0;
                        _this.maxLabelHeight = 0;
                        _this.maxXAxisLabelWidth = 100;
                        _this.valueFormat = valueFormatter.DefaultNumericFormat;
                        _this.initElement(options.element, _this.className, "svg");
                        _this.gElement = _this.element.append("g");
                        return _this;
                    }
                    YAxisComponent.prototype.preRender = function (options) {
                        if (!this.areRenderOptionsValid(options)) {
                            return;
                        }
                        var axis = options.axis, settings = options.settings;
                        if (settings.show) {
                            this.show();
                        }
                        else {
                            this.hide();
                        }
                        var fontSize = settings.fontSizeInPx;
                        this.formatter = this.getValueFormatter(settings.displayUnits || axis.max, undefined, undefined, undefined, settings.precision, axis.format || this.valueFormat);
                        this.maxLabelHeight = this.getLabelHeight(axis.max, this.formatter, fontSize, settings.fontFamily);
                    };
                    YAxisComponent.prototype.render = function (options) {
                        var _this = this;
                        if (!this.areRenderOptionsValid(options)) {
                            this.hide();
                            this.axisProperties = null;
                            return;
                        }
                        var axis = options.axis, margin = options.margin, settings = options.settings, viewport = options.viewport;
                        var fontSize = settings.fontSizeInPx;
                        var height = Math.max(0, viewport.height - margin.top - margin.bottom);
                        this.axisProperties = this.getAxisProperties(height, [axis.min, axis.max], settings.density, settings.density === settings.maxDensity);
                        if (!this.isShown) {
                            return;
                        }
                        this.maxLabelWidth = settings.show
                            ? this.getLabelWidth(this.getTicks(), this.formatter, fontSize, settings.fontFamily)
                            : 0;
                        var availableWidth = viewport.width / 2;
                        var shouldLabelsBeTruncated = false;
                        if (this.maxLabelWidth > availableWidth) {
                            this.maxLabelWidth = availableWidth;
                            shouldLabelsBeTruncated = true;
                        }
                        this.element.style({
                            "font-family": settings.fontFamily,
                            "font-size": PixelConverter.toString(fontSize),
                            fill: settings.fontColor,
                            "padding": PixelConverter.toString(margin.top) + " 0 " + PixelConverter.toString(this.maxLabelHeight / 2) + " 0",
                        });
                        this.updateViewport({
                            height: height,
                            width: this.getTickWidth(),
                        });
                        this.gElement.attr({
                            transform: SVGUtil.translate(this.maxLabelWidth + this.labelOffset, this.maxLabelHeight / 2)
                        });
                        this.axisProperties.axis.tickFormat(function (item) {
                            var formattedLabel = _this.formatter.format(item);
                            if (shouldLabelsBeTruncated) {
                                return TextMeasurementService.getTailoredTextOrDefault(_this.getTextProperties(formattedLabel, fontSize, settings.fontFamily), availableWidth);
                            }
                            return formattedLabel;
                        });
                        this.gElement.call(this.axisProperties.axis);
                    };
                    YAxisComponent.prototype.getAxisProperties = function (pixelSpan, dataDomain, density, isDensityAtMax) {
                        return powerKpi.PowerKPIAxisHelper.createAxis({
                            pixelSpan: pixelSpan,
                            dataDomain: dataDomain,
                            density: density,
                            isVertical: true,
                            isScalar: true,
                            isCategoryAxis: false,
                            metaDataColumn: null,
                            formatString: undefined,
                            outerPadding: this.maxLabelHeight / 2,
                            useTickIntervalForDisplayUnits: true,
                            shouldClamp: false,
                            outerPaddingRatio: 0,
                            is100Pct: true,
                            innerPaddingRatio: 1,
                            tickLabelPadding: undefined,
                            minOrdinalRectThickness: this.maxLabelHeight,
                            shouldTheMinValueBeIncluded: isDensityAtMax
                        });
                    };
                    YAxisComponent.prototype.getViewport = function () {
                        if (!this.isShown) {
                            return {
                                width: 0,
                                height: 0
                            };
                        }
                        return {
                            width: this.getTickWidth(),
                            height: this.maxLabelHeight / 2,
                        };
                    };
                    YAxisComponent.prototype.getTickWidth = function () {
                        return this.maxLabelWidth + this.additionalOffset;
                    };
                    YAxisComponent.prototype.areRenderOptionsValid = function (options) {
                        return !!(options && options.axis && options.settings);
                    };
                    return YAxisComponent;
                }(powerKpi.AxisBaseComponent));
                powerKpi.YAxisComponent = YAxisComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var AxisReferenceLineBaseComponent = /** @class */ (function (_super) {
                    __extends(AxisReferenceLineBaseComponent, _super);
                    function AxisReferenceLineBaseComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "axisReferenceLineComponent";
                        _this.lineSelector = createClassAndSelector("axisReferenceLine");
                        _this.initElement(options.element, _this.className, "g");
                        return _this;
                    }
                    AxisReferenceLineBaseComponent.prototype.render = function (options) {
                        var ticks = options.ticks, scale = options.scale, settings = options.settings;
                        if (!ticks || !scale || !settings || !ticks.length) {
                            this.hide();
                            return;
                        }
                        this.show();
                        var lineSelection = this.element
                            .selectAll(this.lineSelector.selector)
                            .data(settings.show ? ticks : []);
                        var line = d3.svg.line()
                            .x(function (positions) {
                            return positions[0] || 0;
                        })
                            .y(function (positions) {
                            return positions[1] || 0;
                        });
                        var getPoints = this.getPoints(options);
                        lineSelection
                            .enter()
                            .append("svg:path")
                            .classed(this.lineSelector.class, true);
                        lineSelection
                            .attr({
                            d: function (value) {
                                return line(getPoints(value));
                            }
                        })
                            .style({
                            "stroke": settings.color,
                            "stroke-width": settings.thickness
                        });
                        lineSelection
                            .exit()
                            .remove();
                    };
                    return AxisReferenceLineBaseComponent;
                }(powerKpi.BaseComponent));
                powerKpi.AxisReferenceLineBaseComponent = AxisReferenceLineBaseComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var YAxisReferenceLineComponent = /** @class */ (function (_super) {
                    __extends(YAxisReferenceLineComponent, _super);
                    function YAxisReferenceLineComponent() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    YAxisReferenceLineComponent.prototype.getPoints = function (options) {
                        var scale = options.scale, viewport = options.viewport;
                        var yScale = scale
                            .copy()
                            .range([viewport.height, 0]);
                        return function (value) {
                            var y = yScale.scale(value);
                            return [
                                [0, y],
                                [viewport.width, y]
                            ];
                        };
                    };
                    return YAxisReferenceLineComponent;
                }(powerKpi.AxisReferenceLineBaseComponent));
                powerKpi.YAxisReferenceLineComponent = YAxisReferenceLineComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var XAxisReferenceLineComponent = /** @class */ (function (_super) {
                    __extends(XAxisReferenceLineComponent, _super);
                    function XAxisReferenceLineComponent() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    XAxisReferenceLineComponent.prototype.getPoints = function (options) {
                        var scale = options.scale, viewport = options.viewport;
                        var xScale = scale
                            .copy()
                            .range([0, viewport.width]);
                        return function (value) {
                            var x = xScale.scale(value);
                            return [
                                [x, 0],
                                [x, viewport.height]
                            ];
                        };
                    };
                    return XAxisReferenceLineComponent;
                }(powerKpi.AxisReferenceLineBaseComponent));
                powerKpi.XAxisReferenceLineComponent = XAxisReferenceLineComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var DotComponent = /** @class */ (function (_super) {
                    __extends(DotComponent, _super);
                    function DotComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.initElement(options.element, "dotComponent", "circle");
                        return _this;
                    }
                    DotComponent.prototype.render = function (options) {
                        var x = options.x, y = options.y, point = options.point, viewport = options.viewport, thickness = options.thickness, radiusFactor = options.radiusFactor;
                        var xScale = x
                            .copy()
                            .range([0, viewport.width]);
                        var yScale = y
                            .copy()
                            .range([viewport.height, 0]);
                        this.element
                            .attr({
                            cx: xScale.scale(point.x),
                            cy: yScale.scale(point.y),
                            r: thickness * radiusFactor
                        })
                            .style({
                            fill: point.color
                        });
                    };
                    return DotComponent;
                }(powerKpi.BaseComponent));
                powerKpi.DotComponent = DotComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var DotsComponent = /** @class */ (function (_super) {
                    __extends(DotsComponent, _super);
                    function DotsComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "dotsComponent";
                        _this.initElement(options.element, _this.className, "g");
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        return _this;
                    }
                    DotsComponent.prototype.render = function (options) {
                        var _this = this;
                        var _a = options.data, x = _a.x, series = _a.series, viewport = _a.viewport, dots = _a.settings.dots;
                        this.initComponents(this.components, series.length, function () {
                            return new powerKpi.DotComponent(_this.constructorOptions);
                        });
                        this.forEach(this.components, function (component, componentIndex) {
                            var currentSeries = series[componentIndex];
                            var point = currentSeries.points
                                .filter(function (point) {
                                return point.y !== null && !isNaN(point.y);
                            })[0];
                            if (point) {
                                component.show();
                                component.render({
                                    x: x.scale,
                                    point: point,
                                    viewport: viewport,
                                    y: currentSeries.y.scale,
                                    thickness: currentSeries.settings.line.thickness,
                                    radiusFactor: dots.radiusFactor,
                                });
                            }
                            else {
                                component.hide();
                            }
                        });
                    };
                    return DotsComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.DotsComponent = DotsComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var VerticalLineComponent = /** @class */ (function (_super) {
                    __extends(VerticalLineComponent, _super);
                    function VerticalLineComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "verticalLineComponent";
                        _this.lineSelector = createClassAndSelector("verticalLine");
                        _this.initElement(options.element, _this.className, "g");
                        return _this;
                    }
                    VerticalLineComponent.prototype.render = function (options) {
                        var _a = options.data, series = _a.series, viewport = _a.viewport, x = _a.x;
                        var xScale = x.scale
                            .copy()
                            .range([0, viewport.width]);
                        var points = series
                            && series[0]
                            && series[0].points
                            || [];
                        var lineSelection = this.element
                            .selectAll(this.lineSelector.selector)
                            .data(points);
                        lineSelection
                            .enter()
                            .append("line")
                            .classed(this.lineSelector.class, true);
                        lineSelection
                            .attr({
                            x1: function (point) { return xScale.scale(point.x); },
                            y1: 0,
                            x2: function (point) { return xScale.scale(point.x); },
                            y2: viewport.height
                        });
                        lineSelection
                            .exit()
                            .remove();
                    };
                    VerticalLineComponent.prototype.clear = function () {
                        this.element
                            .selectAll("*")
                            .remove();
                    };
                    VerticalLineComponent.prototype.destroy = function () {
                        this.element = null;
                    };
                    return VerticalLineComponent;
                }(powerKpi.BaseComponent));
                powerKpi.VerticalLineComponent = VerticalLineComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // powerbi.visuals
                var valueFormatter = powerbi.visuals.valueFormatter;
                var ToolTipComponent = powerbi.visuals.ToolTipComponent;
                // powerbi.visuals.controls
                var Rectangle = powerbi.visuals.controls.TouchUtils.Rectangle;
                var TooltipMarkerShapeEnum;
                (function (TooltipMarkerShapeEnum) {
                    TooltipMarkerShapeEnum[TooltipMarkerShapeEnum["circle"] = 0] = "circle";
                    TooltipMarkerShapeEnum[TooltipMarkerShapeEnum["none"] = 1] = "none";
                })(TooltipMarkerShapeEnum || (TooltipMarkerShapeEnum = {}));
                var TooltipComponent = /** @class */ (function (_super) {
                    __extends(TooltipComponent, _super);
                    function TooltipComponent() {
                        var _this = _super.call(this) || this;
                        _this.varianceDisplayName = "Variance";
                        _this.secondVarianceDisplayName = _this.varianceDisplayName + " 2";
                        _this.numberFormat = valueFormatter.DefaultNumericFormat;
                        /**
                         * TODO:
                         * We use ToolTipComponent instead of Tooltip API due to inability to use it on dashboard page.
                         * Let's revisit it once the issue is fixed
                         */
                        try {
                            _this.tooltipComponent = new ToolTipComponent();
                        }
                        catch (err) {
                            _this.tooltipComponent = null;
                        }
                        return _this;
                    }
                    TooltipComponent.prototype.render = function (options) {
                        if (!options.position || !this.tooltipComponent) {
                            return;
                        }
                        this.showTooltip(options);
                    };
                    TooltipComponent.prototype.showTooltip = function (options) {
                        var _this = this;
                        var position = options.position, _a = options.data, x = _a.x, series = _a.series, _b = _a.settings, kpiIndicator = _b.kpiIndicator, tooltipLabel = _b.tooltipLabel, tooltipVariance = _b.tooltipVariance, secondTooltipVariance = _b.secondTooltipVariance, tooltipValues = _b.tooltipValues, variances = _a.variances;
                        if (!tooltipLabel.show
                            && !tooltipVariance.show
                            && !tooltipValues.show
                            && !secondTooltipVariance.show) {
                            this.clear();
                            return;
                        }
                        var dataItems = [];
                        var firstVariance = this.getVarianceTooltip(series[0] && series[0].points[0], series[1] && series[1].points[0], tooltipVariance, this.varianceDisplayName, kpiIndicator.getCurrentKPI(series[0]
                            && series[0].points[0]
                            && series[0].points[0].kpiIndex), (variances[0] || [])[0]);
                        if (firstVariance) {
                            dataItems.push(firstVariance);
                        }
                        var secondVariance = this.getVarianceTooltip(series[0] && series[0].points[0], series[2] && series[2].points[0], secondTooltipVariance, this.secondVarianceDisplayName, undefined, (variances[1] || [])[0]);
                        if (secondVariance) {
                            dataItems.push(secondVariance);
                        }
                        if (dataItems.length) {
                            dataItems.push({
                                displayName: "   ",
                                value: "",
                                markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.none)
                            }, {
                                displayName: "   ",
                                value: "",
                                markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.none)
                            });
                        }
                        if (tooltipValues.show) {
                            series.forEach(function (dataSeries) {
                                var valueFormatter = _this.getValueFormatterByFormat(dataSeries.format || _this.numberFormat, tooltipValues.displayUnits, tooltipValues.precision);
                                var point = dataSeries
                                    && dataSeries.points
                                    && dataSeries.points[0];
                                if (point
                                    && point.y !== null
                                    && point.y !== undefined
                                    && !isNaN(point.y)) {
                                    dataItems.push({
                                        displayName: "" + dataSeries.name,
                                        value: valueFormatter.format(point.y),
                                        color: dataSeries.settings.line.fillColor,
                                        markerShape: _this.getTooltipMarkerShape(TooltipMarkerShapeEnum.circle)
                                    });
                                }
                            });
                        }
                        var point = series
                            && series[0]
                            && series[0].points
                            && series[0].points[0];
                        if (tooltipLabel.show
                            && point
                            && point.x !== undefined
                            && point.x !== null) {
                            var formatter = this.getValueFormatterByFormat(tooltipLabel.getFormat(), x.type === powerKpi.DataRepresentationTypeEnum.NumberType
                                ? tooltipLabel.displayUnits
                                : undefined, x.type === powerKpi.DataRepresentationTypeEnum.NumberType
                                ? tooltipLabel.precision
                                : undefined);
                            var text = formatter
                                ? formatter.format(point.x)
                                : point.x;
                            dataItems = [
                                {
                                    displayName: "",
                                    value: text,
                                    markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.circle)
                                }
                            ].concat(dataItems);
                        }
                        var rect = new Rectangle(position.x, position.y, 0, 0);
                        if (dataItems.length) {
                            this.tooltipComponent.show(dataItems, rect);
                        }
                        else {
                            this.clear();
                        }
                    };
                    TooltipComponent.prototype.getVarianceTooltip = function (firstPoint, secondPoint, settings, displayName, commonKPISettings, kpiIndicatorVariance) {
                        if (commonKPISettings === void 0) { commonKPISettings = {}; }
                        if (!settings.show) {
                            return null;
                        }
                        var variance = !isNaN(kpiIndicatorVariance) && kpiIndicatorVariance !== null
                            ? kpiIndicatorVariance
                            : this.getVarianceByPoints(firstPoint, secondPoint);
                        if (isNaN(variance)) {
                            return null;
                        }
                        var varianceFormatter = this.getValueFormatterByFormat(settings.getFormat(), settings.displayUnits, settings.precision);
                        return {
                            displayName: "" + settings.label || "" + displayName,
                            value: varianceFormatter.format(variance),
                            color: commonKPISettings.color || "rgba(0,0,0,0)",
                            markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.circle)
                        };
                    };
                    TooltipComponent.prototype.getValueFormatterByFormat = function (format, displayUnits, precision) {
                        return valueFormatter.create({
                            format: format,
                            precision: precision,
                            value: displayUnits
                        });
                    };
                    TooltipComponent.prototype.getTooltipMarkerShape = function (markerShape) {
                        return TooltipMarkerShapeEnum[markerShape];
                    };
                    TooltipComponent.prototype.clear = function () {
                        if (!this.tooltipComponent || !this.tooltipComponent.isTooltipComponentVisible) {
                            return;
                        }
                        this.tooltipComponent.hide();
                    };
                    TooltipComponent.prototype.destroy = function () {
                        this.clear();
                        this.tooltipComponent = null;
                    };
                    TooltipComponent.prototype.hide = function () {
                        this.clear();
                    };
                    return TooltipComponent;
                }(powerKpi.VarianceConverter));
                powerKpi.TooltipComponent = TooltipComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var LabelLayout = powerbi.LabelLayout;
                var TextMeasurementService = powerbi.TextMeasurementService;
                // powerbi.visuals
                var LabelUtils = powerbi.visuals.LabelUtils;
                var FontSize = powerbi.visuals.Units.FontSize;
                var valueFormatter = powerbi.visuals.valueFormatter;
                var LabelsComponent = /** @class */ (function (_super) {
                    __extends(LabelsComponent, _super);
                    function LabelsComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "labelsComponent";
                        _this.minimumLabelsToRender = 1;
                        _this.estimatedLabelWidth = 40; // This value represents a width of label just for optimization
                        _this.pointFilter = new powerKpi.DataRepresentationPointFilter();
                        _this.initElement(options.element, _this.className, "g");
                        return _this;
                    }
                    LabelsComponent.prototype.render = function (options) {
                        var labels = options.data.settings.labels;
                        if (labels.show) {
                            try {
                                this.renderLabels(options);
                            }
                            catch (err) {
                                this.clear();
                            }
                        }
                        else {
                            this.clear();
                        }
                    };
                    LabelsComponent.prototype.renderLabels = function (options) {
                        var _a = options.data, viewport = _a.viewport, labels = _a.settings.labels;
                        this.element
                            .classed(this.italicClassName, labels.isItalic)
                            .classed(this.boldClassName, labels.isBold);
                        var labelLayoutOptions = LabelUtils.getDataLabelLayoutOptions(null);
                        var labelLayout = new LabelLayout(labelLayoutOptions);
                        var labelGroups = this.getLabelGroups(options);
                        var dataLabels = labelLayout.layout(labelGroups, viewport);
                        LabelUtils.drawDefaultLabels(this.element, dataLabels, true);
                    };
                    LabelsComponent.prototype.getTextProperties = function (text, fontSize, fontFamily) {
                        return {
                            text: text,
                            fontFamily: fontFamily,
                            fontSize: PixelConverter.toString(fontSize)
                        };
                    };
                    LabelsComponent.prototype.getLabelGroups = function (options) {
                        var _this = this;
                        var _a = options.data, x = _a.x, series = _a.series, viewport = _a.viewport, labels = _a.settings.labels;
                        var xScale = x.scale
                            .copy()
                            .range([0, viewport.width]);
                        var fontSizeInPx = PixelConverter.fromPointToPixel(labels.fontSize);
                        var pointsLength = series
                            && series[0]
                            && series[0].points
                            && series[0].points.length
                            || 0;
                        var lastPointIndex = pointsLength - 1;
                        var availableAmountOfLabels = LabelUtils.getNumberOfLabelsToRender(viewport.width, labels.density, this.minimumLabelsToRender, this.estimatedLabelWidth);
                        var maxNumberOfLabels = Math.round(availableAmountOfLabels * labels.density / 100);
                        var indexScale = d3.scale
                            .quantize()
                            .domain([0, maxNumberOfLabels])
                            .range(d3.range(0, pointsLength, 1));
                        return series.map(function (currentSeries, seriesIndex) {
                            var labelDataPoints = [];
                            var labelDisplayUnits = labels.displayUnits || currentSeries.domain.max;
                            var valueFormatters = series.map(function (seriesGroup) {
                                return _this.getValueFormatter(labelDisplayUnits, labels.precision, seriesGroup.format);
                            });
                            var yScale = currentSeries.y.scale
                                .copy()
                                .range([viewport.height, 0]);
                            for (var index = 0, previousPointIndex = -1; index <= maxNumberOfLabels; index++) {
                                var pointIndex = indexScale(index);
                                var point = currentSeries.points[pointIndex];
                                if (previousPointIndex !== pointIndex && _this.pointFilter.isPointValid(point)) {
                                    previousPointIndex = pointIndex;
                                    var formattedValue = valueFormatters[seriesIndex].format(point.y);
                                    var textProperties = _this.getTextProperties(formattedValue, fontSizeInPx, labels.fontFamily);
                                    var textWidth = TextMeasurementService.measureSvgTextWidth(textProperties);
                                    var textHeight = TextMeasurementService.estimateSvgTextHeight(textProperties);
                                    var parentShape = {
                                        point: {
                                            x: xScale.scale(point.x),
                                            y: yScale.scale(point.y),
                                        },
                                        radius: 0,
                                        validPositions: [
                                            1 /* Above */,
                                            2 /* Below */,
                                            4 /* Left */,
                                            8 /* Right */
                                        ]
                                    };
                                    var labelDataPoint = {
                                        isPreferred: pointIndex === 0 || pointIndex === lastPointIndex,
                                        text: formattedValue,
                                        textSize: {
                                            width: textWidth,
                                            height: textHeight
                                        },
                                        outsideFill: labels.color,
                                        insideFill: labels.color,
                                        parentType: 0 /* Point */,
                                        parentShape: parentShape,
                                        fontProperties: {
                                            family: labels.fontFamily,
                                            color: labels.color,
                                            size: FontSize.createFromPt(labels.fontSize)
                                        },
                                        identity: null
                                    };
                                    labelDataPoints.push(labelDataPoint);
                                }
                            }
                            return {
                                labelDataPoints: labelDataPoints,
                                maxNumberOfLabels: labelDataPoints.length
                            };
                        });
                    };
                    LabelsComponent.prototype.getValueFormatter = function (displayUnits, precision, format) {
                        return valueFormatter.create({
                            format: format,
                            precision: precision,
                            value: displayUnits
                        });
                    };
                    return LabelsComponent;
                }(powerKpi.BaseComponent));
                powerKpi.LabelsComponent = LabelsComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon.CssConstants
                var PixelConverter = jsCommon.PixelConverter;
                var SvgComponent = /** @class */ (function (_super) {
                    __extends(SvgComponent, _super);
                    function SvgComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "svgComponent";
                        _this.dynamicComponents = [];
                        _this.initElement(options.element, _this.className, "svg");
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        _this.xAxisReferenceLineComponent = new powerKpi.XAxisReferenceLineComponent(_this.constructorOptions);
                        _this.yAxisReferenceLineComponent = new powerKpi.YAxisReferenceLineComponent(_this.constructorOptions);
                        _this.secondaryYAxisReferenceLineComponent = new powerKpi.YAxisReferenceLineComponent(_this.constructorOptions);
                        _this.chartComponent = new powerKpi.ChartComponent(_this.constructorOptions);
                        _this.labelsComponent = new powerKpi.LabelsComponent(_this.constructorOptions);
                        _this.components = [
                            _this.xAxisReferenceLineComponent,
                            _this.yAxisReferenceLineComponent,
                            _this.secondaryYAxisReferenceLineComponent,
                            _this.chartComponent,
                            _this.labelsComponent,
                        ];
                        _this.dynamicComponents = [
                            new powerKpi.VerticalLineComponent(_this.constructorOptions),
                            new powerKpi.DotsComponent(_this.constructorOptions),
                            new powerKpi.TooltipComponent(),
                        ];
                        _this.bindEvents();
                        return _this;
                    }
                    SvgComponent.prototype.bindEvents = function () {
                        var _this = this;
                        this.element.on("mousemove", function () { return _this.pointerMoveEvent(_this.renderOptions); });
                        this.element.on("touchmove", function () { return _this.pointerMoveEvent(_this.renderOptions); });
                        this.element.on("mouseleave", function () { return _this.pointerLeaveHandler(); });
                        this.element.on("touchend", function () { return _this.pointerLeaveHandler(); });
                    };
                    SvgComponent.prototype.render = function (options) {
                        var _a = options.data, _b = _a.groups, firstGroup = _b[0], secondGroup = _b[1], settings = _a.settings, viewport = _a.viewport, margin = _a.margin, _c = _a.x, values = _c.values, scale = _c.scale, additionalMargin = options.additionalMargin;
                        var reducedViewport = {
                            width: Math.max(0, viewport.width - margin.left - margin.right),
                            height: Math.max(0, viewport.height - margin.top - margin.bottom),
                        };
                        this.updateViewport(reducedViewport);
                        this.updateMargin(margin, additionalMargin);
                        this.positions = this.getPositions(reducedViewport, values, scale);
                        this.renderOptions = __assign({}, options, { data: __assign({}, options.data, { viewport: reducedViewport }) });
                        this.xAxisReferenceLineComponent.render({
                            scale: scale,
                            ticks: options.xTicks,
                            settings: settings.referenceLineOfXAxis,
                            viewport: reducedViewport,
                        });
                        this.yAxisReferenceLineComponent.render({
                            scale: firstGroup && firstGroup.y && firstGroup.y.scale,
                            ticks: options.yTicks,
                            settings: settings.referenceLineOfYAxis,
                            viewport: reducedViewport,
                        });
                        this.secondaryYAxisReferenceLineComponent.render({
                            scale: secondGroup && secondGroup.y && secondGroup.y.scale,
                            ticks: options.secondaryYTicks,
                            settings: settings.secondaryReferenceLineOfYAxis,
                            viewport: reducedViewport,
                        });
                        this.chartComponent.render(this.renderOptions);
                        this.labelsComponent.render(this.renderOptions);
                    };
                    SvgComponent.prototype.updateMargin = function (margin, additionalMargin) {
                        this.element.style({
                            "padding-top": PixelConverter.toString(margin.top + additionalMargin.top),
                            "padding-right": PixelConverter.toString(margin.right + additionalMargin.right),
                            "padding-bottom": PixelConverter.toString(margin.bottom + additionalMargin.bottom),
                            "padding-left": PixelConverter.toString(margin.left + additionalMargin.left),
                        });
                    };
                    SvgComponent.prototype.getPositions = function (viewport, values, xScale) {
                        var scale = xScale
                            .copy()
                            .range([0, viewport.width]);
                        return values.map(function (value) {
                            return scale.scale(value);
                        });
                    };
                    SvgComponent.prototype.pointerMoveEvent = function (options) {
                        var _a = options.data, settings = _a.settings, variance = _a.variance;
                        var isSecondTooltipShown = variance
                            && !isNaN(variance[1])
                            && settings.secondTooltipVariance.show;
                        if (!settings.tooltipLabel.show
                            && !settings.tooltipValues.show
                            && !settings.tooltipVariance.show
                            && !isSecondTooltipShown) {
                            this.pointerLeaveHandler();
                            return;
                        }
                        var event = d3.event;
                        event.preventDefault();
                        event.stopPropagation();
                        event.stopImmediatePropagation();
                        var offsetX = Number.MAX_VALUE;
                        var originalXPosition = Number.MAX_VALUE;
                        var originalYPosition = Number.MAX_VALUE;
                        switch (event.type) {
                            case "mousemove": {
                                originalXPosition = event.pageX;
                                originalYPosition = event.pageY;
                                offsetX = event.offsetX;
                                break;
                            }
                            case "touchmove": {
                                var touch = event;
                                if (touch && touch.touches && touch.touches[0]) {
                                    originalXPosition = touch.touches[0].pageX;
                                    originalYPosition = touch.touches[0].pageY;
                                    var element = this.element.node();
                                    var xScaleViewport = this.getXScale(element);
                                    offsetX = (originalXPosition - element.getBoundingClientRect().left) / xScaleViewport;
                                }
                                break;
                            }
                        }
                        this.renderDynamicComponentByPosition(offsetX, originalXPosition, originalYPosition, options);
                    };
                    // TODO: Looks like this method should be refactored in order to make it more understandable
                    SvgComponent.prototype.renderDynamicComponentByPosition = function (offsetX, xPosition, yPosition, baseOptions) {
                        var _a = baseOptions.data, series = _a.series, margin = _a.margin, yAxis = _a.settings.yAxis, additionalMargin = baseOptions.additionalMargin;
                        var amountOfPoints = series
                            && series[0]
                            && series[0].points
                            && series[0].points.length
                            || 0;
                        var dataPointIndex = this.getIndexByPosition(offsetX - margin.left - additionalMargin.left);
                        dataPointIndex = Math.min(Math.max(0, dataPointIndex), amountOfPoints);
                        var dataSeries = [];
                        baseOptions.data.series.forEach(function (series) {
                            var point = series.points[dataPointIndex];
                            if (point) {
                                var seriesToReturn = __assign({}, series, { points: [point] });
                                dataSeries.push(seriesToReturn);
                            }
                        });
                        var options = {
                            position: { x: xPosition, y: yPosition },
                            data: __assign({}, baseOptions.data, { series: dataSeries }),
                        };
                        if (options.data.variances.length) {
                            options.data.variances = options.data.variances.map(function (varianceGroup) {
                                var variance = varianceGroup[dataPointIndex];
                                if (!isNaN(variance) && variance !== null) {
                                    return [variance];
                                }
                                return [];
                            });
                        }
                        this.forEach(this.dynamicComponents, function (component) {
                            component.render(options);
                            if (component.show) {
                                component.show();
                            }
                        });
                    };
                    SvgComponent.prototype.getXScale = function (container) {
                        var rect = container.getBoundingClientRect();
                        var clientWidth = container.clientWidth || $(container).width();
                        return rect.width / clientWidth;
                    };
                    /**
                     * This method linear search
                     *
                     * This method is a small hack. Please improve if you know how to improve it
                     *
                     * @param position {number} Current pointer position
                     */
                    SvgComponent.prototype.getIndexByPosition = function (position) {
                        if (!this.positions) {
                            return NaN;
                        }
                        var length = this.positions.length;
                        for (var index = 0; index < length; index++) {
                            var condition = (index === 0
                                && position <= this.positions[index])
                                || (index === 0
                                    && this.positions[index + 1] !== undefined
                                    && position <= this.positions[index] + (this.positions[index + 1] - this.positions[index]) / 2)
                                || (index === length - 1
                                    && position >= this.positions[index])
                                || (index === length - 1
                                    && this.positions[index - 1] !== undefined
                                    && position >= this.positions[index] - (this.positions[index] - this.positions[index - 1]) / 2)
                                || (this.positions[index - 1] !== undefined
                                    && this.positions[index] !== undefined
                                    && this.positions[index + 1] !== undefined
                                    && (position >= (this.positions[index] - Math.abs(this.positions[index] - this.positions[index - 1]) / 2))
                                    && (position <= (this.positions[index] + Math.abs(this.positions[index + 1] - this.positions[index]) / 2)));
                            if (condition) {
                                return index;
                            }
                        }
                        return NaN;
                    };
                    SvgComponent.prototype.pointerLeaveHandler = function () {
                        this.forEach(this.dynamicComponents, function (component) {
                            component.hide();
                        });
                    };
                    SvgComponent.prototype.clear = function () {
                        _super.prototype.clear.call(this, this.dynamicComponents);
                        _super.prototype.clear.call(this);
                    };
                    SvgComponent.prototype.destroy = function () {
                        _super.prototype.destroy.call(this);
                        _super.prototype.destroy.call(this, this.dynamicComponents);
                        this.xAxisReferenceLineComponent = null;
                        this.yAxisReferenceLineComponent = null;
                        this.secondaryYAxisReferenceLineComponent = null;
                        this.chartComponent = null;
                        this.labelsComponent = null;
                    };
                    return SvgComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.SvgComponent = SvgComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var PlotComponent = /** @class */ (function (_super) {
                    __extends(PlotComponent, _super);
                    function PlotComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.additionalWidthOffset = 5;
                        _this.initElement(options.element, "plot");
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        _this.hide();
                        _this.yAxisComponent = new powerKpi.YAxisComponent(_this.constructorOptions);
                        _this.svgComponent = new powerKpi.SvgComponent(_this.constructorOptions);
                        _this.secondaryYAxisComponent = new powerKpi.YAxisComponent(_this.constructorOptions);
                        _this.xAxisComponent = new powerKpi.XAxisComponent(_this.constructorOptions);
                        _this.components = [
                            _this.yAxisComponent,
                            _this.svgComponent,
                            _this.secondaryYAxisComponent,
                            _this.xAxisComponent,
                        ];
                        return _this;
                    }
                    PlotComponent.prototype.render = function (options) {
                        var _a = options.data, x = _a.x, margin = _a.margin, _b = _a.groups, firstGroup = _b[0], secondGroup = _b[1], viewport = _a.viewport, _c = _a.settings, xAxis = _c.xAxis, yAxis = _c.yAxis, secondaryYAxis = _c.secondaryYAxis;
                        if (!firstGroup && !secondGroup) {
                            this.hide();
                            return;
                        }
                        this.show();
                        this.updateViewport(viewport);
                        var reducedViewport = {
                            height: viewport.height,
                            width: Math.max(0, viewport.width - this.additionalWidthOffset),
                        };
                        this.xAxisComponent.preRender({
                            axis: x,
                            settings: xAxis,
                            margin: null,
                            viewport: null,
                            additionalMargin: null,
                        });
                        this.yAxisComponent.preRender({
                            margin: null,
                            viewport: null,
                            settings: yAxis,
                            axis: firstGroup && firstGroup.y,
                        });
                        this.secondaryYAxisComponent.preRender({
                            margin: null,
                            viewport: null,
                            settings: secondaryYAxis,
                            axis: secondGroup && secondGroup.y
                        });
                        var xAxisViewport = this.xAxisComponent.getViewport();
                        var maxYAxisHeight = Math.max(this.yAxisComponent.getViewport().height, this.secondaryYAxisComponent.getViewport().height);
                        var height = Math.max(0, reducedViewport.height - xAxisViewport.height - maxYAxisHeight);
                        this.yAxisComponent.render({
                            margin: margin,
                            viewport: {
                                height: height,
                                width: reducedViewport.width,
                            },
                            axis: firstGroup && firstGroup.y,
                            settings: yAxis,
                        });
                        this.secondaryYAxisComponent.render({
                            margin: margin,
                            viewport: {
                                height: height,
                                width: reducedViewport.width,
                            },
                            axis: secondGroup && secondGroup.y,
                            settings: secondaryYAxis,
                        });
                        var yAxisViewport = this.yAxisComponent.getViewport();
                        var secondaryYAxisViewport = this.secondaryYAxisComponent.getViewport();
                        var leftOffset = this.getOffset(xAxisViewport.width, yAxisViewport.width);
                        var rightOffset = this.getOffset(xAxisViewport.width2, secondaryYAxisViewport.width);
                        var width = Math.max(0, reducedViewport.width
                            - yAxisViewport.width
                            - secondaryYAxisViewport.width
                            - leftOffset
                            - rightOffset);
                        this.xAxisComponent.render({
                            margin: margin,
                            additionalMargin: {
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: yAxisViewport.width + leftOffset,
                            },
                            viewport: {
                                width: width,
                                height: reducedViewport.height,
                            },
                            axis: x,
                            settings: xAxis,
                        });
                        this.svgComponent.render({
                            data: __assign({}, options.data, { margin: margin, viewport: {
                                    width: width,
                                    height: height,
                                } }),
                            xTicks: this.xAxisComponent.getTicks(),
                            yTicks: this.yAxisComponent.getTicks(),
                            secondaryYTicks: this.secondaryYAxisComponent.getTicks(),
                            additionalMargin: {
                                top: 0,
                                right: 0,
                                bottom: 0,
                                left: leftOffset
                            },
                        });
                    };
                    PlotComponent.prototype.destroy = function () {
                        _super.prototype.destroy.call(this);
                        this.xAxisComponent = null;
                        this.yAxisComponent = null;
                        this.secondaryYAxisComponent = null;
                        this.svgComponent = null;
                    };
                    PlotComponent.prototype.getOffset = function (xAxisWidth, yAxisWidth) {
                        return xAxisWidth > yAxisWidth
                            ? xAxisWidth - yAxisWidth
                            : 0;
                    };
                    return PlotComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.PlotComponent = PlotComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var LegendIcon = powerbi.visuals.LegendIcon;
                var createLegend = powerbi.visuals.createLegend;
                var LegendPosition = powerbi.visuals.LegendPosition;
                var LegendComponent = /** @class */ (function (_super) {
                    __extends(LegendComponent, _super);
                    function LegendComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "legendComponent";
                        _this.initElement(options.element, _this.className);
                        _this.legend = createLegend($(_this.element.node()), false, undefined, false, undefined /*legendPosition*/, options.style || undefined);
                        return _this;
                    }
                    LegendComponent.prototype.render = function (options) {
                        var legend = options.data.settings.legend;
                        var legendData = this.createLegendData(options.data, legend);
                        this.legend.changeOrientation(this.getLegendPosition(legend.position));
                        this.legend.drawLegend(legendData, options.data.viewport);
                    };
                    LegendComponent.prototype.createLegendData = function (data, settings) {
                        var legendDataPoints = data.series
                            .map(function (series) {
                            return {
                                color: series.settings.line.fillColor,
                                icon: LegendIcon.Circle,
                                label: series.name,
                                identity: series.selectionId,
                                selected: false
                            };
                        });
                        var fontSizeInPx = PixelConverter.fromPointToPixel(settings.fontSize);
                        return {
                            show: settings.show,
                            position: this.getLegendPosition(settings.position),
                            title: settings.titleText,
                            showTitle: settings.showTitle,
                            dataPoints: legendDataPoints,
                            grouped: false,
                            fontProperties: {
                                color: settings.labelColor,
                                family: settings.fontFamily,
                                size: {
                                    pt: settings.fontSize,
                                    px: PixelConverter.fromPointToPixel(settings.fontSize)
                                },
                                sizePx: fontSizeInPx,
                                toTextProperties: function (text) {
                                    return {
                                        text: text,
                                        fontFamily: settings.fontFamily,
                                        fontSize: PixelConverter.toString(fontSizeInPx),
                                        sizePx: fontSizeInPx
                                    };
                                },
                                toSVGStyle: function () {
                                    return {
                                        "font-size": PixelConverter.toString(fontSizeInPx),
                                        "font-family": settings.fontFamily,
                                        fill: settings.labelColor
                                    };
                                }
                            }
                        };
                    };
                    LegendComponent.prototype.getLegendPosition = function (position) {
                        var positionIndex = LegendPosition[position];
                        return positionIndex === undefined
                            ? LegendPosition.BottomCenter
                            : positionIndex;
                    };
                    LegendComponent.prototype.destroy = function () {
                        this.legend = null;
                        _super.prototype.destroy.call(this);
                    };
                    LegendComponent.prototype.getViewport = function () {
                        if (!this.legend) {
                            return {
                                width: 0,
                                height: 0
                            };
                        }
                        return this.legend.getMargins();
                    };
                    return LegendComponent;
                }(powerKpi.BaseComponent));
                powerKpi.LegendComponent = LegendComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var AlignEnum;
                (function (AlignEnum) {
                    AlignEnum[AlignEnum["alignLeft"] = 0] = "alignLeft";
                    AlignEnum[AlignEnum["alignCenter"] = 1] = "alignCenter";
                    AlignEnum[AlignEnum["alignRight"] = 2] = "alignRight";
                })(AlignEnum = powerKpi.AlignEnum || (powerKpi.AlignEnum = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var ContentAlignEnum;
                (function (ContentAlignEnum) {
                    ContentAlignEnum[ContentAlignEnum["contentLeft"] = 0] = "contentLeft";
                    ContentAlignEnum[ContentAlignEnum["contentRight"] = 1] = "contentRight";
                })(ContentAlignEnum = powerKpi.ContentAlignEnum || (powerKpi.ContentAlignEnum = {}));
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var CaptionKPIComponent = /** @class */ (function () {
                    function CaptionKPIComponent(options) {
                        this.className = "captionKPIComponent";
                        this.invisibleClassName = "invisible";
                        this.innerContainerSelector = createClassAndSelector("captionKPIComponentInnerContainer");
                        this.captionContainerSelector = createClassAndSelector("kpiCaptionContainer");
                        this.captionSelector = createClassAndSelector("kpiCaption");
                        this.sizeOffset = {
                            width: 15,
                            height: 5
                        };
                        this.isComponentRendered = false;
                        this.element = options.element
                            .append("div")
                            .classed(this.className, true)
                            .classed(options.className, true);
                    }
                    CaptionKPIComponent.prototype.render = function (options) {
                        var captions = options.captions, align = options.align, _a = options.data, viewport = _a.viewport, layout = _a.settings.layout;
                        var _b = this.getAttributes(captions), isShown = _b.isShown, size = _b.size;
                        this.size = size;
                        isShown = layout.autoHideVisualComponents
                            ? isShown && this.canComponentBeRenderedAtViewport(viewport, layout.getLayout())
                            : isShown;
                        this.isComponentRendered = isShown;
                        this.element.classed(this.invisibleClassName, !isShown);
                        this.innerContainer = this.getDynamicElement(this.element, this.innerContainerSelector, isShown, align);
                        this.renderElement(this.innerContainer, captions, this.captionContainerSelector, this.captionSelector);
                    };
                    CaptionKPIComponent.prototype.getAttributes = function (captions) {
                        var _this = this;
                        var isShown = false;
                        var size = {
                            width: 0,
                            height: 0
                        };
                        captions.forEach(function (captionList) {
                            var width = 0;
                            var height = 0;
                            captionList.forEach(function (caption) {
                                isShown = isShown || caption.settings.show;
                                if (caption.settings.show) {
                                    var text = caption.value || "M";
                                    var rect = powerbi.TextMeasurementService.measureSvgTextRect({
                                        text: text,
                                        fontFamily: caption.settings.fontFamily,
                                        fontSize: PixelConverter.toString(PixelConverter.fromPointToPixel(caption.settings.fontSize))
                                    }, text);
                                    height = Math.max(height, rect.height + _this.sizeOffset.height);
                                    width += rect.width + _this.sizeOffset.width;
                                }
                            });
                            size.height += height;
                            size.width = Math.max(size.width, width);
                        });
                        return {
                            size: size,
                            isShown: isShown
                        };
                    };
                    CaptionKPIComponent.prototype.canComponentBeRenderedAtViewport = function (viewport, layout) {
                        switch (powerKpi.LayoutEnum[layout]) {
                            case powerKpi.LayoutEnum.Left:
                            case powerKpi.LayoutEnum.Right: {
                                return viewport.height >= this.size.height;
                            }
                            case powerKpi.LayoutEnum.Top:
                            case powerKpi.LayoutEnum.Bottom: {
                                return viewport.width >= this.size.width;
                            }
                            default: {
                                return false;
                            }
                        }
                    };
                    CaptionKPIComponent.prototype.getDynamicElement = function (element, selector, shouldElementBeRendered, align) {
                        var selection = element
                            .selectAll(selector.selector)
                            .data(shouldElementBeRendered ? [shouldElementBeRendered] : []);
                        selection
                            .enter()
                            .append("div")
                            .classed(selector.class, true);
                        selection.attr({
                            "class": selector.class + " " + powerKpi.AlignEnum[align]
                        });
                        selection
                            .exit()
                            .remove();
                        return selection;
                    };
                    CaptionKPIComponent.prototype.renderElement = function (element, captions, containerSelector, selector) {
                        var containerSelection = element
                            .selectAll(containerSelector.selector)
                            .data(captions);
                        containerSelection
                            .enter()
                            .append("div")
                            .classed(containerSelector.class, true);
                        var elementSelection = containerSelection
                            .selectAll(selector.selector)
                            .data(function (captions) {
                            return (captions || []).filter(function (options) {
                                return options
                                    && options.settings
                                    && options.settings.show;
                            });
                        });
                        elementSelection
                            .enter()
                            .append("div")
                            .classed(selector.class, true);
                        elementSelection
                            .attr({
                            title: function (options) { return options.title || null; },
                            "class": function (options) {
                                var className = selector.class;
                                if (options.settings.isBold) {
                                    className += " boldStyle";
                                }
                                if (options.settings.isItalic) {
                                    className += " italicStyle";
                                }
                                if (options.className) {
                                    className += " " + options.className;
                                }
                                return className;
                            }
                        })
                            .style({
                            color: function (options) { return options.settings.fontColor; },
                            "font-size": function (options) {
                                return PixelConverter.toString(PixelConverter.fromPointToPixel(options.settings.fontSize));
                            },
                            "font-family": function (options) { return options.settings.fontFamily; },
                        })
                            .text(function (options) { return options.value; });
                        elementSelection
                            .exit()
                            .remove();
                        containerSelection
                            .exit()
                            .remove();
                    };
                    CaptionKPIComponent.prototype.isRendered = function () {
                        return this.isComponentRendered;
                    };
                    CaptionKPIComponent.prototype.clear = function () {
                        this.element.remove();
                    };
                    CaptionKPIComponent.prototype.destroy = function () {
                        this.element = null;
                    };
                    CaptionKPIComponent.prototype.getViewport = function () {
                        if (!this.size) {
                            return {
                                height: 0,
                                width: 0
                            };
                        }
                        return this.size;
                    };
                    return CaptionKPIComponent;
                }());
                powerKpi.CaptionKPIComponent = CaptionKPIComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var VarianceBaseComponent = /** @class */ (function (_super) {
                    __extends(VarianceBaseComponent, _super);
                    function VarianceBaseComponent() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    VarianceBaseComponent.prototype.getValueFormatter = function (displayUnits, precision, format) {
                        return visuals.valueFormatter.create({
                            format: format,
                            precision: precision,
                            value: displayUnits,
                            displayUnitSystemType: powerbi.DisplayUnitSystemType.WholeUnits,
                        });
                    };
                    VarianceBaseComponent.prototype.clear = function () {
                        this.element
                            .selectAll("*")
                            .remove();
                    };
                    VarianceBaseComponent.prototype.destroy = function () {
                        this.element = null;
                    };
                    return VarianceBaseComponent;
                }(powerKpi.CaptionKPIComponent));
                powerKpi.VarianceBaseComponent = VarianceBaseComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // powerbi.visuals
                var valueFormatter = powerbi.visuals.valueFormatter;
                var DateKPIComponent = /** @class */ (function (_super) {
                    __extends(DateKPIComponent, _super);
                    function DateKPIComponent(options) {
                        var _this = _super.call(this, {
                            element: options.element,
                            className: options.className
                        }) || this;
                        _this.extraClassName = "dateKPIComponent";
                        _this.element.classed(_this.extraClassName, true);
                        return _this;
                    }
                    DateKPIComponent.prototype.render = function (options) {
                        var _a = options.data, settings = _a.settings, x = _a.x, captionDetailsKPIComponentOptions = _.clone(options);
                        var axisValue = options.data.series
                            && options.data.series[0]
                            && options.data.series[0].current.x;
                        var formattedValue = "";
                        if (axisValue) {
                            var formatter = this.getValueFormatter(x.type, settings.dateValueKPI.getFormat(), settings.dateValueKPI.displayUnits || x.max, settings.dateValueKPI.precision);
                            if (formatter) {
                                formattedValue = formatter.format(axisValue);
                            }
                            else {
                                formattedValue = "" + axisValue;
                            }
                        }
                        var valueCaption = {
                            value: formattedValue,
                            settings: settings.dateValueKPI,
                            title: options.data.x.name || formattedValue
                        };
                        var labelCaption = {
                            value: options.data.x.name,
                            settings: settings.dateLabelKPI
                        };
                        captionDetailsKPIComponentOptions.captions = [
                            [valueCaption],
                            [labelCaption]
                        ];
                        captionDetailsKPIComponentOptions.align = powerKpi.AlignEnum.alignLeft;
                        _super.prototype.render.call(this, captionDetailsKPIComponentOptions);
                    };
                    DateKPIComponent.prototype.getValueFormatter = function (type, format, value, precision) {
                        var currentValue, currentPrecision;
                        if (type === powerKpi.DataRepresentationTypeEnum.NumberType) {
                            currentValue = value;
                            currentPrecision = precision;
                        }
                        return this.getValueFormatterByFormat(format, currentValue, currentPrecision);
                    };
                    DateKPIComponent.prototype.getValueFormatterByFormat = function (format, value, precision) {
                        return valueFormatter.create({
                            format: format,
                            value: value,
                            precision: precision
                        });
                    };
                    return DateKPIComponent;
                }(powerKpi.CaptionKPIComponent));
                powerKpi.DateKPIComponent = DateKPIComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // powerbi.visuals
                var valueFormatter = powerbi.visuals.valueFormatter;
                var ValueKPIComponent = /** @class */ (function (_super) {
                    __extends(ValueKPIComponent, _super);
                    function ValueKPIComponent(options) {
                        var _this = _super.call(this, {
                            element: options.element,
                            className: options.className
                        }) || this;
                        _this.extraClassName = "valueKPIComponent";
                        _this.element.classed(_this.extraClassName, true);
                        _this.valueFormat = valueFormatter.DefaultNumericFormat;
                        return _this;
                    }
                    ValueKPIComponent.prototype.render = function (options) {
                        var _a = options.data, series = _a.series, settings = _a.settings, variance = _a.variance, captionDetailsKPIComponentOptions = _.clone(options);
                        var caption = "", details = "", title = "";
                        if (options.data.series
                            && options.data.series[0]
                            && options.data.series[0].current
                            && !isNaN(options.data.series[0].current.y)) {
                            var formatter = valueFormatter.create({
                                format: options.data.series[0].format || this.valueFormat,
                                precision: settings.actualValueKPI.precision,
                                value: settings.actualValueKPI.displayUnits || series[0].domain.max,
                                displayUnitSystemType: powerbi.DisplayUnitSystemType.WholeUnits,
                            });
                            var value = options.data.series[0].current.y;
                            title = "" + value;
                            caption = formatter.format(value);
                            details = options.data.series[0].name;
                        }
                        var valueCaption = {
                            title: details || title,
                            value: caption,
                            settings: settings.actualValueKPI
                        };
                        var labelCaption = {
                            value: details,
                            settings: settings.actualLabelKPI
                        };
                        captionDetailsKPIComponentOptions.captions = [
                            [valueCaption],
                            [labelCaption]
                        ];
                        var isVarianceKPIAvailable = series
                            && series.length > 0
                            && series[0]
                            && series[0].current
                            && !isNaN(series[0].current.kpiIndex);
                        var currentAlign = powerKpi.AlignEnum.alignCenter;
                        if (!settings.dateLabelKPI.show && !settings.dateValueKPI.show) {
                            currentAlign = powerKpi.AlignEnum.alignLeft;
                        }
                        else if (((!settings.kpiIndicatorValue.show || isNaN(variance[0]))
                            && (!settings.kpiIndicatorLabel.isShown() || (isNaN(variance[0]) && series[0] && series[0].current && isNaN(series[0].current.kpiIndex)))
                            && (!isVarianceKPIAvailable || !settings.kpiIndicator.show))
                            && (!settings.secondKPIIndicatorValue.show && !settings.secondKPIIndicatorLabel.isShown()
                                || isNaN(variance[1]))) {
                            currentAlign = powerKpi.AlignEnum.alignRight;
                        }
                        captionDetailsKPIComponentOptions.align = currentAlign;
                        _super.prototype.render.call(this, captionDetailsKPIComponentOptions);
                    };
                    return ValueKPIComponent;
                }(powerKpi.CaptionKPIComponent));
                powerKpi.ValueKPIComponent = ValueKPIComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var VarianceComponentWithIndicator = /** @class */ (function (_super) {
                    __extends(VarianceComponentWithIndicator, _super);
                    function VarianceComponentWithIndicator(options) {
                        var _this = _super.call(this, {
                            element: options.element,
                            className: options.className
                        }) || this;
                        _this.componentClassName = "varianceComponentWithSymbol";
                        _this.indicatorClassName = "kpiIndicator";
                        _this.indicatorValueClassName = "kpiIndicatorValueCaption";
                        _this.hiddenElementClassName = "hiddenElement";
                        _this.fakedKPIIndicatorClassName = "fakedKPIIndicator";
                        _this.glyphClassName = "powerKPI_glyphIcon";
                        _this.element.classed(_this.componentClassName, true);
                        return _this;
                    }
                    VarianceComponentWithIndicator.prototype.render = function (options) {
                        var _a = options.data, series = _a.series, _b = _a.settings, dateLabelKPI = _b.dateLabelKPI, dateValueKPI = _b.dateValueKPI, actualValueKPI = _b.actualValueKPI, actualLabelKPI = _b.actualLabelKPI, secondKPIIndicatorValue = _b.secondKPIIndicatorValue, secondKPIIndicatorLabel = _b.secondKPIIndicatorLabel, kpiIndicatorValue = _b.kpiIndicatorValue, kpiIndicatorLabel = _b.kpiIndicatorLabel, kpiIndicator = _b.kpiIndicator, variance = _a.variance;
                        var current = (series && series.length > 0 && series[0]).current, kpiIndex = NaN;
                        if (current) {
                            kpiIndex = current.kpiIndex;
                        }
                        var kpiIndicatorSettings = kpiIndicator.getCurrentKPI(kpiIndex);
                        var varianceSettings = _.clone(kpiIndicatorValue);
                        var kpiLabelSettings = _.clone(kpiIndicatorLabel);
                        kpiLabelSettings.show = kpiIndicatorLabel.isShown();
                        varianceSettings.fontColor = kpiIndicatorValue.matchKPIColor
                            && kpiIndicatorSettings
                            && kpiIndicatorSettings.color
                            ? kpiIndicatorSettings.color
                            : kpiIndicatorValue.fontColor;
                        if (isNaN(variance[0])) {
                            varianceSettings.show = false;
                        }
                        var indicatorSettings = new powerKpi.KPIIndicatorValueDescriptor();
                        indicatorSettings.fontColor = kpiIndicatorSettings.color;
                        indicatorSettings.show = kpiIndicator.show;
                        indicatorSettings.isBold = false; // This options doesn't make any sense for symbol
                        indicatorSettings.fontSize = kpiIndicator.fontSize;
                        indicatorSettings.fontFamily = null;
                        if (isNaN(kpiIndex)) {
                            indicatorSettings.show = false;
                        }
                        if (isNaN(variance[0]) && isNaN(kpiIndex)) {
                            kpiLabelSettings.show = false;
                        }
                        var currentAlign = powerKpi.AlignEnum.alignRight;
                        if (!dateLabelKPI.show
                            && !dateValueKPI.show
                            && !actualLabelKPI.show
                            && (!actualValueKPI.show || series[0] && series[0].current && isNaN(series[0] && series[0].current.y))
                            && (!secondKPIIndicatorValue.show && !secondKPIIndicatorLabel.isShown() || isNaN(variance[1]))) {
                            currentAlign = powerKpi.AlignEnum.alignLeft;
                        }
                        else if (!varianceSettings.show && !kpiLabelSettings.show) {
                            currentAlign = powerKpi.AlignEnum.alignCenter;
                        }
                        var className = kpiIndicatorSettings.shape
                            ? this.indicatorClassName + " " + this.glyphClassName + " " + kpiIndicatorSettings.shape
                            : undefined;
                        var title = kpiIndicatorLabel.label || "" + variance[0];
                        var indicatorCaption = {
                            title: title,
                            value: "",
                            settings: indicatorSettings,
                            className: className
                        };
                        var fakedIndicatorSettings = new powerKpi.KPIIndicatorValueDescriptor();
                        // We should implement a copy method for settings
                        fakedIndicatorSettings.fontColor = indicatorSettings.fontColor;
                        fakedIndicatorSettings.show = indicatorSettings.show;
                        fakedIndicatorSettings.isBold = indicatorSettings.isBold;
                        fakedIndicatorSettings.fontSize = indicatorSettings.fontSize;
                        fakedIndicatorSettings.show = fakedIndicatorSettings.show
                            && varianceSettings.show
                            && kpiLabelSettings.show
                            && !!kpiIndicatorLabel.label;
                        var fakedIndicatorCaption = {
                            title: title,
                            value: "",
                            settings: fakedIndicatorSettings,
                            className: className
                                ? className + " " + this.hiddenElementClassName + " " + this.fakedKPIIndicatorClassName
                                : this.hiddenElementClassName + " " + this.fakedKPIIndicatorClassName
                        };
                        var formatter = this.getValueFormatter(varianceSettings.displayUnits, varianceSettings.precision, kpiIndicatorValue.getFormat());
                        var valueCaption = {
                            title: title,
                            value: formatter.format(variance[0]),
                            settings: varianceSettings
                        };
                        var labelCaption = {
                            value: kpiIndicatorLabel.label,
                            settings: kpiLabelSettings,
                            className: this.indicatorValueClassName
                        };
                        var captions = [];
                        switch (powerKpi.HorizontalLayoutEnum[kpiIndicator.position]) {
                            case powerKpi.HorizontalLayoutEnum.Right: {
                                captions.push([valueCaption, indicatorCaption], [labelCaption, fakedIndicatorCaption]);
                                break;
                            }
                            case powerKpi.HorizontalLayoutEnum.Left:
                            default: {
                                captions.push([indicatorCaption, valueCaption], [fakedIndicatorCaption, labelCaption]);
                                break;
                            }
                        }
                        _super.prototype.render.call(this, {
                            captions: captions,
                            data: options.data,
                            align: currentAlign
                        });
                    };
                    return VarianceComponentWithIndicator;
                }(powerKpi.VarianceBaseComponent));
                powerKpi.VarianceComponentWithIndicator = VarianceComponentWithIndicator;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                var VarianceComponentWithCustomLabel = /** @class */ (function (_super) {
                    __extends(VarianceComponentWithCustomLabel, _super);
                    function VarianceComponentWithCustomLabel(options) {
                        var _this = _super.call(this, {
                            element: options.element,
                            className: options.className
                        }) || this;
                        _this.componentClassName = "varianceComponentWithCustomLabel";
                        _this.element.classed(_this.componentClassName, true);
                        return _this;
                    }
                    VarianceComponentWithCustomLabel.prototype.render = function (options) {
                        var _a = options.data, series = _a.series, variance = _a.variance, _b = _a.settings, dateLabelKPI = _b.dateLabelKPI, dateValueKPI = _b.dateValueKPI, actualValueKPI = _b.actualValueKPI, actualLabelKPI = _b.actualLabelKPI, kpiIndicatorValue = _b.kpiIndicatorValue, kpiIndicatorLabel = _b.kpiIndicatorLabel, secondKPIIndicatorValue = _b.secondKPIIndicatorValue, secondKPIIndicatorLabel = _b.secondKPIIndicatorLabel, kpiIndicator = _b.kpiIndicator;
                        var varianceSettings = _.clone(secondKPIIndicatorValue);
                        var labelSettings = _.clone(secondKPIIndicatorLabel);
                        labelSettings.show = secondKPIIndicatorLabel.isShown();
                        if (isNaN(variance[1])) {
                            varianceSettings.show = false;
                            labelSettings.show = false;
                        }
                        var isVarianceKPIAvailable = series
                            && series.length > 0
                            && series[0]
                            && series[0].current
                            && !isNaN(series[0].current.kpiIndex);
                        var currentAlign = powerKpi.AlignEnum.alignCenter;
                        if (!dateLabelKPI.show
                            && !dateValueKPI.show
                            && (!actualValueKPI.show || series[0] && series[0].current && isNaN(series[0] && series[0].current.y))
                            && !actualLabelKPI.show) {
                            currentAlign = powerKpi.AlignEnum.alignLeft;
                        }
                        else if ((!kpiIndicatorValue.show || isNaN(variance[0]))
                            && (!kpiIndicatorLabel.isShown() || (isNaN(variance[0]) && series[0] && series[0].current && isNaN(series[0].current.kpiIndex)))
                            && (!isVarianceKPIAvailable || !kpiIndicator.show)) {
                            currentAlign = powerKpi.AlignEnum.alignRight;
                        }
                        var formatter = this.getValueFormatter(varianceSettings.displayUnits, varianceSettings.precision, secondKPIIndicatorValue.getFormat());
                        var valueCaption = {
                            value: formatter.format(variance[1]),
                            title: secondKPIIndicatorLabel.label || "" + variance[1],
                            settings: varianceSettings
                        };
                        var labelCaption = {
                            value: secondKPIIndicatorLabel.label,
                            settings: labelSettings
                        };
                        _super.prototype.render.call(this, {
                            captions: [
                                [valueCaption],
                                [labelCaption]
                            ],
                            data: options.data,
                            align: currentAlign
                        });
                    };
                    return VarianceComponentWithCustomLabel;
                }(powerKpi.VarianceBaseComponent));
                powerKpi.VarianceComponentWithCustomLabel = VarianceComponentWithCustomLabel;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                // powerbi.visuals
                var LegendPosition = powerbi.visuals.LegendPosition;
                var KPIComponentLayoutEnum;
                (function (KPIComponentLayoutEnum) {
                    KPIComponentLayoutEnum[KPIComponentLayoutEnum["kpiComponentRow"] = 0] = "kpiComponentRow";
                    KPIComponentLayoutEnum[KPIComponentLayoutEnum["kpiComponentColumn"] = 1] = "kpiComponentColumn";
                })(KPIComponentLayoutEnum || (KPIComponentLayoutEnum = {}));
                var KPIComponent = /** @class */ (function (_super) {
                    __extends(KPIComponent, _super);
                    function KPIComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "kpiComponent";
                        _this.layout = powerKpi.LayoutEnum.Top;
                        _this.childSelector = createClassAndSelector("kpiComponentChild");
                        _this.initElement(options.element, _this.className);
                        var className = _this.childSelector.class;
                        var constructorOptions = __assign({}, options, { className: className, element: _this.element });
                        _this.components = [
                            new powerKpi.VarianceComponentWithIndicator(constructorOptions),
                            new powerKpi.DateKPIComponent(constructorOptions),
                            new powerKpi.ValueKPIComponent(constructorOptions),
                            new powerKpi.VarianceComponentWithCustomLabel(constructorOptions),
                        ];
                        return _this;
                    }
                    KPIComponent.prototype.render = function (options) {
                        var _this = this;
                        var _a = options.data, _b = _a.viewport, width = _b.width, height = _b.height, _c = _a.settings, layout = _c.layout, legend = _c.legend;
                        var viewport = { width: width, height: height };
                        this.layout = powerKpi.LayoutEnum[layout.getLayout()];
                        this.applyStyleBasedOnLayout(layout, legend, viewport);
                        var howManyComponentsWasRendered = 0;
                        this.components.forEach(function (component) {
                            component.render(options);
                            if (component.isRendered()) {
                                howManyComponentsWasRendered++;
                            }
                            if (component.getViewport) {
                                var margins = component.getViewport();
                                switch (_this.layout) {
                                    case powerKpi.LayoutEnum.Left:
                                    case powerKpi.LayoutEnum.Right: {
                                        options.data.viewport.height -= margins.height;
                                        break;
                                    }
                                    case powerKpi.LayoutEnum.Bottom:
                                    case powerKpi.LayoutEnum.Top:
                                    default: {
                                        options.data.viewport.width -= margins.width;
                                        break;
                                    }
                                }
                            }
                        });
                        options.data.viewport = viewport;
                        this.applyWidthToChildren(howManyComponentsWasRendered);
                    };
                    KPIComponent.prototype.applyStyleBasedOnLayout = function (layoutSettings, legend, viewport) {
                        var currentLayout, kpiLayout, maxWidth;
                        switch (powerKpi.LayoutEnum[layoutSettings.getLayout()]) {
                            case powerKpi.LayoutEnum.Left:
                            case powerKpi.LayoutEnum.Right: {
                                kpiLayout = KPIComponentLayoutEnum.kpiComponentColumn;
                                maxWidth = null;
                                if (!legend.show
                                    || (LegendPosition[legend.position]
                                        && (LegendPosition[legend.position] === LegendPosition.Bottom
                                            || LegendPosition[legend.position] === LegendPosition.BottomCenter))) {
                                    currentLayout = powerKpi.LayoutToStyleEnum.columnReversedLayout;
                                }
                                else {
                                    currentLayout = powerKpi.LayoutToStyleEnum.columnLayout;
                                }
                                break;
                            }
                            case powerKpi.LayoutEnum.Bottom:
                            case powerKpi.LayoutEnum.Top:
                            default: {
                                currentLayout = powerKpi.LayoutToStyleEnum.rowLayout;
                                kpiLayout = KPIComponentLayoutEnum.kpiComponentRow;
                                maxWidth = PixelConverter.toString(Math.floor(viewport.width));
                                break;
                            }
                        }
                        this.element
                            .style({
                            "max-width": maxWidth
                        })
                            .attr({
                            "class": this.className + " " + powerKpi.LayoutToStyleEnum[currentLayout] + " " + KPIComponentLayoutEnum[kpiLayout]
                        });
                    };
                    KPIComponent.prototype.applyWidthToChildren = function (howManyComponentsWasRendered) {
                        var width = 100;
                        if (this.layout === powerKpi.LayoutEnum.Top || this.layout === powerKpi.LayoutEnum.Bottom) {
                            width = width / howManyComponentsWasRendered;
                        }
                        var widthInPercentage = width + "%";
                        this.element
                            .selectAll(this.childSelector.selector)
                            .style({
                            width: widthInPercentage,
                            "max-width": widthInPercentage
                        });
                    };
                    /**
                     * The clientHeight and clientWidth might return invalid values if some DOM elements force this element to squash.
                     * Such issue often occurs if flex layout is used
                     *
                     * To fix this issue plotComponent is hidden by default.
                     */
                    KPIComponent.prototype.getViewport = function () {
                        var viewport = {
                            height: 0,
                            width: 0
                        };
                        if (this.element) {
                            var element = this.element.node();
                            switch (this.layout) {
                                case powerKpi.LayoutEnum.Left:
                                case powerKpi.LayoutEnum.Right: {
                                    viewport.width = element.clientWidth;
                                    break;
                                }
                                case powerKpi.LayoutEnum.Top:
                                case powerKpi.LayoutEnum.Bottom:
                                default: {
                                    viewport.height = element.clientHeight;
                                    break;
                                }
                            }
                        }
                        return viewport;
                    };
                    return KPIComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.KPIComponent = KPIComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon.CssConstants
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var SubtitleComponent = /** @class */ (function (_super) {
                    __extends(SubtitleComponent, _super);
                    function SubtitleComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "subtitleComponent";
                        _this.subTitleSelector = createClassAndSelector("subtitle");
                        _this.initElement(options.element, _this.className);
                        return _this;
                    }
                    SubtitleComponent.prototype.render = function (options) {
                        var subtitle = options.data.settings.subtitle;
                        var data = subtitle.show
                            ? [subtitle]
                            : [];
                        var subtitleSelection = this.element
                            .selectAll(this.subTitleSelector.selector)
                            .data(data);
                        subtitleSelection
                            .enter()
                            .append("div")
                            .classed(this.subTitleSelector.class, true);
                        subtitleSelection
                            .text(function (settings) { return settings.titleText; })
                            .style({
                            color: function (settings) { return settings.fontColor; },
                            "text-align": function (settings) { return settings.alignment; },
                            "font-size": function (settings) {
                                var fontSizeInPx = PixelConverter.fromPointToPixel(settings.fontSize);
                                return PixelConverter.toString(fontSizeInPx);
                            },
                            "background-color": function (settings) { return settings.background; },
                            "font-family": function (settings) { return settings.fontFamily; },
                        });
                        subtitleSelection
                            .exit()
                            .remove();
                    };
                    SubtitleComponent.prototype.getViewport = function () {
                        var viewport = {
                            height: 0,
                            width: 0
                        };
                        if (this.element) {
                            viewport.height = $(this.element.node()).height();
                        }
                        return viewport;
                    };
                    return SubtitleComponent;
                }(powerKpi.BaseComponent));
                powerKpi.SubtitleComponent = SubtitleComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var LayoutComponent = /** @class */ (function (_super) {
                    __extends(LayoutComponent, _super);
                    function LayoutComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "layoutComponent";
                        _this.initElement(options.element, _this.className);
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        _this.components = [
                            new powerKpi.KPIComponent(_this.constructorOptions),
                            new powerKpi.PlotComponent(_this.constructorOptions),
                        ];
                        return _this;
                    }
                    LayoutComponent.prototype.render = function (options) {
                        var _a = options.data, viewport = _a.viewport, layout = _a.settings.layout;
                        var selectedLayout = this.getLayout(layout.getLayout());
                        var widthInPx = PixelConverter.toString(viewport.width);
                        var heightInPx = PixelConverter.toString(viewport.height);
                        this.element
                            .attr({
                            "class": this.getClassNameWithPrefix(this.className) + " " + powerKpi.LayoutToStyleEnum[selectedLayout]
                        })
                            .style({
                            "min-width": widthInPx,
                            "max-width": widthInPx,
                            "width": widthInPx,
                            "min-height": heightInPx,
                            "max-height": heightInPx,
                            "height": heightInPx,
                        });
                        this.forEach(this.components, function (component) {
                            component.render(options);
                            if (component.getViewport) {
                                var margins = component.getViewport();
                                options.data.viewport.height -= margins.height;
                                options.data.viewport.width -= margins.width;
                            }
                        });
                    };
                    LayoutComponent.prototype.getLayout = function (layout) {
                        switch (powerKpi.LayoutEnum[layout]) {
                            case powerKpi.LayoutEnum.Left: {
                                return powerKpi.LayoutToStyleEnum.rowLayout;
                            }
                            case powerKpi.LayoutEnum.Right: {
                                return powerKpi.LayoutToStyleEnum.rowReversedLayout;
                            }
                            case powerKpi.LayoutEnum.Bottom: {
                                return powerKpi.LayoutToStyleEnum.columnReversedLayout;
                            }
                            case powerKpi.LayoutEnum.Top:
                            default: {
                                return powerKpi.LayoutToStyleEnum.columnLayout;
                            }
                        }
                    };
                    return LayoutComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.LayoutComponent = LayoutComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // jsCommon.CssConstants
                var PixelConverter = jsCommon.PixelConverter;
                var MainComponent = /** @class */ (function (_super) {
                    __extends(MainComponent, _super);
                    function MainComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "powerKPI";
                        _this.classNameForPhantomJs = "powerKPI_phantom_js";
                        _this.initElement(options.element, _this.className);
                        _this.element.classed(_this.classNameForPhantomJs, _this.isExecutedInPhantomJs());
                        _this.constructorOptions = __assign({}, options, { element: _this.element });
                        _this.components = [
                            new powerKpi.SubtitleComponent(_this.constructorOptions),
                            new powerKpi.CommonComponent(_this.constructorOptions),
                        ];
                        return _this;
                    }
                    /**
                     * We detect Phantom JS in order to detect PBI Snapshot Service
                     * This is required as phantom js does not support CSS Flex Box well
                     *
                     * This code must be removed once PBI Snapshot Service is updated to Chromium
                     */
                    MainComponent.prototype.isExecutedInPhantomJs = function () {
                        try {
                            return /PhantomJS/.test(window.navigator.userAgent);
                        }
                        catch (_) {
                            return false;
                        }
                    };
                    MainComponent.prototype.render = function (options) {
                        var _a = options.data, series = _a.series, viewport = _a.viewport, kpiIndicator = _a.settings.kpiIndicator;
                        var backgroundColor = null;
                        if (kpiIndicator.shouldBackgroundColorMatchKpiColor
                            && series
                            && series.length > 0
                            && series[0]
                            && series[0].current) {
                            var kpiIndicatorSettings = kpiIndicator.getCurrentKPI(series[0].current.kpiIndex);
                            if (kpiIndicatorSettings && kpiIndicatorSettings.color) {
                                backgroundColor = kpiIndicatorSettings.color;
                            }
                        }
                        this.element.style({
                            width: PixelConverter.toString(viewport.width),
                            height: PixelConverter.toString(viewport.height),
                            "background-color": backgroundColor,
                        });
                        this.forEach(this.components, function (component) {
                            component.render(options);
                            if (component.getViewport) {
                                var margins = component.getViewport();
                                options.data.viewport.height -= margins.height;
                                options.data.viewport.width -= margins.width;
                            }
                        });
                    };
                    return MainComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.MainComponent = MainComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKpi;
            (function (powerKpi) {
                // powerbi.visuals
                var LegendPosition = powerbi.visuals.LegendPosition;
                var CommonComponent = /** @class */ (function (_super) {
                    __extends(CommonComponent, _super);
                    function CommonComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "commonComponent";
                        _this.initElement(options.element, _this.className, "div");
                        _this.element.classed(_this.className, true);
                        _this.components = [
                            new powerKpi.LegendComponent(__assign({}, options, { element: _this.element })),
                            new powerKpi.LayoutComponent({
                                element: _this.element
                            })
                        ];
                        return _this;
                    }
                    CommonComponent.prototype.render = function (options) {
                        var viewport = __assign({}, options.data.viewport);
                        this.forEach(this.components, function (component) {
                            component.render(options);
                            if (component.getViewport) {
                                var viewport_1 = component.getViewport();
                                options.data.viewport.height -= viewport_1.height;
                                options.data.viewport.width -= viewport_1.width;
                            }
                        });
                        var legend = options.data.settings.legend, layout = this.getLayout(legend.position);
                        this.element.attr({
                            "class": this.getClassNameWithPrefix(this.className) + " " + powerKpi.LayoutToStyleEnum[layout]
                        });
                    };
                    CommonComponent.prototype.getLayout = function (position) {
                        switch (LegendPosition[position]) {
                            case LegendPosition.Left:
                            case LegendPosition.LeftCenter: {
                                return powerKpi.LayoutToStyleEnum.rowLayout;
                            }
                            case LegendPosition.Right:
                            case LegendPosition.RightCenter: {
                                return powerKpi.LayoutToStyleEnum.rowReversedLayout;
                            }
                            case LegendPosition.Top:
                            case LegendPosition.TopCenter: {
                                return powerKpi.LayoutToStyleEnum.columnLayout;
                            }
                            case LegendPosition.Bottom:
                            case LegendPosition.BottomCenter:
                            default: {
                                return powerKpi.LayoutToStyleEnum.columnReversedLayout;
                            }
                        }
                    };
                    return CommonComponent;
                }(powerKpi.BaseContainerComponent));
                powerKpi.CommonComponent = CommonComponent;
            })(powerKpi = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var MainComponent = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.MainComponent;
            var SeriesSettings = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.SeriesSettings;
            var CapabilitiesFactory = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.CapabilitiesFactory;
            var CommonCapabilitiesBuilder = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.CommonCapabilitiesBuilder;
            var PowerKPI = /** @class */ (function () {
                function PowerKPI() {
                }
                PowerKPI.prototype.init = function (options) {
                    this.rootElement = d3.select(options.element.get(0));
                    this.converter = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.createConverter();
                    this.style = options.style;
                    this.component = new MainComponent({
                        element: this.rootElement,
                        style: this.style,
                    });
                };
                PowerKPI.prototype.update = function (options) {
                    var dataView = options && options.dataViews && options.dataViews[0];
                    var viewport = options
                        && options.viewport
                        && {
                            width: options.viewport.width - PowerKPI.ViewportReducer,
                            height: options.viewport.height - PowerKPI.ViewportReducer,
                        }
                        || { height: 0, width: 0 };
                    this.render(this.converter.convert({
                        dataView: dataView,
                        viewport: viewport,
                        style: this.style
                    }));
                };
                PowerKPI.prototype.render = function (dataRepresentation) {
                    this.dataRepresentation = dataRepresentation;
                    this.component.render({
                        data: this.dataRepresentation
                    });
                };
                PowerKPI.prototype.enumerateObjectInstances = function (options) {
                    var objectName = options.objectName;
                    var shouldUseContainers = Object.keys(new SeriesSettings()).indexOf(objectName) !== -1;
                    if (shouldUseContainers) {
                        var enumerationBuilder = new visuals.ObjectEnumerationBuilder();
                        this.enumerateSettings(enumerationBuilder, objectName, this.getSettings.bind(this));
                        return enumerationBuilder.complete();
                    }
                    var instances = this.dataRepresentation
                        && this.dataRepresentation.settings
                        && this.dataRepresentation.settings.enumerateObjectInstances(options)
                        || [];
                    switch (options.objectName) {
                        case "kpiIndicator": {
                            if (this.dataRepresentation
                                && (this.dataRepresentation.variance
                                    && isNaN(this.dataRepresentation.variance[0])
                                    || (this.dataRepresentation.settings
                                        && !this.dataRepresentation.settings.kpiIndicatorValue.show))
                                && instances
                                && instances[0]
                                && instances[0].properties) {
                                delete instances[0].properties["position"];
                            }
                            break;
                        }
                        case "kpiIndicatorValue": {
                            if (this.dataRepresentation
                                && this.dataRepresentation.variance
                                && isNaN(this.dataRepresentation.variance[0])) {
                                instances = [];
                            }
                            break;
                        }
                        case "kpiIndicatorLabel": {
                            if (this.dataRepresentation
                                && this.dataRepresentation.variance
                                && isNaN(this.dataRepresentation.variance[0])
                                && this.dataRepresentation.series
                                && this.dataRepresentation.series[0]
                                && this.dataRepresentation.series[0].current
                                && isNaN(this.dataRepresentation.series[0].current.kpiIndex)) {
                                instances = [];
                            }
                            break;
                        }
                        case "secondKPIIndicatorValue":
                        case "secondKPIIndicatorLabel":
                        case "secondTooltipVariance": {
                            if (!this.dataRepresentation.series
                                || !this.dataRepresentation.variance
                                || isNaN(this.dataRepresentation.variance[1])) {
                                instances = [];
                            }
                            break;
                        }
                        case "secondaryYAxis":
                        case "secondaryReferenceLineOfYAxis": {
                            if (!this.dataRepresentation
                                || !this.dataRepresentation.groups
                                || !this.dataRepresentation.groups[1]) {
                                instances = [];
                            }
                            break;
                        }
                    }
                    return instances;
                };
                PowerKPI.prototype.enumerateSettings = function (enumerationBuilder, objectName, getSettings) {
                    this.applySettings(objectName, "[All]", null, enumerationBuilder, getSettings(this.dataRepresentation.settings[objectName]));
                    this.enumerateSettingsDeep(this.dataRepresentation.series, objectName, enumerationBuilder, getSettings);
                };
                PowerKPI.prototype.getSettings = function (settings) {
                    return settings.enumerateProperties();
                };
                PowerKPI.prototype.applySettings = function (objectName, displayName, selector, enumerationBuilder, properties) {
                    enumerationBuilder.pushContainer({ displayName: displayName });
                    var instance = {
                        selector: selector,
                        objectName: objectName,
                        properties: properties,
                    };
                    enumerationBuilder.pushInstance(instance);
                    enumerationBuilder.popContainer();
                };
                PowerKPI.prototype.enumerateSettingsDeep = function (seriesArray, objectName, enumerationBuilder, getSettings) {
                    for (var _i = 0, seriesArray_1 = seriesArray; _i < seriesArray_1.length; _i++) {
                        var series = seriesArray_1[_i];
                        this.applySettings(objectName, series.name, visuals.ColorHelper.normalizeSelector(series.selectionId.getSelector()), enumerationBuilder, getSettings(series.settings[objectName]));
                    }
                };
                PowerKPI.prototype.destroy = function () {
                    this.component.destroy();
                    this.converter = null;
                    this.rootElement = null;
                    this.component = null;
                    this.dataRepresentation = null;
                };
                PowerKPI.ViewportReducer = 3;
                PowerKPI.capabilities = new CapabilitiesFactory([
                    new CommonCapabilitiesBuilder(),
                ]).getCapabilities();
                return PowerKPI;
            }());
            powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPI = PowerKPI;
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ScrollUtils = /** @class */ (function () {
                    function ScrollUtils() {
                    }
                    ScrollUtils.d3ScrollTo = function (element, x, y) {
                        ScrollUtils.scrollTo(ScrollUtils.getHTMLElement(element), x, y);
                    };
                    ScrollUtils.scrollTo = function (element, x, y) {
                        if (!element) {
                            return;
                        }
                        element.scrollLeft = x;
                        element.scrollTop = y;
                    };
                    ScrollUtils.resetScroll = function (element) {
                        ScrollUtils.scrollTo(ScrollUtils.getHTMLElement(element), 0, 0);
                    };
                    ScrollUtils.getHTMLElement = function (element) {
                        return element
                            ? element.node()
                            : null;
                    };
                    return ScrollUtils;
                }());
                powerKPIMatrix.ScrollUtils = ScrollUtils;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var NumericValueUtils = /** @class */ (function () {
                    function NumericValueUtils() {
                    }
                    NumericValueUtils.isValueValid = function (value) {
                        return this.isValueFinite(value)
                            && !this.isValueZero(value);
                    };
                    NumericValueUtils.isValueFinite = function (value) {
                        return !isNaN(value)
                            && this.isValueDefined(value)
                            && isFinite(value);
                    };
                    NumericValueUtils.isValueZero = function (value) {
                        return value === 0;
                    };
                    NumericValueUtils.isValueDefined = function (value) {
                        return value !== undefined && value !== null;
                    };
                    return NumericValueUtils;
                }());
                powerKPIMatrix.NumericValueUtils = NumericValueUtils;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var FormattingUtils = /** @class */ (function () {
                    function FormattingUtils() {
                    }
                    FormattingUtils.getFormatterOfAxisValue = function (min, max, type, metadata, settings) {
                        switch (type) {
                            case powerKPIMatrix.DataRepresentationTypeEnum.NumberType: {
                                return this.getValueFormatter(settings.displayUnits || min, undefined, metadata, settings.precision, settings.getFormat());
                            }
                            default: {
                                return this.getValueFormatter(min, max, metadata, undefined, settings.getFormat(), undefined);
                            }
                        }
                    };
                    FormattingUtils.getValueFormatter = function (min, max, metadata, precision, format, displayUnitSystemType) {
                        if (displayUnitSystemType === void 0) { displayUnitSystemType = powerbi.DisplayUnitSystemType.WholeUnits; }
                        return visuals.valueFormatter.create({
                            format: format,
                            precision: precision,
                            value: min,
                            value2: max,
                            displayUnitSystemType: displayUnitSystemType,
                            columnType: metadata && metadata.type,
                        });
                    };
                    FormattingUtils.getFormattedValue = function (value, formatter) {
                        if (isNaN(value)) {
                            return "";
                        }
                        if (formatter) {
                            return formatter.format(value);
                        }
                        return "" + value;
                    };
                    return FormattingUtils;
                }());
                powerKPIMatrix.FormattingUtils = FormattingUtils;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ScaleService = /** @class */ (function () {
                    function ScaleService() {
                    }
                    Object.defineProperty(ScaleService.prototype, "element", {
                        set: function (element) {
                            this.rootElement = element;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    ScaleService.prototype.getScale = function () {
                        if (!this.rootElement) {
                            return {
                                width: 1,
                                height: 1
                            };
                        }
                        var rect = this.rootElement.getBoundingClientRect();
                        var clientWidth;
                        var clientHeight;
                        if (!this.rootElement.clientWidth || !this.rootElement.clientHeight) {
                            var $container = $(this.rootElement);
                            clientWidth = $container.width();
                            clientHeight = $container.height();
                        }
                        else {
                            clientWidth = this.rootElement.clientWidth;
                            clientHeight = this.rootElement.clientHeight;
                        }
                        return {
                            width: rect.width / clientWidth,
                            height: rect.height / clientHeight
                        };
                    };
                    ScaleService.prototype.destroy = function () {
                        this.rootElement = null;
                    };
                    return ScaleService;
                }());
                powerKPIMatrix.ScaleService = ScaleService;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var SettingsService = /** @class */ (function () {
                    function SettingsService() {
                    }
                    Object.defineProperty(SettingsService.prototype, "host", {
                        set: function (host) {
                            this.hostServices = host;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    SettingsService.prototype.save = function (objectName, value) {
                        this.mergeInstances([
                            {
                                objectName: objectName,
                                selector: null,
                                properties: {
                                    value: value
                                }
                            }
                        ]);
                    };
                    SettingsService.prototype.mergeInstances = function (instances) {
                        if (!this.hostServices) {
                            return;
                        }
                        var objectInstance = {
                            merge: instances || [],
                        };
                        this.hostServices.persistProperties(objectInstance);
                    };
                    SettingsService.prototype.destroy = function () {
                        this.hostServices = null;
                    };
                    return SettingsService;
                }());
                powerKPIMatrix.SettingsService = SettingsService;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.dateColumn = {
                    name: "date",
                    displayName: "Date",
                    kind: VisualDataRoleKind.Grouping
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.actualValueColumn = {
                    name: "actualValue",
                    displayName: "Actual Value",
                    mappingDisplayName: "",
                    kind: VisualDataRoleKind.Measure
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.comparisonValueColumn = {
                    name: "targetValue",
                    displayName: "Comparison Value",
                    kind: VisualDataRoleKind.Measure,
                    emptyValues: [""],
                    helpMessage: "To make your columns appear in these dropdowns, please add to the corresponding bucket in Field View"
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.secondComparisonValueColumn = {
                    name: "secondComparisonValue",
                    displayName: "Second Comparison Value",
                    kind: VisualDataRoleKind.Measure,
                    emptyValues: [""],
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.kpiIndicatorIndexColumn = {
                    name: "kpiIndicatorIndex",
                    displayName: "KPI Indicator Index",
                    kind: VisualDataRoleKind.Measure,
                    emptyValues: [""]
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.kpiIndicatorValueColumn = {
                    name: "kpiIndicatorValue",
                    displayName: "KPI Indicator Value",
                    kind: VisualDataRoleKind.Measure,
                    emptyValues: ["(Optional)"]
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.secondKPIIndicatorValueColumn = {
                    name: "secondKPIIndicatorValue",
                    displayName: "Second KPI Indicator Value",
                    kind: VisualDataRoleKind.Measure,
                    emptyValues: ["(Optional)"]
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.hyperlinkColumn = {
                    name: "hyperlink",
                    displayName: "Hyperlink",
                    kind: VisualDataRoleKind.Grouping
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.rowBasedMetricNameColumn = {
                    name: "rowBasedMetricNameColumn",
                    displayName: "Row-based Metric Name",
                    kind: VisualDataRoleKind.Grouping,
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.sortOrderColumn = {
                    name: "sortOrderColumn",
                    displayName: "Sort Order",
                    kind: VisualDataRoleKind.GroupingOrMeasure,
                    description: "Drop a column with desired sort order here",
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.categoryColumn = {
                    name: "category",
                    displayName: "Category",
                    kind: VisualDataRoleKind.Grouping,
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi
                var VisualDataRoleKind = powerbi.VisualDataRoleKind;
                powerKPIMatrix.imageColumn = {
                    name: "image",
                    displayName: "Image",
                    kind: VisualDataRoleKind.Grouping,
                };
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var SettingsPropertyBase = /** @class */ (function () {
                    function SettingsPropertyBase() {
                        this.isEnumerable = true;
                    }
                    SettingsPropertyBase.prototype.applyDefault = function (defaultSettings) {
                        var _this = this;
                        if (!defaultSettings) {
                            return;
                        }
                        Object
                            .keys(defaultSettings)
                            .forEach(function (propertyName) {
                            _this[propertyName] = defaultSettings[propertyName];
                        });
                    };
                    return SettingsPropertyBase;
                }());
                powerKPIMatrix.SettingsPropertyBase = SettingsPropertyBase;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var PersistentSettings = /** @class */ (function (_super) {
                    __extends(PersistentSettings, _super);
                    function PersistentSettings() {
                        var _this = _super.call(this) || this;
                        _this.show = false;
                        _this.value = "";
                        _this.isEnumerable = false;
                        return _this;
                    }
                    return PersistentSettings;
                }(powerKPIMatrix.SettingsPropertyBase));
                powerKPIMatrix.PersistentSettings = PersistentSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var OrderSettings = /** @class */ (function (_super) {
                    __extends(OrderSettings, _super);
                    function OrderSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.minOrder = 1;
                        _this.maxOrder = 10;
                        _this.order = 0;
                        return _this;
                    }
                    OrderSettings.prototype.parse = function () {
                        this.order = Math.max(Math.min(this.maxOrder, this.order), this.minOrder);
                    };
                    return OrderSettings;
                }(powerKPIMatrix.SettingsPropertyBase));
                powerKPIMatrix.OrderSettings = OrderSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ShowSettings = /** @class */ (function (_super) {
                    __extends(ShowSettings, _super);
                    function ShowSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.show = true; // This is for entire group
                        _this.isShown = true;
                        return _this;
                    }
                    return ShowSettings;
                }(powerKPIMatrix.OrderSettings));
                powerKPIMatrix.ShowSettings = ShowSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var LabelSettings = /** @class */ (function (_super) {
                    __extends(LabelSettings, _super);
                    function LabelSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.backgroundColor = undefined;
                        _this.label = "";
                        return _this;
                    }
                    return LabelSettings;
                }(powerKPIMatrix.ShowSettings));
                powerKPIMatrix.LabelSettings = LabelSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var HorizontalTextAlignment;
                (function (HorizontalTextAlignment) {
                    HorizontalTextAlignment[HorizontalTextAlignment["left"] = "left"] = "left";
                    HorizontalTextAlignment[HorizontalTextAlignment["center"] = "center"] = "center";
                    HorizontalTextAlignment[HorizontalTextAlignment["right"] = "right"] = "right";
                })(HorizontalTextAlignment = powerKPIMatrix.HorizontalTextAlignment || (powerKPIMatrix.HorizontalTextAlignment = {}));
                var VerticalTextAlignment;
                (function (VerticalTextAlignment) {
                    VerticalTextAlignment[VerticalTextAlignment["top"] = "top"] = "top";
                    VerticalTextAlignment[VerticalTextAlignment["center"] = "center"] = "center";
                    VerticalTextAlignment[VerticalTextAlignment["bottom"] = "bottom"] = "bottom";
                })(VerticalTextAlignment = powerKPIMatrix.VerticalTextAlignment || (powerKPIMatrix.VerticalTextAlignment = {}));
                powerKPIMatrix.verticalTextAlignmentIEnumType = powerbi.createEnumType([
                    {
                        value: VerticalTextAlignment.top,
                        displayName: "Top"
                    },
                    {
                        value: VerticalTextAlignment.center,
                        displayName: "Center"
                    },
                    {
                        value: VerticalTextAlignment.bottom,
                        displayName: "Bottom"
                    },
                ]);
                var WrapText;
                (function (WrapText) {
                    WrapText[WrapText["NoWrap"] = 0] = "NoWrap";
                    WrapText[WrapText["Wrap"] = 1] = "Wrap";
                    WrapText[WrapText["BreakWord"] = 2] = "BreakWord";
                })(WrapText = powerKPIMatrix.WrapText || (powerKPIMatrix.WrapText = {}));
                powerKPIMatrix.wrapTextIEnumType = powerbi.createEnumType([
                    {
                        value: WrapText.NoWrap,
                        displayName: "No-wrap"
                    },
                    {
                        value: WrapText.Wrap,
                        displayName: "Wrap"
                    },
                    {
                        value: WrapText.BreakWord,
                        displayName: "Break Word"
                    },
                ]);
                var FontSettings = /** @class */ (function (_super) {
                    __extends(FontSettings, _super);
                    function FontSettings() {
                        var _this = _super.call(this) || this;
                        _this.minImageSize = Number.MIN_VALUE;
                        _this.maxImageSize = 4096;
                        _this.setDefault();
                        return _this;
                    }
                    Object.defineProperty(FontSettings.prototype, "textFontSize", {
                        get: function () {
                            return +this.fontSize; // Power BI returns numbers as string for some reason. This line converts into number
                        },
                        set: function (size) {
                            this.fontSize = "" + size;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    FontSettings.prototype.setDefault = function () {
                        this.isHyperlinkSpecified = false;
                        this.isImageSpecified = false;
                        this.fontSize = "8";
                        this.wrapText = WrapText.Wrap;
                        this.isBold = false;
                        this.isItalic = false;
                        this.isUnderlined = false;
                        this.isHyperlinkUnderlined = true;
                        this.fontFamily = "'Segoe UI', wf_segoe-ui_normal, helvetica, arial, sans-serif";
                        this.alignment = HorizontalTextAlignment.right;
                        this.verticalAlignment = VerticalTextAlignment.center;
                        this.shouldMatchKPIColor = true;
                        this.color = "#000";
                        this.hyperlinkColor = "#0000EE";
                        this.shouldShowLabel = true;
                        this.shouldShowImage = true;
                        this.imageIconWidth = undefined;
                        this.imageIconHeight = undefined;
                        this.backgroundColor = undefined;
                    };
                    FontSettings.prototype.updateHyperlinkVisibility = function (visibility) {
                        if (this.isHyperlinkSpecified) {
                            return;
                        }
                        this.changeVisibilityOfHyperlinkProperties(visibility);
                        this.isHyperlinkSpecified = visibility;
                    };
                    FontSettings.prototype.updateImageVisibility = function (visibility) {
                        if (this.isImageSpecified) {
                            return;
                        }
                        this.changeVisibilityOfImageProperties(visibility);
                        this.isImageSpecified = visibility;
                    };
                    FontSettings.prototype.hideCommonProperties = function () {
                        this.changeVisibilityOfCommonProperties(false);
                    };
                    FontSettings.prototype.changeVisibilityOfCommonProperties = function (enumerable) {
                        Object.defineProperties(this, {
                            isUnderlined: {
                                enumerable: enumerable,
                            },
                        });
                        this.changeVisibilityOfColor(enumerable);
                    };
                    FontSettings.prototype.changeVisibilityOfColor = function (enumerable) {
                        Object.defineProperties(this, {
                            color: {
                                enumerable: enumerable,
                            },
                        });
                    };
                    FontSettings.prototype.changeVisibilityOfHyperlinkProperties = function (enumerable) {
                        Object.defineProperties(this, {
                            isHyperlinkUnderlined: {
                                enumerable: enumerable,
                            },
                            hyperlinkColor: {
                                enumerable: enumerable,
                            },
                        });
                    };
                    FontSettings.prototype.changeVisibilityOfImageProperties = function (enumerable) {
                        var isImageSizeShown = enumerable && this.shouldShowImage;
                        Object.defineProperties(this, {
                            shouldShowLabel: {
                                enumerable: enumerable,
                            },
                            shouldShowImage: {
                                enumerable: enumerable,
                            },
                            imageIconWidth: {
                                enumerable: isImageSizeShown,
                            },
                            imageIconHeight: {
                                enumerable: isImageSizeShown,
                            },
                        });
                    };
                    FontSettings.prototype.getColor = function (isHyperlinkSpecified) {
                        if (isHyperlinkSpecified) {
                            return this.hyperlinkColor;
                        }
                        return this.color;
                    };
                    FontSettings.prototype.isTextUnderlined = function (isHyperlinkSpecified) {
                        if (isHyperlinkSpecified) {
                            return this.isHyperlinkUnderlined;
                        }
                        return this.isUnderlined;
                    };
                    FontSettings.prototype.parse = function () {
                        _super.prototype.parse.call(this);
                        if (!this.shouldShowLabel && !this.shouldShowImage) {
                            this.shouldShowLabel = true;
                        }
                        this.imageIconHeight = this.getImageSize(this.imageIconHeight, this.minImageSize, this.maxImageSize);
                        this.imageIconWidth = this.getImageSize(this.imageIconWidth, this.minImageSize, this.maxImageSize);
                    };
                    FontSettings.prototype.getImageSize = function (imageSize, minImageSize, maxImageSize) {
                        return powerKPIMatrix.NumericValueUtils.isValueFinite(imageSize) && imageSize > minImageSize
                            ? Math.min(imageSize, maxImageSize)
                            : undefined;
                    };
                    return FontSettings;
                }(powerKPIMatrix.LabelSettings));
                powerKPIMatrix.FontSettings = FontSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var NumberSettingsBase = /** @class */ (function (_super) {
                    __extends(NumberSettingsBase, _super);
                    function NumberSettingsBase() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.minPrecision = 0;
                        _this.maxPrecision = 17;
                        _this.format = undefined;
                        _this.defaultFormat = undefined;
                        _this.columnFormat = undefined;
                        _this.displayUnits = 0;
                        _this.precision = undefined;
                        _this.textReplacement = undefined;
                        return _this;
                    }
                    NumberSettingsBase.prototype.parse = function () {
                        this.precision = this.getValidPrecision(this.precision);
                        _super.prototype.parse.call(this);
                    };
                    NumberSettingsBase.prototype.getValidPrecision = function (precision) {
                        if (isNaN(precision)) {
                            return precision;
                        }
                        return Math.min(Math.max(this.minPrecision, precision), this.maxPrecision);
                    };
                    NumberSettingsBase.prototype.hideNumericProperties = function () {
                        Object.defineProperties(this, {
                            displayUnits: {
                                enumerable: false
                            },
                            precision: {
                                enumerable: false
                            }
                        });
                    };
                    NumberSettingsBase.prototype.hideFormatProperty = function () {
                        Object.defineProperty(this, "format", {
                            enumerable: false
                        });
                    };
                    NumberSettingsBase.prototype.getFormat = function () {
                        return this.format || this.columnFormat || this.defaultFormat;
                    };
                    NumberSettingsBase.prototype.setColumnFormat = function (format) {
                        if (!format) {
                            return;
                        }
                        this.columnFormat = format;
                    };
                    return NumberSettingsBase;
                }(powerKPIMatrix.FontSettings));
                powerKPIMatrix.NumberSettingsBase = NumberSettingsBase;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var KPIIndicatorPosition;
                (function (KPIIndicatorPosition) {
                    KPIIndicatorPosition[KPIIndicatorPosition["left"] = 0] = "left";
                    KPIIndicatorPosition[KPIIndicatorPosition["right"] = 1] = "right";
                })(KPIIndicatorPosition = powerKPIMatrix.KPIIndicatorPosition || (powerKPIMatrix.KPIIndicatorPosition = {}));
                powerKPIMatrix.kpiIndicatorHorizontalPositionIEnumType = powerbi.createEnumType([
                    {
                        value: KPIIndicatorPosition.left,
                        displayName: "Left"
                    },
                    {
                        value: KPIIndicatorPosition.right,
                        displayName: "Right"
                    }
                ]);
                powerKPIMatrix.kpiIndicatorVerticalPositionIEnumType = powerbi.createEnumType([
                    {
                        value: KPIIndicatorPosition.left,
                        displayName: "Top"
                    },
                    {
                        value: KPIIndicatorPosition.right,
                        displayName: "Bottom"
                    }
                ]);
                var KPIIndicatorSettings = /** @class */ (function (_super) {
                    __extends(KPIIndicatorSettings, _super);
                    function KPIIndicatorSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.isShown = true;
                        _this.fontSize = "8";
                        _this.shouldWrap = false;
                        _this.horizontalPosition = KPIIndicatorPosition.left;
                        _this.verticalPosition = KPIIndicatorPosition.left;
                        _this._maxAmountOfKPIs = 5;
                        _this._default = Object.freeze({
                            kpiIndex: NaN,
                            color: null,
                            shape: null
                        });
                        _this._colors = [
                            "#01b7a8",
                            "#f2c80f",
                            "#fd625e",
                            "#a66999",
                            "#374649"
                        ];
                        _this._shapes = [
                            { name: "circle-full", displayName: "Circle" },
                            { name: "triangle", displayName: "Triangle" },
                            { name: "rhombus", displayName: "Diamond" },
                            { name: "square", displayName: "Square" },
                            { name: "flag", displayName: "Flag" },
                            { name: "exclamation", displayName: "Exclamation" },
                            { name: "checkmark", displayName: "Checkmark" },
                            { name: "arrow-up", displayName: "Arrow Up" },
                            { name: "arrow-right-up", displayName: "Arrow Right Up" },
                            { name: "arrow-right-down", displayName: "Arrow Right Down" },
                            { name: "arrow-down", displayName: "Arrow Down" },
                            { name: "caret-up", displayName: "Caret Up" },
                            { name: "caret-down", displayName: "Caret Down" },
                            { name: "circle-empty", displayName: "Circle Empty" },
                            { name: "circle-x", displayName: "Circle X" },
                            { name: "circle-exclamation", displayName: "Circle Exclamation" },
                            { name: "circle-checkmark", displayName: "Circle Checkmark" },
                            { name: "x", displayName: "X" },
                            { name: "star-empty", displayName: "Star Empty" },
                            { name: "star-full", displayName: "Star Full" }
                        ];
                        _this.kpiIndexPropertyName = "kpiIndex";
                        _this._properties = [
                            {
                                name: "color",
                                displayName: function (text) { return text; },
                                defaultValue: function (index) {
                                    var color = _this.getElementByIndex(_this._colors, index);
                                    return color || _this._colors[0];
                                },
                                type: { fill: { solid: { color: true } } }
                            },
                            {
                                name: "shape",
                                displayName: function () { return "    Indicator"; },
                                defaultValue: function (index) {
                                    var shape = _this.getElementByIndex(_this._shapes, index);
                                    return shape
                                        ? shape.name
                                        : _this._shapes[0].name;
                                },
                                type: { enumeration: _this.getEnumType() }
                            },
                            {
                                name: _this.kpiIndexPropertyName,
                                displayName: function () { return "    Value"; },
                                defaultValue: function (index) { return index + 1; },
                                type: { numeric: true },
                            },
                        ];
                        return _this;
                    }
                    Object.defineProperty(KPIIndicatorSettings.prototype, "textFontSize", {
                        get: function () {
                            return +this.fontSize; // Power BI returns numbers as string for some reason. This line converts into number
                        },
                        enumerable: true,
                        configurable: true
                    });
                    Object.defineProperty(KPIIndicatorSettings.prototype, "position", {
                        get: function () {
                            return this.shouldWrap
                                ? this.verticalPosition
                                : this.horizontalPosition;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    KPIIndicatorSettings.prototype.parse = function () {
                        if (this.shouldWrap) {
                            this.hidePropertyByName("horizontalPosition");
                        }
                        else {
                            this.hidePropertyByName("verticalPosition");
                        }
                    };
                    KPIIndicatorSettings.prototype.hidePropertyByName = function (name) {
                        Object.defineProperty(this, name, { enumerable: false });
                    };
                    KPIIndicatorSettings.prototype.getElementByIndex = function (setOfValues, index) {
                        var amountOfValues = setOfValues.length;
                        var currentIndex = index < amountOfValues
                            ? index
                            : Math.round(index / amountOfValues);
                        return setOfValues[currentIndex];
                    };
                    KPIIndicatorSettings.prototype.applySettingToContext = function () {
                        var _this = this;
                        this.forEach(function (property, index, indexedName) {
                            _this[indexedName] = typeof property.defaultValue === "function"
                                ? property.defaultValue(index)
                                : property.defaultValue;
                        });
                    };
                    KPIIndicatorSettings.prototype.forEach = function (iterator) {
                        var _this = this;
                        var _loop_4 = function (index) {
                            this_4._properties.forEach(function (property) {
                                var indexedName = _this.getPropertyName(property.name, index);
                                iterator(property, index, indexedName);
                            });
                        };
                        var this_4 = this;
                        for (var index = 0; index < this._maxAmountOfKPIs; index++) {
                            _loop_4(index);
                        }
                    };
                    KPIIndicatorSettings.prototype.getEnumType = function () {
                        var members = this._shapes.map(function (shape) {
                            return {
                                value: shape.name,
                                displayName: shape.displayName
                            };
                        });
                        return powerbi.createEnumType(members);
                    };
                    KPIIndicatorSettings.prototype.getPropertyName = function (name, index) {
                        return name + "_" + index;
                    };
                    KPIIndicatorSettings.prototype.applyProperties = function (properties, margin) {
                        var _this = this;
                        var _loop_5 = function (index) {
                            this_5._properties.forEach(function (property) {
                                var indexedName = _this.getPropertyName(property.name, index);
                                properties[indexedName] = {
                                    displayName: property.displayName(margin + "KPI " + (index + 1)),
                                    type: property.type
                                };
                            });
                        };
                        var this_5 = this;
                        for (var index = 0; index < this._maxAmountOfKPIs; index++) {
                            _loop_5(index);
                        }
                    };
                    KPIIndicatorSettings.prototype.getCurrentKPI = function (kpiIndex) {
                        var _this = this;
                        if (powerKPIMatrix.NumericValueUtils.isValueFinite(kpiIndex)) {
                            var _loop_6 = function (index) {
                                var currentKPIIndex = this_6[this_6.getPropertyName(this_6.kpiIndexPropertyName, index)];
                                if (currentKPIIndex === kpiIndex) {
                                    return { value: this_6._properties.reduce(function (current, property) {
                                            var indexedName = _this.getPropertyName(property.name, index);
                                            current[property.name] = _this[indexedName];
                                            return current;
                                        }, {}) };
                                }
                            };
                            var this_6 = this;
                            for (var index = 0; index < this._maxAmountOfKPIs; index++) {
                                var state_2 = _loop_6(index);
                                if (typeof state_2 === "object")
                                    return state_2.value;
                            }
                        }
                        return this._default;
                    };
                    KPIIndicatorSettings.createDefault = function () {
                        return new KPIIndicatorSettings();
                    };
                    return KPIIndicatorSettings;
                }(powerKPIMatrix.SettingsPropertyBase));
                powerKPIMatrix.KPIIndicatorSettings = KPIIndicatorSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var KPIValueSettings = /** @class */ (function (_super) {
                    __extends(KPIValueSettings, _super);
                    function KPIValueSettings() {
                        var _this = _super.call(this) || this;
                        _this.shouldTreatZeroValuesAsNulls = true;
                        _this.displayUnits = 1;
                        return _this;
                    }
                    return KPIValueSettings;
                }(powerKPIMatrix.NumberSettingsBase));
                powerKPIMatrix.KPIValueSettings = KPIValueSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var KPIIndicatorValueSettings = /** @class */ (function (_super) {
                    __extends(KPIIndicatorValueSettings, _super);
                    function KPIIndicatorValueSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.kpiColor = undefined;
                        return _this;
                    }
                    KPIIndicatorValueSettings.prototype.setDefault = function () {
                        _super.prototype.setDefault.call(this);
                        this.alignment = powerKPIMatrix.HorizontalTextAlignment.center;
                    };
                    KPIIndicatorValueSettings.prototype.parse = function () {
                        _super.prototype.parse.call(this);
                        if (this.shouldMatchKPIColor) {
                            this.changeVisibilityOfColor(false);
                        }
                    };
                    KPIIndicatorValueSettings.prototype.updateHyperlinkVisibility = function (visibility) {
                        if (this.shouldMatchKPIColor) {
                            return;
                        }
                    };
                    KPIIndicatorValueSettings.prototype.getColor = function (isHyperlinkSpecified) {
                        if (this.shouldMatchKPIColor) {
                            return this.kpiColor;
                        }
                        return _super.prototype.getColor.call(this, isHyperlinkSpecified);
                    };
                    return KPIIndicatorValueSettings;
                }(powerKPIMatrix.NumberSettingsBase));
                powerKPIMatrix.KPIIndicatorValueSettings = KPIIndicatorValueSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var Capabilities = /** @class */ (function () {
                    function Capabilities(factories) {
                        if (factories === void 0) { factories = []; }
                        this.factories = factories;
                    }
                    Capabilities.prototype.getCapabilities = function () {
                        var dataRoles = [];
                        var dataViewMappings = [];
                        var objects = {};
                        this.factories.forEach(function (factory) {
                            dataRoles.push.apply(dataRoles, factory.makeDataRoles());
                            dataViewMappings.push.apply(dataViewMappings, factory.makeDataViewMappings());
                            objects = __assign({}, objects, factory.makeObjects());
                        });
                        return {
                            dataRoles: dataRoles,
                            objects: objects,
                            dataViewMappings: dataViewMappings,
                            advancedEditModeSupport: 2 /* SupportedInFocus */,
                            sorting: {
                                implicit: {
                                    clauses: [{
                                            role: powerKPIMatrix.dateColumn.name,
                                            direction: 1
                                        }]
                                }
                            },
                        };
                    };
                    return Capabilities;
                }());
                powerKPIMatrix.Capabilities = Capabilities;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var CommonCapabilitiesFactory = /** @class */ (function () {
                    function CommonCapabilitiesFactory() {
                        this.marginSignOfFormattingPanel = "  "; // Alt + 255
                    }
                    CommonCapabilitiesFactory.prototype.makeDataRoles = function () {
                        return [
                            powerKPIMatrix.dateColumn,
                            powerKPIMatrix.actualValueColumn,
                            powerKPIMatrix.comparisonValueColumn,
                            powerKPIMatrix.kpiIndicatorIndexColumn,
                            powerKPIMatrix.kpiIndicatorValueColumn,
                            powerKPIMatrix.secondComparisonValueColumn,
                            powerKPIMatrix.secondKPIIndicatorValueColumn,
                            powerKPIMatrix.rowBasedMetricNameColumn,
                            powerKPIMatrix.categoryColumn,
                            powerKPIMatrix.imageColumn,
                            powerKPIMatrix.sortOrderColumn,
                            powerKPIMatrix.hyperlinkColumn,
                        ];
                    };
                    CommonCapabilitiesFactory.prototype.makeDataViewMappings = function () {
                        return [
                            {
                                conditions: [
                                    (_a = {},
                                        _a[powerKPIMatrix.dateColumn.name] = { max: 1 },
                                        _a[powerKPIMatrix.actualValueColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.comparisonValueColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.kpiIndicatorIndexColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.kpiIndicatorValueColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.secondComparisonValueColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.secondKPIIndicatorValueColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.rowBasedMetricNameColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.categoryColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.imageColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.sortOrderColumn.name] = { max: 0 },
                                        _a[powerKPIMatrix.hyperlinkColumn.name] = { max: 0 },
                                        _a),
                                    (_b = {},
                                        _b[powerKPIMatrix.dateColumn.name] = { min: 1, max: 1 },
                                        _b[powerKPIMatrix.actualValueColumn.name] = { min: 0 },
                                        _b[powerKPIMatrix.comparisonValueColumn.name] = { min: 0 },
                                        _b[powerKPIMatrix.kpiIndicatorIndexColumn.name] = { min: 0 },
                                        _b[powerKPIMatrix.kpiIndicatorValueColumn.name] = { min: 0 },
                                        _b[powerKPIMatrix.secondComparisonValueColumn.name] = { min: 0 },
                                        _b[powerKPIMatrix.secondKPIIndicatorValueColumn.name] = { min: 0 },
                                        _b[powerKPIMatrix.rowBasedMetricNameColumn.name] = { max: 0 },
                                        _b[powerKPIMatrix.categoryColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _b[powerKPIMatrix.imageColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _b[powerKPIMatrix.sortOrderColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _b[powerKPIMatrix.hyperlinkColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _b),
                                    (_c = {},
                                        _c[powerKPIMatrix.dateColumn.name] = { min: 1, max: 1 },
                                        _c[powerKPIMatrix.actualValueColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.comparisonValueColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.kpiIndicatorIndexColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.kpiIndicatorValueColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.secondComparisonValueColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.secondKPIIndicatorValueColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.rowBasedMetricNameColumn.name] = { max: 1 },
                                        _c[powerKPIMatrix.categoryColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _c[powerKPIMatrix.imageColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _c[powerKPIMatrix.sortOrderColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _c[powerKPIMatrix.hyperlinkColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _c),
                                    (_d = {},
                                        _d[powerKPIMatrix.dateColumn.name] = { min: 1, max: 1 },
                                        _d[powerKPIMatrix.actualValueColumn.name] = { max: 1 },
                                        _d[powerKPIMatrix.comparisonValueColumn.name] = { max: 1 },
                                        _d[powerKPIMatrix.kpiIndicatorIndexColumn.name] = { max: 1 },
                                        _d[powerKPIMatrix.kpiIndicatorValueColumn.name] = { max: 1 },
                                        _d[powerKPIMatrix.secondComparisonValueColumn.name] = { max: 1 },
                                        _d[powerKPIMatrix.secondKPIIndicatorValueColumn.name] = { max: 1 },
                                        _d[powerKPIMatrix.rowBasedMetricNameColumn.name] = { min: 1, max: 1 },
                                        _d[powerKPIMatrix.categoryColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _d[powerKPIMatrix.imageColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _d[powerKPIMatrix.sortOrderColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _d[powerKPIMatrix.hyperlinkColumn.name] = { min: 0, max: powerKPIMatrix.SettingsBase.maxAmountOfCategories },
                                        _d),
                                ],
                                table: {
                                    rows: {
                                        select: [
                                            {
                                                for: {
                                                    in: powerKPIMatrix.dateColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.actualValueColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.comparisonValueColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.kpiIndicatorIndexColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.kpiIndicatorValueColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.secondComparisonValueColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.secondKPIIndicatorValueColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.rowBasedMetricNameColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.categoryColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.imageColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.sortOrderColumn.name
                                                }
                                            },
                                            {
                                                for: {
                                                    in: powerKPIMatrix.hyperlinkColumn.name
                                                }
                                            },
                                        ],
                                        dataReductionAlgorithm: {
                                            window: { count: 30000 }
                                        }
                                    }
                                },
                            }
                        ];
                        var _a, _b, _c, _d;
                    };
                    CommonCapabilitiesFactory.prototype.makeObjects = function () {
                        var descriptors = {
                            internalState: {
                                displayName: "Internal State",
                                properties: {
                                    value: {
                                        displayName: "Column Mapping Value",
                                        type: { text: true }
                                    },
                                }
                            },
                            title: {
                                displayName: "Title",
                                properties: {}
                            },
                            header: this.getFontSettings("Header", "Header Options", true, false, false, true)
                        };
                        this.applyCategories(descriptors);
                        descriptors["subtotal"] = this.getSubtotalSettings();
                        descriptors["asOfDate"] = this.getNumericWithFontSettings("As of Date", "As of Date options", true, true, true, false, false, 1);
                        descriptors["metricName"] = this.getFontSettings("Metric Name", "Metric Name options", false, true, true, true, true, true, 1);
                        descriptors["currentValue"] = this.getValueSettings("Current Value", "Current Value options", true, true, true, false, true, 1);
                        descriptors["kpiIndicator"] = this.getKPIIndicatorSettings(1);
                        descriptors["kpiIndicatorValue"] = this.getKPIIndicatorValueSettings("KPI Indicator Value", true, true, 1);
                        descriptors["comparisonValue"] = this.getNumericWithFontSettings("Comparison Value", "Comparison Value options", true, true, true, false, true, 1);
                        descriptors["secondComparisonValue"] = this.getNumericWithFontSettings("Second Comparison Value", "Second Comparison Value options", true, true, true, false, true, 1);
                        descriptors["secondKPIIndicatorValue"] = this.getKPIIndicatorValueSettings("Second KPI Indicator Value", false, false, 1);
                        descriptors["sparklineSettings"] = {
                            displayName: "Sparklines",
                            description: "Customize sparklines for each metric",
                            properties: {
                                show: this.getShow(),
                                order: this.getOrder(undefined, 1),
                                label: this.getText("Label", 1),
                                backgroundColor: this.getBackground(undefined, 1),
                                isActualVisible: this.getBool("Show Current", undefined, 1),
                                shouldActualUseKPIColors: this.getBool("Current Uses KPI Colors", undefined, 2),
                                actualColor: this.getColor("Current Color", 2),
                                actualThickness: this.getNumeric("Current Thickness", undefined, undefined, 2),
                                actualLineStyle: this.getDescriptor("Current Line Style", { enumeration: powerKPIMatrix.lineStyleEnumType }, undefined, 2),
                                isTargetVisible: this.getBool("Show Comparison", undefined, 1),
                                targetColor: this.getColor("Comparison Color", 2),
                                targetThickness: this.getNumeric("Comparison Thickness", undefined, undefined, 2),
                                targetLineStyle: this.getDescriptor("Comparison Line Style", { enumeration: powerKPIMatrix.lineStyleEnumType }, undefined, 2),
                                isSecondComparisonValueVisible: this.getBool("Show Second Comparison", undefined, 1),
                                secondComparisonValueColor: this.getColor("Second Comparison Color", 2),
                                secondComparisonValueThickness: this.getNumeric("Second Comparison Thickness", undefined, undefined, 2),
                                secondComparisonValueLineStyle: this.getDescriptor("Second Comparison Line Style", { enumeration: powerKPIMatrix.lineStyleEnumType }, undefined, 2),
                                shouldUseCommonScale: this.getBool("Use Common Scale", "Common automatic scaling across all KPIs", 1),
                                yMin: this.getNumeric("Y-axis Min", "Auto", undefined, 1),
                                yMax: this.getNumeric("Y-axis Max", "Auto", undefined, 1),
                                verticalReferenceLineColor: this.getColor("Vertical Reference Line Color", 1),
                                verticalReferenceLineThickness: this.getNumeric("Vertical Reference Line Thickness", undefined, undefined, 1),
                            }
                        };
                        descriptors["verticalGrid"] = this.getGridSettings("Vertical Grid");
                        descriptors["horizontalGrid"] = this.getGridSettings("Horizontal Grid");
                        descriptors["metricSpecific"] = this.getMetricSpecificSettings();
                        descriptors["table"] = this.getTableSettings();
                        descriptors["popOutGeneralSettings"] = {
                            displayName: "Pop-out Chart General",
                            properties: {
                                show: this.getShow(),
                                backgroundColor: this.getColor("Background Color"),
                                viewportSize: this.getNumeric("Size %", undefined, "Size is a percentage of size of mail viewport"),
                            }
                        };
                        return descriptors;
                    };
                    CommonCapabilitiesFactory.prototype.applyCategories = function (descriptors) {
                        for (var categoryIndex = 0; categoryIndex < powerKPIMatrix.SettingsBase.maxAmountOfCategories; categoryIndex++) {
                            var category = powerKPIMatrix.SettingsBase.getCategoryByIndex(categoryIndex);
                            descriptors[category.name] = this.getFontSettings(category.displayName, undefined, false, false, true, true, true, true, 0);
                        }
                    };
                    CommonCapabilitiesFactory.prototype.getBool = function (displayName, description, level) {
                        return this.getDescriptor(displayName, { bool: true }, description, level);
                    };
                    CommonCapabilitiesFactory.prototype.getColor = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Color"; }
                        return this.getDescriptor(displayName, { fill: { solid: { color: true } } }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getOrder = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Column Order"; }
                        return this.getNumeric(displayName, undefined, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getNumeric = function (displayName, placeHolderText, description, level) {
                        if (displayName === void 0) { displayName = "Number"; }
                        var descriptor = this.getDescriptor(displayName, { numeric: true }, description, level);
                        descriptor.placeHolderText = placeHolderText;
                        descriptor.suppressFormatPainterCopy = true;
                        return descriptor;
                    };
                    CommonCapabilitiesFactory.prototype.getDisplayUnits = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Display Units"; }
                        var descriptor = this.getDescriptor(displayName, { formatting: { labelDisplayUnits: true } }, "Select the units (millions, billions, etc.)", level);
                        descriptor.suppressFormatPainterCopy = true;
                        return descriptor;
                    };
                    CommonCapabilitiesFactory.prototype.getPrecision = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Decimal Places"; }
                        return this.getNumeric(displayName, "Auto", "Select the number of decimal places to display", level);
                    };
                    CommonCapabilitiesFactory.prototype.getNumericSettings = function (displayName, description, isTextReplacementCompatible, level) {
                        var properties = {
                            format: this.getText("Format", level),
                            displayUnits: this.getDisplayUnits(undefined, level),
                            precision: this.getPrecision(undefined, level),
                        };
                        if (isTextReplacementCompatible) {
                            properties["textReplacement"] = this.getText("Text Replacement", level);
                        }
                        return {
                            displayName: displayName,
                            description: description,
                            properties: properties,
                        };
                    };
                    CommonCapabilitiesFactory.prototype.getFontSize = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Text Size"; }
                        return this.getDescriptor(displayName, { formatting: { fontSize: true } }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getFontFamily = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Font Family"; }
                        return this.getDescriptor(displayName, { formatting: { fontFamily: true } }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getDescriptor = function (displayName, type, description, level) {
                        if (level === void 0) { level = 0; }
                        var margin = this.getMarginByLevel(level);
                        return {
                            type: type,
                            displayName: "" + margin + displayName,
                        };
                    };
                    CommonCapabilitiesFactory.prototype.getMarginByLevel = function (level) {
                        var margin = "";
                        for (var i = 0; i < level || 0; i++) {
                            margin += this.marginSignOfFormattingPanel;
                        }
                        return margin;
                    };
                    CommonCapabilitiesFactory.prototype.getKPIIndicatorValueSettings = function (displayName, isShownPresented, isMatchKPIColorPresented, level) {
                        var baseProperties = {};
                        if (isShownPresented) {
                            baseProperties.isShown = this.getShow(undefined, level);
                        }
                        var descriptor = this.getNumericWithFontSettings(displayName, undefined, true, true, true, false, true, level, baseProperties);
                        if (isMatchKPIColorPresented) {
                            descriptor.properties["shouldMatchKPIColor"] = this.getBool("Match KPI Indicator Color", undefined, level);
                        }
                        return descriptor;
                    };
                    CommonCapabilitiesFactory.prototype.getShow = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Show"; }
                        return this.getBool(displayName, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getBold = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Bold"; }
                        return this.getBool(displayName, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getUnderline = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Underline"; }
                        return this.getBool(displayName, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getItalic = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Italic"; }
                        return this.getBool(displayName, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getText = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Label"; }
                        return this.getDescriptor(displayName, { text: true }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getGridSettings = function (displayName) {
                        return {
                            displayName: displayName,
                            properties: {
                                show: this.getShow(),
                                color: this.getColor("Color"),
                                outlineWeight: this.getNumeric("Thickness"),
                            }
                        };
                    };
                    CommonCapabilitiesFactory.prototype.getHorizontalAlignment = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Horizontal Alignment"; }
                        return this.getDescriptor(displayName, { formatting: { alignment: true } }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getVerticalAlignment = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Vertical Alignment"; }
                        return this.getDescriptor(displayName, { enumeration: powerKPIMatrix.verticalTextAlignmentIEnumType }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getWrapText = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Wrap Text"; }
                        return this.getDescriptor(displayName, { enumeration: powerKPIMatrix.wrapTextIEnumType }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getBackground = function (displayName, level) {
                        if (displayName === void 0) { displayName = "Background Color"; }
                        return this.getDescriptor(displayName, { fill: { solid: { color: { nullable: true } } } }, undefined, level);
                    };
                    CommonCapabilitiesFactory.prototype.getFontSettings = function (displayName, description, isShowPresented, isOrderShown, isLabelShown, isWrapTextShown, isHyperlinkCompatible, isImageCompatible, level, baseProperties) {
                        if (isShowPresented === void 0) { isShowPresented = false; }
                        if (isOrderShown === void 0) { isOrderShown = false; }
                        if (isLabelShown === void 0) { isLabelShown = false; }
                        if (isWrapTextShown === void 0) { isWrapTextShown = false; }
                        if (isHyperlinkCompatible === void 0) { isHyperlinkCompatible = false; }
                        if (isImageCompatible === void 0) { isImageCompatible = false; }
                        if (baseProperties === void 0) { baseProperties = {}; }
                        var properties = this.getLabelProperties(isShowPresented, isOrderShown, isLabelShown, level, baseProperties);
                        properties["fontSize"] = this.getFontSize(undefined, level);
                        if (isWrapTextShown) {
                            properties["wrapText"] = this.getWrapText(undefined, level);
                        }
                        properties["isBold"] = this.getBold(undefined, level);
                        properties["isItalic"] = this.getItalic(undefined, level);
                        properties["isUnderlined"] = this.getUnderline(undefined, level);
                        if (isHyperlinkCompatible) {
                            properties["isHyperlinkUnderlined"] = this.getUnderline("Hyperlink Underline", level);
                        }
                        properties["fontFamily"] = this.getFontFamily(undefined, level);
                        properties["alignment"] = this.getHorizontalAlignment(undefined, level);
                        properties["verticalAlignment"] = this.getVerticalAlignment(undefined, level);
                        properties["color"] = this.getColor(undefined, level);
                        if (isHyperlinkCompatible) {
                            properties["hyperlinkColor"] = this.getColor("Hyperlink Color", level);
                        }
                        if (isImageCompatible) {
                            properties["shouldShowLabel"] = this.getBool("Show Label", undefined, level);
                            properties["shouldShowImage"] = this.getBool("Show Image", undefined, level);
                            properties["imageIconWidth"] = this.getNumeric("Image Width", "Auto Based On Text Size", undefined, level);
                            properties["imageIconHeight"] = this.getNumeric("Image Height", "Auto Based On Text Size", undefined, level);
                        }
                        properties["backgroundColor"] = this.getBackground(undefined, level);
                        return {
                            displayName: displayName,
                            description: description,
                            properties: properties,
                        };
                    };
                    CommonCapabilitiesFactory.prototype.getLabelProperties = function (isShowPresented, isOrderShown, isLabelShown, level, properties) {
                        if (isShowPresented === void 0) { isShowPresented = true; }
                        if (isOrderShown === void 0) { isOrderShown = true; }
                        if (isLabelShown === void 0) { isLabelShown = true; }
                        if (properties === void 0) { properties = {}; }
                        if (isShowPresented) {
                            properties["show"] = this.getShow(undefined, level);
                        }
                        if (isOrderShown) {
                            properties["order"] = this.getOrder(undefined, level);
                        }
                        if (isLabelShown) {
                            properties["label"] = this.getText(undefined, level);
                        }
                        return properties;
                    };
                    CommonCapabilitiesFactory.prototype.getNumericWithFontSettings = function (displayName, description, isShowPresented, isOrderShown, isLabelShown, isHyperlinkCompatible, isTextReplacementCompatible, level, baseProperties) {
                        if (isShowPresented === void 0) { isShowPresented = true; }
                        if (isOrderShown === void 0) { isOrderShown = true; }
                        if (isLabelShown === void 0) { isLabelShown = true; }
                        if (isHyperlinkCompatible === void 0) { isHyperlinkCompatible = false; }
                        if (isTextReplacementCompatible === void 0) { isTextReplacementCompatible = false; }
                        if (baseProperties === void 0) { baseProperties = {}; }
                        var fontSettings = this.getFontSettings(displayName, description, isShowPresented, isOrderShown, isLabelShown, false, isHyperlinkCompatible, false, level, baseProperties);
                        var numericSettings = this.getNumericSettings(displayName, description, isTextReplacementCompatible, level);
                        numericSettings.properties = __assign({}, numericSettings.properties, fontSettings.properties);
                        return numericSettings;
                    };
                    CommonCapabilitiesFactory.prototype.getValueSettings = function (displayName, description, isShowPresented, isOrderShown, isLabelShown, isHyperlinkCompatible, isTextReplacementCompatible, level, baseProperties) {
                        if (isShowPresented === void 0) { isShowPresented = true; }
                        if (isOrderShown === void 0) { isOrderShown = true; }
                        if (isLabelShown === void 0) { isLabelShown = true; }
                        if (isHyperlinkCompatible === void 0) { isHyperlinkCompatible = false; }
                        if (isTextReplacementCompatible === void 0) { isTextReplacementCompatible = false; }
                        if (baseProperties === void 0) { baseProperties = {}; }
                        var settings = this.getNumericWithFontSettings(displayName, description, isShowPresented, isOrderShown, isLabelShown, isHyperlinkCompatible, isTextReplacementCompatible, level, baseProperties);
                        settings.properties.shouldTreatZeroValuesAsNulls = this.getBool("Treat zero values as nulls", undefined, level);
                        return settings;
                    };
                    CommonCapabilitiesFactory.prototype.getKPIIndicatorSettings = function (level) {
                        var properties = {
                            isShown: this.getShow(undefined, level),
                            fontSize: this.getFontSize("Size", level),
                            shouldWrap: this.getBool("Wrap", undefined, level),
                            horizontalPosition: this.getDescriptor("Position", { enumeration: powerKPIMatrix.kpiIndicatorHorizontalPositionIEnumType }, undefined, level),
                            verticalPosition: this.getDescriptor("Position", { enumeration: powerKPIMatrix.kpiIndicatorVerticalPositionIEnumType }, undefined, level),
                        };
                        powerKPIMatrix.KPIIndicatorSettings
                            .createDefault()
                            .applyProperties(properties, this.getMarginByLevel(level));
                        return {
                            properties: properties,
                            displayName: "KPI Indicator",
                            description: "KPI Indicator options",
                        };
                    };
                    CommonCapabilitiesFactory.prototype.getTableSettings = function () {
                        var descriptor = {
                            displayName: "Table",
                            description: "Table Options",
                            properties: {
                                type: this.getDescriptor("Type", { enumeration: powerKPIMatrix.tableTypeIEnumType }),
                                style: this.getDescriptor("Style", { enumeration: powerKPIMatrix.tableStyleIEnumType }),
                                sortOrder: this.getDescriptor("Category Auto-Sort", { enumeration: powerKPIMatrix.sortOrderIEnumType }),
                                defaultSortOrderBy: this.getDescriptor("Default Sort Order By", { enumeration: powerKPIMatrix.defaultSortOrderByIEnumType }),
                                shouldHideUnmappedMetrics: this.getBool("Hide unmapped metrics"),
                                defaultUnmappedCategoryName: this.getText("Default Unmapped Category Name"),
                            }
                        };
                        return descriptor;
                    };
                    CommonCapabilitiesFactory.prototype.getSubtotalSettings = function () {
                        return {
                            displayName: "Category Subtotal",
                            properties: {
                                show: this.getShow(undefined, 0),
                                type: this.getDescriptor("Type", { enumeration: powerKPIMatrix.SubtotalTypeIEnumType }, undefined, 0),
                            }
                        };
                    };
                    CommonCapabilitiesFactory.prototype.getMetricSpecificSettings = function () {
                        return {
                            displayName: "Metric Specific Options",
                            properties: {
                                backgroundColor: this.getBackground(undefined, 1),
                            }
                        };
                    };
                    return CommonCapabilitiesFactory;
                }());
                powerKPIMatrix.CommonCapabilitiesFactory = CommonCapabilitiesFactory;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var PowerKPICapabilitiesFactory = /** @class */ (function () {
                    function PowerKPICapabilitiesFactory() {
                        this.displayNamePrefix = "Pop-out Chart ";
                        this.hiddenProperties = [
                            "title",
                            "line",
                            "secondaryYAxis",
                            "secondaryReferenceLineOfYAxis",
                        ];
                        this.hiddenOptions = {
                            subtitle: {
                                titleText: true
                            },
                            dateValueKPI: {
                                displayUnits: true,
                                precision: true,
                            },
                            actualValueKPI: {
                                displayUnits: true,
                                precision: true,
                            },
                            kpiIndicator: {
                                color_0: true,
                                color_1: true,
                                color_2: true,
                                color_3: true,
                                color_4: true,
                                kpiIndex_0: true,
                                kpiIndex_1: true,
                                kpiIndex_2: true,
                                kpiIndex_3: true,
                                kpiIndex_4: true,
                                shape_0: true,
                                shape_1: true,
                                shape_2: true,
                                shape_3: true,
                                shape_4: true,
                            },
                            kpiIndicatorValue: {
                                displayUnits: true,
                                precision: true,
                            },
                            secondKPIIndicatorValue: {
                                displayUnits: true,
                                precision: true,
                            }
                        };
                    }
                    PowerKPICapabilitiesFactory.prototype.makeDataRoles = function () {
                        return [];
                    };
                    PowerKPICapabilitiesFactory.prototype.makeDataViewMappings = function () {
                        return [];
                    };
                    PowerKPICapabilitiesFactory.prototype.makeObjects = function () {
                        return this.mapObjects(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPI.capabilities && powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPI.capabilities.objects);
                    };
                    PowerKPICapabilitiesFactory.prototype.mapObjects = function (baseObjects) {
                        var _this = this;
                        var objects = {};
                        if (baseObjects) {
                            Object.keys(baseObjects).forEach(function (propertyName) {
                                if (_this.hiddenProperties.indexOf(propertyName) === -1) {
                                    var descriptor_1 = baseObjects[propertyName];
                                    var properties_1 = {};
                                    if (_this.hiddenOptions[propertyName]) {
                                        Object.keys(descriptor_1.properties).forEach(function (optionName) {
                                            if (!_this.hiddenOptions[propertyName][optionName]) {
                                                properties_1[optionName] = descriptor_1.properties[optionName];
                                            }
                                        });
                                    }
                                    else {
                                        properties_1 = __assign({}, descriptor_1.properties);
                                    }
                                    var propertyNameWitPrefix = PowerKPIPrefixier.getObjectNameWithPrefix(propertyName);
                                    objects[propertyNameWitPrefix] = {
                                        properties: properties_1,
                                        displayName: "" + _this.displayNamePrefix + descriptor_1.displayName,
                                    };
                                }
                            });
                        }
                        return objects;
                    };
                    return PowerKPICapabilitiesFactory;
                }());
                powerKPIMatrix.PowerKPICapabilitiesFactory = PowerKPICapabilitiesFactory;
                var PowerKPIPrefixier = /** @class */ (function () {
                    function PowerKPIPrefixier() {
                    }
                    PowerKPIPrefixier.getObjectNameWithPrefix = function (objectName) {
                        return "" + this.Prefix + objectName;
                    };
                    PowerKPIPrefixier.getObjectNameWithoutPrefix = function (objectName) {
                        return objectName.replace(this.Prefix, "");
                    };
                    PowerKPIPrefixier.Prefix = "integratedPowerKPI_";
                    return PowerKPIPrefixier;
                }());
                powerKPIMatrix.PowerKPIPrefixier = PowerKPIPrefixier;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var LineStyle;
                (function (LineStyle) {
                    LineStyle["solidLine"] = "solidLine";
                    LineStyle["dottedLine"] = "dottedLine";
                    LineStyle["dashedLine"] = "dashedLine";
                    LineStyle["dotDashedLine"] = "dotDashedLine";
                })(LineStyle = powerKPIMatrix.LineStyle || (powerKPIMatrix.LineStyle = {}));
                powerKPIMatrix.lineStyleEnumType = powerbi.createEnumType([
                    {
                        value: LineStyle.solidLine,
                        displayName: "Solid"
                    },
                    {
                        value: LineStyle.dottedLine,
                        displayName: "Dotted"
                    },
                    {
                        value: LineStyle.dashedLine,
                        displayName: "Dashed"
                    },
                    {
                        value: LineStyle.dotDashedLine,
                        displayName: "Dot-dashed"
                    },
                ]);
                var SparklineSettings = /** @class */ (function (_super) {
                    __extends(SparklineSettings, _super);
                    function SparklineSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.radiusFactor = 1.4;
                        _this.minThickness = 0.25;
                        _this.maxThickness = 10;
                        _this.isActualVisible = true;
                        _this.actualColor = "#3599b8";
                        _this.shouldActualUseKPIColors = false;
                        _this.actualThickness = 2;
                        _this.actualLineStyle = LineStyle.solidLine;
                        _this.isTargetVisible = false;
                        _this.targetColor = "#000000";
                        _this.targetThickness = 1;
                        _this.targetLineStyle = LineStyle.solidLine;
                        _this.isSecondComparisonValueVisible = false;
                        _this.secondComparisonValueColor = "#7d4f73";
                        _this.secondComparisonValueThickness = 1;
                        _this.secondComparisonValueLineStyle = LineStyle.solidLine;
                        _this.shouldUseCommonScale = false;
                        _this.yMin = undefined;
                        _this.yMax = undefined;
                        _this.verticalReferenceLineColor = "#666";
                        _this.verticalReferenceLineThickness = 1;
                        return _this;
                    }
                    SparklineSettings.prototype.parse = function () {
                        this.actualThickness = this.parseThickness(this.actualThickness);
                        this.targetThickness = this.parseThickness(this.targetThickness);
                        this.secondComparisonValueThickness = this.parseThickness(this.secondComparisonValueThickness);
                        this.verticalReferenceLineThickness = this.parseThickness(this.verticalReferenceLineThickness);
                        _super.prototype.parse.call(this);
                    };
                    SparklineSettings.prototype.parseThickness = function (thickness) {
                        return Math.min(Math.max(this.minThickness, thickness), this.maxThickness);
                    };
                    SparklineSettings.prototype.getMaxThickness = function () {
                        return Math.max(this.isActualVisible ? this.actualThickness : this.minThickness, this.isTargetVisible ? this.targetThickness : this.minThickness, this.isSecondComparisonValueVisible ? this.secondComparisonValueThickness : this.minThickness);
                    };
                    SparklineSettings.prototype.getOffset = function () {
                        return this.getMaxThickness() * this.radiusFactor;
                    };
                    return SparklineSettings;
                }(powerKPIMatrix.LabelSettings));
                powerKPIMatrix.SparklineSettings = SparklineSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var HeaderSettings = /** @class */ (function (_super) {
                    __extends(HeaderSettings, _super);
                    function HeaderSettings() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    HeaderSettings.prototype.setDefault = function () {
                        _super.prototype.setDefault.call(this);
                        this.alignment = powerKPIMatrix.HorizontalTextAlignment.right;
                    };
                    return HeaderSettings;
                }(powerKPIMatrix.FontSettings));
                powerKPIMatrix.HeaderSettings = HeaderSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var GridSettings = /** @class */ (function (_super) {
                    __extends(GridSettings, _super);
                    function GridSettings() {
                        var _this = _super.call(this) || this;
                        _this.setDefault();
                        return _this;
                    }
                    Object.defineProperty(GridSettings.prototype, "thickness", {
                        get: function () {
                            return this.outlineWeight;
                        },
                        set: function (value) {
                            this.outlineWeight = value;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    GridSettings.prototype.setDefault = function () {
                        this.show = false;
                        this.color = "#E7E7E7";
                        this.outlineWeight = 2;
                    };
                    return GridSettings;
                }(powerKPIMatrix.ShowSettings));
                powerKPIMatrix.GridSettings = GridSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var AsOfDateSettings = /** @class */ (function (_super) {
                    __extends(AsOfDateSettings, _super);
                    function AsOfDateSettings() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    AsOfDateSettings.prototype.parseByType = function (type) {
                        if (type !== powerKPIMatrix.DataRepresentationTypeEnum.NumberType) {
                            this.hideNumericProperties();
                        }
                        if (type === powerKPIMatrix.DataRepresentationTypeEnum.None
                            || type === powerKPIMatrix.DataRepresentationTypeEnum.StringType) {
                            this.hideFormatProperty();
                        }
                    };
                    return AsOfDateSettings;
                }(powerKPIMatrix.NumberSettingsBase));
                powerKPIMatrix.AsOfDateSettings = AsOfDateSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                /**
                 * We use this class to move the Title option up above others at the formatting panel
                 */
                var FakeTitleSettings = /** @class */ (function () {
                    function FakeTitleSettings() {
                        this.untrackedProperty = false;
                    }
                    return FakeTitleSettings;
                }());
                powerKPIMatrix.FakeTitleSettings = FakeTitleSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var MetricSpecificSettings = /** @class */ (function (_super) {
                    __extends(MetricSpecificSettings, _super);
                    function MetricSpecificSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.backgroundColor = undefined;
                        _this.alternativeBackgroundColor = "rgb(239, 239, 239)";
                        return _this;
                    }
                    return MetricSpecificSettings;
                }(powerKPIMatrix.SettingsPropertyBase));
                powerKPIMatrix.MetricSpecificSettings = MetricSpecificSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var TableType;
                (function (TableType) {
                    TableType[TableType["RowBasedKPIS"] = 0] = "RowBasedKPIS";
                    TableType[TableType["ColumnBasedKPIS"] = 1] = "ColumnBasedKPIS";
                })(TableType = powerKPIMatrix.TableType || (powerKPIMatrix.TableType = {}));
                powerKPIMatrix.tableTypeIEnumType = powerbi.createEnumType([
                    {
                        value: TableType.RowBasedKPIS,
                        displayName: "Row-based KPIs"
                    },
                    {
                        value: TableType.ColumnBasedKPIS,
                        displayName: "Column-based KPIs"
                    },
                ]);
                var TableStyle;
                (function (TableStyle) {
                    TableStyle[TableStyle["Default"] = 0] = "Default";
                    TableStyle[TableStyle["BoldHeader"] = 1] = "BoldHeader";
                    TableStyle[TableStyle["BoldHeaderAndCurrentValue"] = 2] = "BoldHeaderAndCurrentValue";
                    TableStyle[TableStyle["AlternatingMetrics"] = 3] = "AlternatingMetrics";
                    TableStyle[TableStyle["BoldHeaderAndAlternatingMetrics"] = 4] = "BoldHeaderAndAlternatingMetrics";
                })(TableStyle = powerKPIMatrix.TableStyle || (powerKPIMatrix.TableStyle = {}));
                powerKPIMatrix.tableStyleIEnumType = powerbi.createEnumType([
                    {
                        value: TableStyle.Default,
                        displayName: "Default"
                    },
                    {
                        value: TableStyle.BoldHeader,
                        displayName: "Bold Header"
                    },
                    {
                        value: TableStyle.BoldHeaderAndCurrentValue,
                        displayName: "Bold Header & Current Value"
                    },
                    {
                        value: TableStyle.AlternatingMetrics,
                        displayName: "Alternating Metrics"
                    },
                    {
                        value: TableStyle.BoldHeaderAndAlternatingMetrics,
                        displayName: "Bold Header And Alternating Metrics"
                    },
                ]);
                var SortOrder;
                (function (SortOrder) {
                    SortOrder[SortOrder["Ascending"] = 0] = "Ascending";
                    SortOrder[SortOrder["Descending"] = 1] = "Descending";
                })(SortOrder = powerKPIMatrix.SortOrder || (powerKPIMatrix.SortOrder = {}));
                powerKPIMatrix.sortOrderIEnumType = powerbi.createEnumType([
                    {
                        value: SortOrder.Ascending,
                        displayName: "Ascending"
                    },
                    {
                        value: SortOrder.Descending,
                        displayName: "Descending"
                    },
                ]);
                var DefaultSortOrderBy;
                (function (DefaultSortOrderBy) {
                    DefaultSortOrderBy[DefaultSortOrderBy["Name"] = 0] = "Name";
                    DefaultSortOrderBy[DefaultSortOrderBy["ColumnOrder"] = 1] = "ColumnOrder";
                })(DefaultSortOrderBy = powerKPIMatrix.DefaultSortOrderBy || (powerKPIMatrix.DefaultSortOrderBy = {}));
                powerKPIMatrix.defaultSortOrderByIEnumType = powerbi.createEnumType([
                    {
                        value: DefaultSortOrderBy.Name,
                        displayName: "Name"
                    },
                    {
                        value: DefaultSortOrderBy.ColumnOrder,
                        displayName: "Initial Column Order"
                    },
                ]);
                var TableSettings = /** @class */ (function (_super) {
                    __extends(TableSettings, _super);
                    function TableSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.type = TableType.RowBasedKPIS;
                        _this.style = TableStyle.BoldHeader;
                        _this.sortOrder = SortOrder.Ascending;
                        _this.defaultSortOrderBy = DefaultSortOrderBy.ColumnOrder;
                        _this.shouldHideUnmappedMetrics = true;
                        _this.defaultUnmappedCategoryName = "Other";
                        return _this;
                    }
                    TableSettings.prototype.getDefaultUnmappedCategoryName = function () {
                        return this.shouldHideUnmappedMetrics
                            ? undefined
                            : this.defaultUnmappedCategoryName;
                    };
                    TableSettings.prototype.parse = function () {
                        if (this.shouldHideUnmappedMetrics) {
                            this.hideProperty("defaultUnmappedCategoryName");
                        }
                    };
                    TableSettings.prototype.isDefaultSortOrderByName = function () {
                        return this.defaultSortOrderBy === DefaultSortOrderBy.Name;
                    };
                    TableSettings.prototype.forceToUseDefaultSortOrderByName = function () {
                        this.defaultSortOrderBy = DefaultSortOrderBy.Name;
                        this.hideProperty("defaultSortOrderBy");
                    };
                    TableSettings.prototype.hideProperty = function (name) {
                        Object.defineProperty(this, name, {
                            enumerable: false,
                        });
                    };
                    return TableSettings;
                }(powerKPIMatrix.SettingsPropertyBase));
                powerKPIMatrix.TableSettings = TableSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var SubtotalType;
                (function (SubtotalType) {
                    SubtotalType[SubtotalType["SumOfItems"] = 0] = "SumOfItems";
                    SubtotalType[SubtotalType["CountOfItems"] = 1] = "CountOfItems";
                })(SubtotalType = powerKPIMatrix.SubtotalType || (powerKPIMatrix.SubtotalType = {}));
                powerKPIMatrix.SubtotalTypeIEnumType = powerbi.createEnumType([
                    {
                        value: SubtotalType.SumOfItems,
                        displayName: "Sum of Items"
                    },
                    {
                        value: SubtotalType.CountOfItems,
                        displayName: "Count of Items"
                    },
                ]);
                var SubtotalSettings = /** @class */ (function (_super) {
                    __extends(SubtotalSettings, _super);
                    function SubtotalSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.show = true;
                        _this.type = SubtotalType.SumOfItems;
                        return _this;
                    }
                    SubtotalSettings.prototype.parse = function (amountOfCategories) {
                        this.isEnumerable = amountOfCategories > 0;
                    };
                    return SubtotalSettings;
                }(powerKPIMatrix.SettingsPropertyBase));
                powerKPIMatrix.SubtotalSettings = SubtotalSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var PopOutGeneralSettings = /** @class */ (function () {
                    function PopOutGeneralSettings() {
                        this.minViewportSize = 10;
                        this.maxViewportSize = 90;
                        this.show = true;
                        this.backgroundColor = "#ffffff";
                        this.viewportSize = 80;
                    }
                    PopOutGeneralSettings.prototype.parse = function () {
                        this.viewportSize = Math.max(this.minViewportSize, Math.min(this.viewportSize, this.maxViewportSize));
                    };
                    PopOutGeneralSettings.prototype.getViewportSizeInPercent = function () {
                        return this.viewportSize / 100;
                    };
                    return PopOutGeneralSettings;
                }());
                powerKPIMatrix.PopOutGeneralSettings = PopOutGeneralSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi.extensibility.utils.dataview
                var DataViewObjects = powerbi.extensibility.utils.dataview.DataViewObjects;
                var DataViewObjectsParser = powerbi.extensibility.utils.dataview.DataViewObjectsParser;
                var SettingsBase = /** @class */ (function (_super) {
                    __extends(SettingsBase, _super);
                    function SettingsBase() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    Object.defineProperty(SettingsBase, "maxAmountOfCategories", {
                        get: function () {
                            return 5;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    SettingsBase.getCategoryByIndex = function (categoryIndex) {
                        return {
                            name: "" + SettingsBase.CategoryNamePrefix + categoryIndex,
                            displayName: SettingsBase.CategoryDisplayNamePrefix + " [" + (categoryIndex + 1) + "]",
                        };
                    };
                    SettingsBase.prototype.parse = function (dataView) {
                        return this.parseObjects(dataView
                            && dataView.metadata
                            && dataView.metadata.objects);
                    };
                    /**
                     * It'd be better to move this method into DataViewUtils later
                     */
                    SettingsBase.prototype.parseObjects = function (objects) {
                        if (objects) {
                            var properties = this.getProperties();
                            for (var objectName in properties) {
                                for (var propertyName in properties[objectName]) {
                                    var defaultValue = this[objectName][propertyName];
                                    this[objectName][propertyName] = DataViewObjects.getCommonValue(objects, properties[objectName][propertyName], defaultValue);
                                }
                                if (this[objectName].parse) {
                                    this[objectName].parse();
                                }
                                this.onObjectHasBeenParsed(objectName);
                            }
                        }
                        else {
                            this.onObjectsAreUndefined();
                        }
                        return this;
                    };
                    SettingsBase.enumerateObjectInstances = function (dataViewObjectParser, options) {
                        var instanceEnumeration = _super.enumerateObjectInstances.call(this, dataViewObjectParser, options);
                        if (dataViewObjectParser
                            && dataViewObjectParser[options.objectName]
                            && dataViewObjectParser[options.objectName] instanceof powerKPIMatrix.SettingsPropertyBase
                            && !dataViewObjectParser[options.objectName].isEnumerable) {
                            return {
                                instances: []
                            };
                        }
                        return instanceEnumeration;
                    };
                    SettingsBase.prototype.generateCategories = function (maxAmountOfCategories, horizontalAlignment, verticalAlignment, isShown, isEnumerable) {
                        for (var categoryIndex = 0; categoryIndex < maxAmountOfCategories; categoryIndex++) {
                            var category = SettingsBase.getCategoryByIndex(categoryIndex);
                            var fontSettings = new powerKPIMatrix.FontSettings();
                            fontSettings.setDefault();
                            fontSettings.alignment = horizontalAlignment;
                            fontSettings.verticalAlignment = verticalAlignment;
                            fontSettings.label = category.displayName;
                            fontSettings.show = isShown;
                            fontSettings.isEnumerable = isEnumerable;
                            fontSettings.order = 0;
                            this[category.name] = fontSettings;
                        }
                    };
                    SettingsBase.CategoryNamePrefix = "category_";
                    SettingsBase.CategoryDisplayNamePrefix = "Category";
                    return SettingsBase;
                }(DataViewObjectsParser));
                powerKPIMatrix.SettingsBase = SettingsBase;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var SeriesSettings = /** @class */ (function (_super) {
                    __extends(SeriesSettings, _super);
                    function SeriesSettings() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.asOfDate = new powerKPIMatrix.AsOfDateSettings();
                        _this.metricName = new powerKPIMatrix.FontSettings();
                        _this.currentValue = new powerKPIMatrix.KPIValueSettings();
                        _this.kpiIndicator = new powerKPIMatrix.KPIIndicatorSettings();
                        _this.kpiIndicatorValue = new powerKPIMatrix.KPIIndicatorValueSettings();
                        _this.comparisonValue = new powerKPIMatrix.KPIValueSettings();
                        _this.secondComparisonValue = new powerKPIMatrix.KPIValueSettings();
                        _this.secondKPIIndicatorValue = new powerKPIMatrix.KPIIndicatorValueSettings();
                        _this.sparklineSettings = new powerKPIMatrix.SparklineSettings();
                        _this.metricSpecific = new powerKPIMatrix.MetricSpecificSettings();
                        return _this;
                    }
                    SeriesSettings.prototype.onObjectHasBeenParsed = function (objectName) {
                        if (objectName !== "metricSpecific") {
                            return;
                        }
                        this.applyMetricSpecificSettings();
                    };
                    SeriesSettings.prototype.onObjectsAreUndefined = function () {
                        this.applyMetricSpecificSettings();
                    };
                    SeriesSettings.prototype.applyMetricSpecificSettings = function () {
                        this.applyBackgroundColor(this.metricSpecific.backgroundColor);
                    };
                    SeriesSettings.prototype.applyAlternativeBackgroundColor = function () {
                        var backgroundColor = this.metricSpecific.alternativeBackgroundColor;
                        this.applyBackgroundColor(backgroundColor);
                        this.metricSpecific.backgroundColor = backgroundColor;
                    };
                    SeriesSettings.prototype.applyBackgroundColor = function (backgroundColor) {
                        var _this = this;
                        [
                            this.asOfDate,
                            this.metricName,
                            this.currentValue,
                            this.kpiIndicatorValue,
                            this.comparisonValue,
                            this.sparklineSettings,
                            this.secondComparisonValue,
                            this.secondKPIIndicatorValue,
                        ].forEach(function (specificSettings) {
                            _this.applyBackgroundColorIfOwnColorIsNotSpecified(specificSettings, backgroundColor);
                        });
                    };
                    SeriesSettings.prototype.applyBackgroundColorIfOwnColorIsNotSpecified = function (specificSettings, backgroundColor) {
                        if (!specificSettings || !backgroundColor || specificSettings.backgroundColor) {
                            return;
                        }
                        specificSettings.backgroundColor = backgroundColor;
                    };
                    return SeriesSettings;
                }(powerKPIMatrix.SettingsBase));
                powerKPIMatrix.SeriesSettings = SeriesSettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerKpi
                var BaseSettings = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.Settings;
                var PowerKPISettings = /** @class */ (function (_super) {
                    __extends(PowerKPISettings, _super);
                    function PowerKPISettings() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    PowerKPISettings.prototype.getProperties = function () {
                        var _this = this;
                        var properties = {}, objectNames = Object.keys(this);
                        objectNames.forEach(function (objectName) {
                            if (_this.isPropertyEnumerable(objectName)) {
                                var propertyNames = Object.keys(_this[objectName]);
                                properties[objectName] = {};
                                propertyNames.forEach(function (propertyName) {
                                    if (_this.isPropertyEnumerable(objectName)) {
                                        properties[objectName][propertyName] =
                                            _this.createPropertyIdentifier(powerKPIMatrix.PowerKPIPrefixier.getObjectNameWithPrefix(objectName), propertyName);
                                    }
                                });
                            }
                        });
                        return properties;
                    };
                    PowerKPISettings.enumerateObjectInstances = function (dataViewObjectParser, options) {
                        var objectName = options && options.objectName
                            ? powerKPIMatrix.PowerKPIPrefixier.getObjectNameWithoutPrefix(options.objectName)
                            : "";
                        return _super.enumerateObjectInstances.call(this, dataViewObjectParser, { objectName: objectName });
                    };
                    PowerKPISettings.prototype.isPropertyEnumerable = function (propertyName) {
                        return !PowerKPISettings.InnumerablePrefix.test(propertyName);
                    };
                    PowerKPISettings.prototype.createPropertyIdentifier = function (objectName, propertyName) {
                        return {
                            objectName: objectName,
                            propertyName: propertyName
                        };
                    };
                    PowerKPISettings.InnumerablePrefix = /^_/;
                    return PowerKPISettings;
                }(BaseSettings));
                powerKPIMatrix.PowerKPISettings = PowerKPISettings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var Settings = /** @class */ (function (_super) {
                    __extends(Settings, _super);
                    function Settings() {
                        var _this = _super.call(this) || this;
                        _this.internalState = new powerKPIMatrix.PersistentSettings();
                        _this.metricSpecific = new powerKPIMatrix.MetricSpecificSettings();
                        _this.table = new powerKPIMatrix.TableSettings();
                        _this.title = new powerKPIMatrix.FakeTitleSettings();
                        _this.header = new powerKPIMatrix.HeaderSettings();
                        _this.asOfDate = new powerKPIMatrix.AsOfDateSettings();
                        _this.metricName = new powerKPIMatrix.FontSettings();
                        _this.currentValue = new powerKPIMatrix.KPIValueSettings();
                        _this.kpiIndicator = new powerKPIMatrix.KPIIndicatorSettings();
                        _this.kpiIndicatorValue = new powerKPIMatrix.KPIIndicatorValueSettings();
                        _this.comparisonValue = new powerKPIMatrix.KPIValueSettings();
                        _this.secondComparisonValue = new powerKPIMatrix.KPIValueSettings();
                        _this.secondKPIIndicatorValue = new powerKPIMatrix.KPIIndicatorValueSettings();
                        _this.sparklineSettings = new powerKPIMatrix.SparklineSettings();
                        _this.verticalGrid = new powerKPIMatrix.GridSettings();
                        _this.horizontalGrid = new powerKPIMatrix.GridSettings();
                        _this.subtotal = new powerKPIMatrix.SubtotalSettings();
                        _this.popOutGeneralSettings = new powerKPIMatrix.PopOutGeneralSettings();
                        _this.asOfDate.isEnumerable = false;
                        _this.asOfDate.show = true;
                        _this.asOfDate.label = "As of Date";
                        _this.asOfDate.order = 1;
                        _this.metricName.isEnumerable = false;
                        _this.metricName.alignment = powerKPIMatrix.HorizontalTextAlignment.left;
                        _this.metricName.label = "Metric Name";
                        _this.metricName.order = 2;
                        _this.currentValue.isEnumerable = false;
                        _this.currentValue.defaultFormat = "#,0.00";
                        _this.currentValue.label = "Current Value";
                        _this.currentValue.order = 3;
                        _this.kpiIndicator.isEnumerable = false;
                        _this.kpiIndicator.applySettingToContext();
                        _this.kpiIndicatorValue.isEnumerable = false;
                        _this.kpiIndicatorValue.defaultFormat = "+0.00 %;-0.00 %;0.00 %";
                        _this.kpiIndicatorValue.label = "KPI Status";
                        _this.kpiIndicatorValue.order = 4;
                        _this.comparisonValue.isEnumerable = false;
                        _this.comparisonValue.defaultFormat = "#,0.00";
                        _this.comparisonValue.label = "Comparison Value";
                        _this.comparisonValue.order = 5;
                        _this.secondComparisonValue.isEnumerable = false;
                        _this.secondComparisonValue.defaultFormat = "#,0.00";
                        _this.secondComparisonValue.label = "Second Comparison Value";
                        _this.secondComparisonValue.order = 6;
                        _this.secondKPIIndicatorValue.isEnumerable = false;
                        _this.secondKPIIndicatorValue.defaultFormat = "+0.00 %;-0.00 %;0.00 %";
                        _this.secondKPIIndicatorValue.label = "Second KPI Status";
                        _this.secondKPIIndicatorValue.order = 7;
                        _this.secondKPIIndicatorValue.shouldMatchKPIColor = false;
                        _this.sparklineSettings.isEnumerable = false;
                        _this.sparklineSettings.label = "Sparklines";
                        _this.sparklineSettings.order = 8;
                        _this.metricSpecific.isEnumerable = false;
                        _this.generateCategories(powerKPIMatrix.SettingsBase.maxAmountOfCategories, powerKPIMatrix.HorizontalTextAlignment.center, powerKPIMatrix.VerticalTextAlignment.top, true, true);
                        return _this;
                    }
                    Settings.prototype.hideDescriptors = function (seriesDeep) {
                        var amountOfCategories = seriesDeep - 1;
                        this.subtotal.parse(amountOfCategories);
                        this.metricName.updateHyperlinkVisibility(this.metricName.isHyperlinkSpecified);
                        this.hideCategories(amountOfCategories);
                    };
                    Settings.prototype.hideCategories = function (amountOfAllowedCategories) {
                        for (var index = 0; index < powerKPIMatrix.SettingsBase.maxAmountOfCategories; index++) {
                            var category = powerKPIMatrix.SettingsBase.getCategoryByIndex(index);
                            var options = this[category.name];
                            if (options) {
                                options.updateHyperlinkVisibility(options.isHyperlinkSpecified);
                                if (index >= amountOfAllowedCategories) {
                                    options.isEnumerable = false;
                                }
                            }
                        }
                    };
                    Settings.prototype.onObjectHasBeenParsed = function (objectName) {
                        if (objectName !== "table") {
                            return;
                        }
                        this.updatePropertiesBasedOnPreviousAndCurrentStyles();
                    };
                    Settings.prototype.onObjectsAreUndefined = function () {
                        this.updatePropertiesBasedOnPreviousAndCurrentStyles();
                    };
                    Settings.prototype.updatePropertiesBasedOnPreviousAndCurrentStyles = function () {
                        switch (this.table.style) {
                            case powerKPIMatrix.TableStyle.BoldHeader:
                            case powerKPIMatrix.TableStyle.BoldHeaderAndAlternatingMetrics: {
                                this.applyBoldHeader();
                                this.currentValue.isBold = false;
                                break;
                            }
                            case powerKPIMatrix.TableStyle.BoldHeaderAndCurrentValue: {
                                this.applyBoldHeader();
                                this.currentValue.isBold = true;
                                break;
                            }
                            case powerKPIMatrix.TableStyle.Default:
                            default: {
                                this.header.setDefault();
                                this.header.backgroundColor = undefined;
                                this.horizontalGrid.setDefault();
                                this.verticalGrid.setDefault();
                                this.currentValue.isBold = false;
                                break;
                            }
                        }
                    };
                    Settings.prototype.applyBoldHeader = function () {
                        this.header.show = true;
                        this.header.backgroundColor = "#333333";
                        this.header.color = "#fff";
                        this.header.isBold = true;
                        this.header.textFontSize = 10;
                        this.header.alignment = powerKPIMatrix.HorizontalTextAlignment.center;
                        this.horizontalGrid.show = true;
                        this.verticalGrid.show = true;
                        this.verticalGrid.color = this.horizontalGrid.color = "#E7E7E7";
                        this.verticalGrid.thickness = this.horizontalGrid.thickness = 2;
                    };
                    Settings.prototype.parse = function (dataView) {
                        this.powerKPISettings = powerKPIMatrix.PowerKPISettings.parse(dataView);
                        return _super.prototype.parse.call(this, dataView);
                    };
                    Settings.enumerateObjectInstances = function (settings, options) {
                        var enumeration = _super.enumerateObjectInstances.call(this, settings, options);
                        if (options
                            && options.objectName
                            && settings[options.objectName]) {
                            return enumeration;
                        }
                        var powerKPIEnumeration = powerKPIMatrix.PowerKPISettings.enumerateObjectInstances(settings.powerKPISettings, options);
                        return {
                            instances: Settings.getInstances(enumeration).concat(Settings.getInstances(powerKPIEnumeration))
                        };
                    };
                    Settings.getInstances = function (enumeration) {
                        return enumeration
                            && enumeration.instances
                            || [];
                    };
                    return Settings;
                }(powerKPIMatrix.SettingsBase));
                powerKPIMatrix.Settings = Settings;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ColumnSetConverter = /** @class */ (function () {
                    function ColumnSetConverter() {
                    }
                    ColumnSetConverter.prototype.convert = function (options) {
                        var dataView = options.dataView;
                        var dataMapping = this.getDefaultColumnSet();
                        if (!dataView
                            || !dataView.table
                            || !dataView.table.columns) {
                            return dataMapping;
                        }
                        dataView.table.columns.forEach(function (column) {
                            if (column.roles) {
                                Object.keys(column.roles).forEach(function (roleName) {
                                    if (dataMapping[roleName]) {
                                        dataMapping[roleName].push(column.displayName);
                                        dataMapping[roleName].sort();
                                    }
                                });
                            }
                        });
                        return dataMapping;
                    };
                    ColumnSetConverter.prototype.getDefaultColumnSet = function () {
                        var dataMapping = {};
                        [
                            powerKPIMatrix.actualValueColumn,
                            powerKPIMatrix.comparisonValueColumn,
                            powerKPIMatrix.kpiIndicatorIndexColumn,
                            powerKPIMatrix.kpiIndicatorValueColumn,
                            powerKPIMatrix.secondComparisonValueColumn,
                            powerKPIMatrix.secondKPIIndicatorValueColumn,
                            powerKPIMatrix.rowBasedMetricNameColumn,
                        ].forEach(function (column) {
                            dataMapping[column.name] = [];
                        });
                        return dataMapping;
                    };
                    return ColumnSetConverter;
                }());
                powerKPIMatrix.ColumnSetConverter = ColumnSetConverter;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var DataRepresentationTypeEnum;
                (function (DataRepresentationTypeEnum) {
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["None"] = 0] = "None";
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["DateType"] = 1] = "DateType";
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["NumberType"] = 2] = "NumberType";
                    DataRepresentationTypeEnum[DataRepresentationTypeEnum["StringType"] = 3] = "StringType";
                })(DataRepresentationTypeEnum = powerKPIMatrix.DataRepresentationTypeEnum || (powerKPIMatrix.DataRepresentationTypeEnum = {}));
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var DataRepresentationScale = /** @class */ (function () {
                    function DataRepresentationScale(scale, isOrdinal) {
                        if (scale === void 0) { scale = null; }
                        if (isOrdinal === void 0) { isOrdinal = false; }
                        this.isOrdinalScale = false;
                        this.baseScale = scale;
                        this.isOrdinalScale = isOrdinal;
                    }
                    DataRepresentationScale.create = function () {
                        return new DataRepresentationScale();
                    };
                    DataRepresentationScale.prototype.domain = function (values, type) {
                        var scale;
                        if (values && values.length) {
                            switch (type) {
                                case powerKPIMatrix.DataRepresentationTypeEnum.DateType: {
                                    scale = d3.time.scale();
                                    break;
                                }
                                case powerKPIMatrix.DataRepresentationTypeEnum.NumberType: {
                                    scale = d3.scale.linear();
                                    break;
                                }
                                case powerKPIMatrix.DataRepresentationTypeEnum.StringType: {
                                    scale = d3.scale.ordinal();
                                    this.isOrdinalScale = true;
                                    break;
                                }
                            }
                        }
                        if (scale) {
                            scale.domain(values);
                        }
                        this.baseScale = scale;
                        this.internalType = type;
                        return this;
                    };
                    DataRepresentationScale.prototype.getDomain = function () {
                        if (!this.baseScale) {
                            return [];
                        }
                        return this.baseScale.domain() || [];
                    };
                    DataRepresentationScale.prototype.scale = function (value) {
                        if (!this.baseScale) {
                            return 0;
                        }
                        return this.baseScale(value);
                    };
                    DataRepresentationScale.prototype.copy = function () {
                        return new DataRepresentationScale(this.baseScale && this.baseScale.copy(), this.isOrdinalScale);
                    };
                    DataRepresentationScale.prototype.range = function (rangeValues) {
                        if (this.baseScale) {
                            if (this.isOrdinalScale) {
                                this.baseScale.rangePoints(rangeValues);
                            }
                            else {
                                this.baseScale.range(rangeValues);
                            }
                        }
                        return this;
                    };
                    Object.defineProperty(DataRepresentationScale.prototype, "isOrdinal", {
                        get: function () {
                            return this.isOrdinalScale;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    Object.defineProperty(DataRepresentationScale.prototype, "type", {
                        get: function () {
                            return this.internalType;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    return DataRepresentationScale;
                }());
                powerKPIMatrix.DataRepresentationScale = DataRepresentationScale;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var DataRepresentationSeriesUtils = /** @class */ (function () {
                    function DataRepresentationSeriesUtils() {
                        if (DataRepresentationSeriesUtils._instance) {
                            return DataRepresentationSeriesUtils._instance;
                        }
                        DataRepresentationSeriesUtils._instance = this;
                    }
                    Object.defineProperty(DataRepresentationSeriesUtils, "instance", {
                        get: function () {
                            if (DataRepresentationSeriesUtils._instance) {
                                return DataRepresentationSeriesUtils._instance;
                            }
                            return new DataRepresentationSeriesUtils();
                        },
                        enumerable: true,
                        configurable: true
                    });
                    DataRepresentationSeriesUtils.prototype.toArray = function (columnSet) {
                        return Object.keys(columnSet).map(function (columnName) {
                            return columnSet[columnName];
                        });
                    };
                    DataRepresentationSeriesUtils.prototype.sortSeriesBySortOrder = function (series, sortOrder) {
                        var _this = this;
                        return series.sort(function (firstSeries, secondSeries) {
                            var firstSeriesSortOrder = _this.getSortOrder(firstSeries.sortOrder);
                            var secondSeriesSortOrder = _this.getSortOrder(secondSeries.sortOrder);
                            if (sortOrder === powerKPIMatrix.SortOrder.Descending) {
                                _a = [secondSeriesSortOrder, firstSeriesSortOrder], firstSeriesSortOrder = _a[0], secondSeriesSortOrder = _a[1];
                            }
                            if (firstSeriesSortOrder < secondSeriesSortOrder) {
                                return -1;
                            }
                            else if (firstSeriesSortOrder > secondSeriesSortOrder) {
                                return 1;
                            }
                            else {
                                return 0;
                            }
                            var _a;
                        });
                    };
                    DataRepresentationSeriesUtils.prototype.getSortOrder = function (order) {
                        return order || 0;
                    };
                    return DataRepresentationSeriesUtils;
                }());
                powerKPIMatrix.DataRepresentationSeriesUtils = DataRepresentationSeriesUtils;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var DataRepresentationPointFilter = /** @class */ (function () {
                    function DataRepresentationPointFilter() {
                        if (DataRepresentationPointFilter.instance) {
                            return DataRepresentationPointFilter.instance;
                        }
                        DataRepresentationPointFilter.instance = this;
                    }
                    DataRepresentationPointFilter.create = function () {
                        return new DataRepresentationPointFilter();
                    };
                    DataRepresentationPointFilter.prototype.isPointValid = function (point) {
                        return point
                            && point.value !== null
                            && point.value !== undefined
                            && !isNaN(point.value);
                    };
                    DataRepresentationPointFilter.prototype.groupAndFilterByColor = function (points, colors, defaultColor) {
                        var _this = this;
                        if (!colors || !colors.length) {
                            return [{
                                    points: this.filter(points),
                                    color: defaultColor,
                                }];
                        }
                        var gradientSet = [];
                        colors.forEach(function (color, colorIndex) {
                            var currentGradient = gradientSet.slice(-1)[0];
                            var point = points[colorIndex];
                            if (_this.isPointValid(point)) {
                                if (!currentGradient) {
                                    gradientSet.push({
                                        color: color,
                                        points: [point],
                                    });
                                }
                                else if (currentGradient && currentGradient.color === color) {
                                    currentGradient.points.push(point);
                                }
                                else if (currentGradient && currentGradient.color !== color) {
                                    currentGradient.points.push(point);
                                    gradientSet.push({
                                        color: color,
                                        points: [point],
                                    });
                                }
                            }
                        });
                        return gradientSet;
                    };
                    DataRepresentationPointFilter.prototype.filter = function (points) {
                        var _this = this;
                        return points.filter(function (point) { return _this.isPointValid(point); });
                    };
                    return DataRepresentationPointFilter;
                }());
                powerKPIMatrix.DataRepresentationPointFilter = DataRepresentationPointFilter;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var VarianceStrategy = /** @class */ (function () {
                    function VarianceStrategy() {
                    }
                    VarianceStrategy.prototype.getVariance = function (firstValue, secondValue) {
                        return firstValue / secondValue - 1;
                    };
                    return VarianceStrategy;
                }());
                powerKPIMatrix.VarianceStrategy = VarianceStrategy;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var DataConverter = /** @class */ (function () {
                    function DataConverter(isDataColumnBasedModel) {
                        if (isDataColumnBasedModel === void 0) { isDataColumnBasedModel = false; }
                        this.varianceStrategy = new powerKPIMatrix.VarianceStrategy();
                        this.seriesUtils = new powerKPIMatrix.DataRepresentationSeriesUtils();
                        this.defaultValue = 0;
                        this.amountOfFilledSeries = 0;
                        this.isDataColumnBasedModel = isDataColumnBasedModel;
                    }
                    DataConverter.prototype.convert = function (options) {
                        var _this = this;
                        var dataView = options.dataView, columnMapping = options.columnMapping, settings = options.settings;
                        this.amountOfFilledSeries = 0;
                        var dataRepresentation = this.getDefaultData();
                        if (!this.isDataViewValid(dataView)) {
                            return dataRepresentation;
                        }
                        var xAxisMetadataColumn = this.getColumnByRoleName(dataView.table.columns, powerKPIMatrix.dateColumn.name);
                        dataRepresentation.columns = this.getColumns(dataView.table.columns, [
                            powerKPIMatrix.actualValueColumn,
                            powerKPIMatrix.comparisonValueColumn,
                            powerKPIMatrix.kpiIndicatorValueColumn,
                            powerKPIMatrix.secondComparisonValueColumn,
                        ]);
                        dataRepresentation.type = this.getTypeOfColumn(xAxisMetadataColumn);
                        dataRepresentation.metadata = xAxisMetadataColumn;
                        settings.asOfDate.parseByType(dataRepresentation.type);
                        if (!this.isDataColumnBasedModel) {
                            settings.table.forceToUseDefaultSortOrderByName();
                        }
                        settings.asOfDate.columnFormat = xAxisMetadataColumn
                            && xAxisMetadataColumn.format;
                        settings.currentValue.columnFormat = dataRepresentation.columns[powerKPIMatrix.actualValueColumn.name]
                            && dataRepresentation.columns[powerKPIMatrix.actualValueColumn.name].format;
                        settings.comparisonValue.columnFormat = dataRepresentation.columns[powerKPIMatrix.comparisonValueColumn.name]
                            && dataRepresentation.columns[powerKPIMatrix.comparisonValueColumn.name].format;
                        settings.kpiIndicatorValue.columnFormat = dataRepresentation.columns[powerKPIMatrix.kpiIndicatorValueColumn.name]
                            && dataRepresentation.columns[powerKPIMatrix.kpiIndicatorValueColumn.name].format;
                        settings.secondComparisonValue.columnFormat = dataRepresentation.columns[powerKPIMatrix.secondComparisonValueColumn.name]
                            && dataRepresentation.columns[powerKPIMatrix.secondComparisonValueColumn.name].format;
                        if (!dataRepresentation.columns[powerKPIMatrix.secondComparisonValueColumn.name]) {
                            settings.secondComparisonValue.show = false;
                            settings.secondKPIIndicatorValue.show = false;
                        }
                        var defaultUnmappedCategoryName = settings.table.getDefaultUnmappedCategoryName();
                        dataView.table.rows.forEach(function (row, rowIndex) {
                            var columnValues = _this.getColumnValues(dataView.table.columns, row);
                            var categorySet = _this.parseCategorySet(columnValues, defaultUnmappedCategoryName);
                            dataRepresentation.seriesDeep = Math.max(dataRepresentation.seriesDeep, categorySet.length);
                            _this.applyCategorySet(categorySet, dataRepresentation.series, dataRepresentation.seriesArray, undefined, !settings.table.isDefaultSortOrderByName());
                            var levels = categorySet.map(function (categoryHyperlink) {
                                return categoryHyperlink.name;
                            });
                            _this.converterStep(dataRepresentation, columnValues, dataView.table.identity || [], dataView.table.columns[0].queryName, columnMapping, dataView.table.rows, rowIndex, settings, levels);
                        });
                        this.replaceTheFilledSeriesAtFirstLevel(dataRepresentation, defaultUnmappedCategoryName);
                        dataRepresentation.seriesArray = this.postProcess(dataRepresentation.seriesArray, settings.subtotal, settings.table.style, settings, dataRepresentation.type, dataRepresentation.y);
                        settings.hideDescriptors(dataRepresentation.seriesDeep);
                        return dataRepresentation;
                    };
                    DataConverter.prototype.postProcess = function (seriesArray, subtotalSettings, tableStyle, settings, type, baseAxis) {
                        var _this = this;
                        var filteredSeries = [];
                        var areThereAnyFilledSeries = false;
                        seriesArray.forEach(function (series, seriesIndex) {
                            if (series.hasBeenFilled) {
                                _this.updateYScale(series, baseAxis);
                                _this.updateXScale(series, type);
                                areThereAnyFilledSeries = true;
                                if (series.settings && series.settings.metricName) {
                                    if (series.hyperlink) {
                                        series.settings.metricName.hideCommonProperties();
                                        settings.metricName.updateHyperlinkVisibility(true);
                                    }
                                    if (series.image) {
                                        settings.metricName.updateImageVisibility(true);
                                    }
                                }
                                filteredSeries.push(series);
                            }
                            else {
                                series.children = _this.postProcess(series.children, subtotalSettings, tableStyle, settings, type, baseAxis);
                                if (subtotalSettings.show) {
                                    _this.countSubtotal(series, subtotalSettings.type);
                                }
                                if (series.children && series.children.length) {
                                    filteredSeries.push(series);
                                }
                            }
                        });
                        filteredSeries = this.seriesUtils.sortSeriesBySortOrder(filteredSeries, settings.table.sortOrder);
                        if (areThereAnyFilledSeries) {
                            filteredSeries.forEach(function (series) {
                                if (series.hasBeenFilled) {
                                    if ((tableStyle === powerKPIMatrix.TableStyle.AlternatingMetrics || tableStyle === powerKPIMatrix.TableStyle.BoldHeaderAndAlternatingMetrics)
                                        && _this.amountOfFilledSeries % 2) {
                                        series.settings.applyAlternativeBackgroundColor();
                                    }
                                    _this.amountOfFilledSeries++;
                                }
                            });
                        }
                        return filteredSeries;
                    };
                    DataConverter.prototype.countSubtotal = function (series, type) {
                        var _this = this;
                        if (!series
                            || !series.children
                            || !series.children.length) {
                            return;
                        }
                        series.children.forEach(function (childSeries) {
                            var currentValue = childSeries.currentValue, comparisonValue = childSeries.comparisonValue, secondComparisonValue = childSeries.secondComparisonValue;
                            switch (type) {
                                case powerKPIMatrix.SubtotalType.CountOfItems: {
                                    series.currentValue = _this.countValues(series.currentValue, currentValue);
                                    series.comparisonValue = _this.countValues(series.comparisonValue, comparisonValue);
                                    series.secondComparisonValue = _this.countValues(series.secondComparisonValue, secondComparisonValue);
                                    break;
                                }
                                case powerKPIMatrix.SubtotalType.SumOfItems:
                                default: {
                                    series.currentValue = _this.addValues(series.currentValue, currentValue);
                                    series.comparisonValue = _this.addValues(series.comparisonValue, comparisonValue);
                                    series.secondComparisonValue = _this.addValues(series.secondComparisonValue, secondComparisonValue);
                                    break;
                                }
                            }
                        });
                    };
                    DataConverter.prototype.addValues = function (currentSum, additionalValue) {
                        if (powerKPIMatrix.NumericValueUtils.isValueFinite(additionalValue)) {
                            if (!powerKPIMatrix.NumericValueUtils.isValueFinite(currentSum)) {
                                currentSum = this.defaultValue;
                            }
                            return currentSum + additionalValue;
                        }
                        else {
                            return currentSum;
                        }
                    };
                    DataConverter.prototype.countValues = function (currentSum, currentValue) {
                        if (powerKPIMatrix.NumericValueUtils.isValueFinite(currentValue)) {
                            if (!powerKPIMatrix.NumericValueUtils.isValueFinite(currentSum)) {
                                currentSum = this.defaultValue;
                            }
                            return currentSum + 1;
                        }
                        else {
                            return currentSum;
                        }
                    };
                    DataConverter.prototype.replaceTheFilledSeriesAtFirstLevel = function (dataRepresentation, defaultCategoryName) {
                        var _this = this;
                        if (dataRepresentation.seriesDeep <= 1) {
                            return;
                        }
                        var seriesArray = [];
                        dataRepresentation.seriesArray
                            .forEach(function (series, seriesIndex) {
                            if (series && series.hasBeenFilled && series.level === 0) {
                                delete dataRepresentation.series[series.name];
                                if (defaultCategoryName) {
                                    var newSeries = _this.deepSeriesCreation(defaultCategoryName, dataRepresentation.series, seriesArray, dataRepresentation.seriesDeep - 1, 0);
                                    series.level = newSeries.level + 1;
                                    newSeries.childrenSet[series.name] = series;
                                    newSeries.children.push(series);
                                }
                            }
                            else {
                                seriesArray.push(series);
                            }
                        });
                        dataRepresentation.seriesArray = seriesArray;
                    };
                    DataConverter.prototype.deepSeriesCreation = function (name, seriesSet, seriesArray, deep, level) {
                        if (deep === void 0) { deep = 0; }
                        if (level === void 0) { level = 0; }
                        var series = this.createOrGetExistingSeries(name, seriesSet, seriesArray, level, undefined, undefined);
                        var currentDeep = deep - 1;
                        if (currentDeep > 0) {
                            return this.deepSeriesCreation(name, series.childrenSet, series.children, currentDeep, level + 1);
                        }
                        return series;
                    };
                    DataConverter.prototype.parseCategorySet = function (columnValues, defaultCategoryName) {
                        var categorySet = [];
                        if (columnValues[powerKPIMatrix.categoryColumn.name]) {
                            var hyperlinks_1 = this.getValuesByColumnName(columnValues, powerKPIMatrix.hyperlinkColumn.name);
                            var sortOrders_1 = this.getValuesByColumnName(columnValues, powerKPIMatrix.sortOrderColumn.name);
                            var images_1 = this.getValuesByColumnName(columnValues, powerKPIMatrix.imageColumn.name);
                            Object.keys(columnValues[powerKPIMatrix.categoryColumn.name]).forEach(function (categoryName, categoryIndex) {
                                var category = columnValues[powerKPIMatrix.categoryColumn.name][categoryName];
                                var hyperlink = hyperlinks_1[categoryIndex] || null;
                                var sortOrder = sortOrders_1[categoryIndex] || null;
                                var image = images_1[categoryIndex] || null;
                                if (category && category.value !== undefined && category.value !== null) {
                                    categorySet.push({
                                        image: image,
                                        sortOrder: sortOrder,
                                        hyperlink: hyperlink,
                                        name: category.value,
                                    });
                                }
                                else if (category
                                    && categorySet[0] !== undefined
                                    && categorySet[0] !== null
                                    && defaultCategoryName) {
                                    categorySet.push({
                                        image: image,
                                        sortOrder: sortOrder,
                                        hyperlink: hyperlink,
                                        name: defaultCategoryName,
                                    });
                                }
                            });
                        }
                        return categorySet.reverse();
                    };
                    DataConverter.prototype.getValuesByColumnName = function (columnValues, name) {
                        var column = columnValues[name];
                        if (!column) {
                            return [];
                        }
                        return Object.keys(column)
                            .map(function (columnName) {
                            var columnValue = column[columnName];
                            return (columnValue && columnValue.value) || null;
                        });
                    };
                    DataConverter.prototype.applyCategorySet = function (categorySet, seriesSet, seriesArray, misplacedCategory, shouldUseSeriesIndexAsDefaultSortOrder, level) {
                        if (shouldUseSeriesIndexAsDefaultSortOrder === void 0) { shouldUseSeriesIndexAsDefaultSortOrder = false; }
                        if (level === void 0) { level = 0; }
                        var category = categorySet && categorySet[0];
                        if (!category) {
                            return;
                        }
                        var currentMisplacedCategory = misplacedCategory;
                        if (level === 0) {
                            var metricName = categorySet
                                && categorySet.length
                                && categorySet[categorySet.length - 1];
                            if (metricName
                                && metricName.name !== null
                                && metricName.name !== undefined
                                && seriesSet[metricName.name]
                                && seriesSet[metricName.name].hasBeenFilled
                                && category
                                && category.name !== null
                                && category.name !== undefined) {
                                if (category.name !== metricName.name) {
                                    currentMisplacedCategory = seriesSet[metricName.name];
                                    delete seriesSet[metricName.name];
                                    var seriesIndex = seriesArray.indexOf(currentMisplacedCategory);
                                    if (seriesIndex > -1) {
                                        seriesArray.splice(seriesIndex, 1);
                                    }
                                }
                                else {
                                    var existingSeries = seriesSet[metricName.name];
                                    existingSeries.hyperlink = existingSeries.hyperlink || category.hyperlink;
                                }
                            }
                        }
                        var series = misplacedCategory && misplacedCategory.name === category.name
                            ? this.applyExistingSeries(category.name, seriesSet, seriesArray, currentMisplacedCategory, level, category.hyperlink, category.sortOrder, category.image)
                            : this.createOrGetExistingSeries(category.name, seriesSet, seriesArray, level, category.hyperlink, category.sortOrder, category.image, shouldUseSeriesIndexAsDefaultSortOrder);
                        this.applyCategorySet(categorySet.slice(1), series.childrenSet, series.children, currentMisplacedCategory, shouldUseSeriesIndexAsDefaultSortOrder, level + 1);
                    };
                    DataConverter.prototype.createOrGetExistingSeries = function (name, seriesSet, seriesArray, level, hyperlink, sortOrder, image, shouldUseSeriesIndexAsDefaultSortOrder) {
                        if (level === void 0) { level = 0; }
                        var existingSeries = seriesSet[name];
                        if (existingSeries) {
                            this.updateSeriesProperties(existingSeries, level, hyperlink, sortOrder, image);
                            return existingSeries;
                        }
                        var currentSortOrder = powerKPIMatrix.NumericValueUtils.isValueDefined(sortOrder)
                            ? sortOrder
                            : shouldUseSeriesIndexAsDefaultSortOrder
                                ? seriesArray.length
                                : name;
                        var series = {
                            name: name,
                            image: image,
                            level: level,
                            hyperlink: hyperlink,
                            children: [],
                            axisValues: [],
                            childrenSet: {},
                            sortOrder: currentSortOrder,
                        };
                        seriesSet[name] = series;
                        seriesArray.push(series);
                        return series;
                    };
                    DataConverter.prototype.applyExistingSeries = function (name, seriesSet, seriesArray, series, level, hyperlink, sortOrder, image) {
                        if (level === void 0) { level = 0; }
                        this.updateSeriesProperties(series, level, hyperlink, sortOrder, image);
                        if (seriesSet[name]) {
                            return seriesSet[name];
                        }
                        seriesSet[name] = series;
                        seriesArray.push(series);
                        return series;
                    };
                    DataConverter.prototype.updateSeriesProperties = function (series, level, hyperlink, sortOrder, image) {
                        if (level === void 0) { level = 0; }
                        series.hyperlink = hyperlink || series.hyperlink;
                        series.image = image || series.image;
                        if (powerKPIMatrix.NumericValueUtils.isValueDefined(sortOrder)) {
                            series.sortOrder = sortOrder;
                        }
                        if (powerKPIMatrix.NumericValueUtils.isValueFinite(level)) {
                            series.level = level;
                        }
                    };
                    DataConverter.prototype.getColumns = function (columns, visualColumns) {
                        var _this = this;
                        var columnSet = {};
                        visualColumns.forEach(function (column) {
                            var columnMetadata = _this.getColumnByRoleName(columns, column.name);
                            if (columnMetadata) {
                                columnSet[column.name] = columnMetadata;
                            }
                        });
                        return columnSet;
                    };
                    DataConverter.prototype.getDefaultData = function () {
                        return {
                            isDataColumnBasedModel: this.isDataColumnBasedModel,
                            series: {},
                            seriesArray: [],
                            columns: {},
                            seriesDeep: 0,
                            type: powerKPIMatrix.DataRepresentationTypeEnum.None,
                            y: {
                                min: undefined,
                                max: undefined
                            },
                        };
                    };
                    DataConverter.prototype.isDataViewValid = function (dataView) {
                        return !!(dataView
                            && dataView.table
                            && dataView.table.rows
                            && dataView.table.columns);
                    };
                    DataConverter.prototype.getColumnByRoleName = function (columns, roleName) {
                        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
                            var column = columns_1[_i];
                            if (column.roles && column.roles[roleName]) {
                                return column;
                            }
                        }
                        return undefined;
                    };
                    DataConverter.prototype.getTypeOfColumn = function (column) {
                        if (column) {
                            if (column.type.dateTime) {
                                return powerKPIMatrix.DataRepresentationTypeEnum.DateType;
                            }
                            else if (column.type.integer || column.type.numeric) {
                                return powerKPIMatrix.DataRepresentationTypeEnum.NumberType;
                            }
                            else if (column.type.text) {
                                return powerKPIMatrix.DataRepresentationTypeEnum.StringType;
                            }
                        }
                        return powerKPIMatrix.DataRepresentationTypeEnum.None;
                    };
                    DataConverter.prototype.getColumnValues = function (columns, row) {
                        var columnValues = {};
                        row.forEach(function (value, valueIndex) {
                            var column = columns[valueIndex];
                            if (columns[valueIndex].roles) {
                                Object.keys(columns[valueIndex].roles)
                                    .forEach(function (roleName) {
                                    if (!columnValues[roleName]) {
                                        columnValues[roleName] = {};
                                    }
                                    if (!columnValues[roleName][column.displayName]) {
                                        columnValues[roleName][column.displayName] = {
                                            format: column.format
                                        };
                                    }
                                    columnValues[roleName][column.displayName].value = value;
                                });
                            }
                        });
                        return columnValues;
                    };
                    DataConverter.prototype.getXAxisScale = function (scale, min, max, type, categoryValues) {
                        var values;
                        switch (type) {
                            case powerKPIMatrix.DataRepresentationTypeEnum.DateType:
                            case powerKPIMatrix.DataRepresentationTypeEnum.NumberType: {
                                values = [min, max];
                                break;
                            }
                            case powerKPIMatrix.DataRepresentationTypeEnum.StringType: {
                                values = categoryValues;
                                break;
                            }
                        }
                        return scale.domain(values, type);
                    };
                    DataConverter.prototype.getSeriesByDisplayName = function (seriesSet, seriesArray, levels, displayName, identities, identityIndex, identityQueryName, rows, defaultSettings, type) {
                        var series = this.deepSearchSeries(seriesSet, levels);
                        if (!series) {
                            series = this.createOrGetExistingSeries(displayName, seriesSet, seriesArray, undefined, undefined, undefined, undefined, !defaultSettings.table.isDefaultSortOrderByName());
                        }
                        if (series && !series.hasBeenFilled) {
                            var selectionId = visuals.SelectionId.createWithIdAndMeasure(identities && identities[identityIndex], identityQueryName);
                            var settings = powerKPIMatrix.SeriesSettings.getDefault();
                            for (var propertyName in settings) {
                                var descriptor = settings[propertyName];
                                var defaultDescriptor = defaultSettings[propertyName];
                                if (descriptor && descriptor.applyDefault && defaultDescriptor) {
                                    descriptor.applyDefault(defaultDescriptor);
                                }
                            }
                            settings.parseObjects(rows
                                && rows[identityIndex]
                                && rows[identityIndex].objects
                                && rows[identityIndex].objects[0]);
                            settings.asOfDate.parseByType(type);
                            series.settings = settings;
                            series.selectionId = selectionId;
                            series.axisValue = undefined;
                            series.name = displayName;
                            series.points = [];
                            series.varianceSet = [];
                            series.kpiIndicatorIndex = NaN;
                            series.kpiIndicatorValue = NaN;
                            series.currentValue = NaN;
                            series.comparisonValue = NaN;
                            series.secondComparisonValue = NaN;
                            series.secondKPIIndicatorValue = NaN;
                            series.x = this.getDefaultAxis();
                            series.y = this.getDefaultAxis();
                            series.hasBeenFilled = true;
                        }
                        return series;
                    };
                    DataConverter.prototype.getDefaultAxis = function () {
                        return {
                            min: undefined,
                            max: undefined,
                            scale: powerKPIMatrix.DataRepresentationScale.create(),
                        };
                    };
                    DataConverter.prototype.applyXArguments = function (series, axisValue, type) {
                        if (series.x.min === undefined) {
                            series.x.min = axisValue;
                        }
                        if (series.x.max === undefined) {
                            series.x.max = axisValue;
                        }
                        if (type === powerKPIMatrix.DataRepresentationTypeEnum.DateType
                            || type === powerKPIMatrix.DataRepresentationTypeEnum.NumberType) {
                            if (axisValue < series.x.min) {
                                series.x.min = axisValue;
                            }
                            if (axisValue > series.x.max) {
                                series.x.max = axisValue;
                            }
                        }
                        else if (type === powerKPIMatrix.DataRepresentationTypeEnum.StringType) {
                            var textLength = this.getLength(axisValue);
                            if (textLength < this.getLength(series.x.min)) {
                                series.x.min = axisValue;
                            }
                            if (textLength > this.getLength(series.x.max)) {
                                series.x.max = axisValue;
                            }
                        }
                    };
                    DataConverter.prototype.getLength = function (text) {
                        if (!text || !text.length) {
                            return 0;
                        }
                        return text.length;
                    };
                    DataConverter.prototype.updateXScale = function (series, type) {
                        series.x.scale = this.getXAxisScale(series.x.scale, series.x.min, series.x.max, type, series.axisValues);
                    };
                    DataConverter.prototype.updateYScale = function (series, commonAxis) {
                        if (series.settings && series.settings.sparklineSettings) {
                            if (series.settings.sparklineSettings.shouldUseCommonScale) {
                                series.y.min = commonAxis.min;
                                series.y.max = commonAxis.max;
                            }
                            if (powerKPIMatrix.NumericValueUtils.isValueFinite(series.settings.sparklineSettings.yMin)) {
                                series.y.min = series.settings.sparklineSettings.yMin;
                            }
                            if (powerKPIMatrix.NumericValueUtils.isValueFinite(series.settings.sparklineSettings.yMax)) {
                                series.y.max = series.settings.sparklineSettings.yMax;
                            }
                        }
                        series.y.scale.domain([series.y.min, series.y.max], powerKPIMatrix.DataRepresentationTypeEnum.NumberType);
                    };
                    DataConverter.applyYArguments = function (axis, value) {
                        if (!powerKPIMatrix.NumericValueUtils.isValueFinite(value)) {
                            return;
                        }
                        if (axis.min === undefined) {
                            axis.min = value;
                        }
                        if (axis.max === undefined) {
                            axis.max = value;
                        }
                        if (value < axis.min) {
                            axis.min = value;
                        }
                        if (value > axis.max) {
                            axis.max = value;
                        }
                    };
                    DataConverter.applyYArgumentsToAxisSet = function (axisSet, value) {
                        var _this = this;
                        axisSet.forEach(function (axis) {
                            _this.applyYArguments(axis, value);
                        });
                    };
                    DataConverter.prototype.applyDataToCurrentSeries = function (data) {
                        if (!data) {
                            return;
                        }
                        var dataRepresentation = data.dataRepresentation, series = data.series, settings = data.series.settings, axisValue = data.axisValue, currentValue = data.currentValue, currentFormat = data.currentFormat, currentValueColumnName = data.currentValueColumnName, comparisonValue = data.comparisonValue, comparisonFormat = data.comparisonFormat, comparisonValueColumnName = data.comparisonValueColumnName, isComparisonValueSpecified = data.isComparisonValueSpecified, kpiIndicatorIndex = data.kpiIndicatorIndex, isKPIIndicatorIndexSpecified = data.isKPIIndicatorIndexSpecified, kpiIndicatorValue = data.kpiIndicatorValue, kpiIndicatorValueFormat = data.kpiIndicatorValueFormat, isKPIIndicatorValueSpecified = data.isKPIIndicatorValueSpecified, secondComparisonValue = data.secondComparisonValue, secondComparisonValueFormat = data.secondComparisonValueFormat, isSecondComparisonValueSpecified = data.isSecondComparisonValueSpecified, isSecondKPIIndicatorValueSpecified = data.isSecondKPIIndicatorValueSpecified, secondComparisonValueColumnName = data.secondComparisonValueColumnName, secondKPIIndicatorValue = data.secondKPIIndicatorValue, secondKPIIndicatorValueFormat = data.secondKPIIndicatorValueFormat;
                        var isCurrentValueValid = settings.currentValue.shouldTreatZeroValuesAsNulls
                            ? powerKPIMatrix.NumericValueUtils.isValueValid(currentValue)
                            : powerKPIMatrix.NumericValueUtils.isValueFinite(currentValue);
                        if (axisValue !== undefined && axisValue !== null && isCurrentValueValid) {
                            this.applyXArguments(series, axisValue, dataRepresentation.type);
                            series.axisValue = axisValue;
                            series.axisValues.push(axisValue);
                            series.currentValue = currentValue;
                            series.points[0] = this.updatePointSet(series.points[0], currentValueColumnName, series.settings.currentValue, settings.sparklineSettings.isActualVisible, axisValue, currentValue, series.settings.sparklineSettings.actualColor, series.settings.sparklineSettings.actualThickness, series.settings.sparklineSettings.actualLineStyle, dataRepresentation.y);
                            series.comparisonValue = powerKPIMatrix.NumericValueUtils.isValueValid(comparisonValue)
                                ? comparisonValue
                                : NaN;
                            if (isComparisonValueSpecified) {
                                series.points[1] = this.updatePointSet(series.points[1], comparisonValueColumnName, series.settings.comparisonValue, settings.sparklineSettings.isTargetVisible, axisValue, series.comparisonValue, series.settings.sparklineSettings.targetColor, series.settings.sparklineSettings.targetThickness, series.settings.sparklineSettings.targetLineStyle, dataRepresentation.y);
                            }
                            series.secondComparisonValue = powerKPIMatrix.NumericValueUtils.isValueValid(secondComparisonValue)
                                ? secondComparisonValue
                                : NaN;
                            if (isSecondComparisonValueSpecified) {
                                series.points[2] = this.updatePointSet(series.points[2], secondComparisonValueColumnName, series.settings.secondComparisonValue, settings.sparklineSettings.isSecondComparisonValueVisible, axisValue, series.secondComparisonValue, series.settings.sparklineSettings.secondComparisonValueColor, series.settings.sparklineSettings.secondComparisonValueThickness, series.settings.sparklineSettings.secondComparisonValueLineStyle, dataRepresentation.y);
                            }
                            if (settings.sparklineSettings.isActualVisible) {
                                DataConverter.applyYArguments(series.y, series.currentValue);
                            }
                            if (settings.sparklineSettings.isTargetVisible) {
                                DataConverter.applyYArguments(series.y, series.comparisonValue);
                            }
                            if (settings.sparklineSettings.isSecondComparisonValueVisible) {
                                DataConverter.applyYArguments(series.y, series.secondComparisonValue);
                            }
                            series.kpiIndicatorIndex = powerKPIMatrix.NumericValueUtils.isValueFinite(kpiIndicatorIndex)
                                ? kpiIndicatorIndex
                                : NaN;
                            if (isKPIIndicatorIndexSpecified) {
                                series.points[0].kpiIndicatorIndexes.push(kpiIndicatorIndex);
                                if (series.settings.sparklineSettings.isActualVisible
                                    && series.settings.sparklineSettings.shouldActualUseKPIColors
                                    && series.points[0]) {
                                    var currentKPI = settings
                                        .kpiIndicator
                                        .getCurrentKPI(kpiIndicatorIndex);
                                    var color = currentKPI && currentKPI.color
                                        || series.points[0].color;
                                    series.points[0].colors.push(color);
                                }
                            }
                            series.kpiIndicatorValue = this.getVariance(isKPIIndicatorValueSpecified, kpiIndicatorValue, series.currentValue, series.comparisonValue);
                            series.secondKPIIndicatorValue = this.getVariance(isSecondKPIIndicatorValueSpecified, secondKPIIndicatorValue, series.currentValue, series.secondComparisonValue);
                            series.varianceSet[0] = this.updateVariance(series.varianceSet[0], series.kpiIndicatorValue);
                            series.varianceSet[1] = this.updateVariance(series.varianceSet[1], series.secondKPIIndicatorValue);
                        }
                        settings.currentValue.setColumnFormat(currentFormat);
                        settings.comparisonValue.setColumnFormat(comparisonFormat);
                        settings.kpiIndicatorValue.setColumnFormat(kpiIndicatorValueFormat);
                        settings.secondComparisonValue.setColumnFormat(secondComparisonValueFormat);
                        settings.secondKPIIndicatorValue.setColumnFormat(secondKPIIndicatorValueFormat);
                    };
                    DataConverter.prototype.updateVariance = function (variances, variance) {
                        var currentVarianceSet = variances || [];
                        currentVarianceSet.push(variance);
                        return currentVarianceSet;
                    };
                    DataConverter.prototype.getVariance = function (isKPIIndicatorValueSpecified, kpiIndicatorValue, currentValue, comparisonValue) {
                        if (isKPIIndicatorValueSpecified && powerKPIMatrix.NumericValueUtils.isValueFinite(kpiIndicatorValue)) {
                            return kpiIndicatorValue;
                        }
                        else if (!isKPIIndicatorValueSpecified && powerKPIMatrix.NumericValueUtils.isValueValid(comparisonValue)) {
                            return this.varianceStrategy.getVariance(currentValue, comparisonValue);
                        }
                        return NaN;
                    };
                    DataConverter.prototype.updatePointSet = function (pointSet, name, settings, isShown, axisValue, value, color, thickness, lineStyle, y) {
                        var currentPointSet = pointSet
                            || this.getPointSet(name, color, thickness, lineStyle, settings, isShown);
                        currentPointSet.points.push({
                            axisValue: axisValue,
                            value: value,
                        });
                        DataConverter.applyYArgumentsToAxisSet([
                            currentPointSet,
                            y,
                        ], value);
                        return currentPointSet;
                    };
                    DataConverter.prototype.getPointSet = function (name, color, thickness, lineStyle, settings, isShown) {
                        return {
                            name: name,
                            color: color,
                            settings: settings,
                            isShown: isShown,
                            thickness: thickness,
                            lineStyle: lineStyle,
                            colors: [],
                            points: [],
                            kpiIndicatorIndexes: [],
                            min: undefined,
                            max: undefined,
                        };
                    };
                    return DataConverter;
                }());
                powerKPIMatrix.DataConverter = DataConverter;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                /**
                 * TODO: This converter looks very heavy
                 * TODO: Let's revisit and optimize this once you have a chance to improve this
                 */
                var ColumnBasedModelConverter = /** @class */ (function (_super) {
                    __extends(ColumnBasedModelConverter, _super);
                    function ColumnBasedModelConverter() {
                        return _super.call(this, true) || this;
                    }
                    ColumnBasedModelConverter.prototype.converterStep = function (dataRepresentation, columnValues, identities, identityQueryName, columnMapping, rows, rowIndex, settings) {
                        var _this = this;
                        var axisValue;
                        if (columnValues[powerKPIMatrix.dateColumn.name]) {
                            var dateColumnName = Object.keys(columnValues[powerKPIMatrix.dateColumn.name])[0];
                            axisValue = (dateColumnName
                                && columnValues[powerKPIMatrix.dateColumn.name][dateColumnName]
                                && columnValues[powerKPIMatrix.dateColumn.name][dateColumnName].value) || undefined;
                        }
                        if (powerKPIMatrix.NumericValueUtils.isValueDefined(axisValue)) {
                            if (columnValues[powerKPIMatrix.actualValueColumn.name]) {
                                Object.keys(columnValues[powerKPIMatrix.actualValueColumn.name]).forEach(function (columnName, columnIndex) {
                                    if (columnMapping[columnName]) {
                                        var series = _this.getSeriesByDisplayName(dataRepresentation.series, dataRepresentation.seriesArray, [columnName], columnName, identities, columnIndex, identityQueryName, rows, settings, dataRepresentation.type);
                                        var columnValue = columnValues[powerKPIMatrix.actualValueColumn.name][columnName];
                                        var currentValue = columnValue && columnValue.value;
                                        var currentFormat = columnValue && columnValue.format;
                                        var currentValueColumnName = columnName;
                                        var comparisonValue_1 = NaN;
                                        var comparisonFormat_1;
                                        var isComparisonValueSpecified_1 = false;
                                        var comparisonValueColumnName_1;
                                        var kpiIndicatorIndex_1 = NaN;
                                        var isKPIIndicatorIndexSpecified_1 = false;
                                        var kpiIndicatorValue_1 = NaN;
                                        var kpiIndicatorValueFormat_1;
                                        var isKPIIndicatorValueSpecified_1 = false;
                                        var secondComparisonValue_1 = NaN;
                                        var secondComparisonValueFormat_1;
                                        var isSecondComparisonValueSpecified_1 = false;
                                        var secondComparisonValueColumnName_1;
                                        var secondKPIIndicatorValue_1 = NaN;
                                        var secondKPIIndicatorValueFormat_1;
                                        var isSecondKPIIndicatorValueSpecified_1 = false;
                                        Object.keys(columnMapping[columnName]).forEach(function (roleName) {
                                            var mappedColumnName = columnMapping[columnName][roleName];
                                            if (mappedColumnName !== undefined && mappedColumnName !== null && columnValues[roleName]) {
                                                var columnValue_1 = columnValues[roleName][mappedColumnName];
                                                var value = columnValue_1 && columnValue_1.value;
                                                var format = columnValue_1 && columnValue_1.format;
                                                switch (roleName) {
                                                    case powerKPIMatrix.comparisonValueColumn.name: {
                                                        comparisonValue_1 = value;
                                                        comparisonFormat_1 = format;
                                                        comparisonValueColumnName_1 = mappedColumnName;
                                                        isComparisonValueSpecified_1 = true;
                                                        break;
                                                    }
                                                    case powerKPIMatrix.kpiIndicatorIndexColumn.name: {
                                                        kpiIndicatorIndex_1 = value;
                                                        isKPIIndicatorIndexSpecified_1 = true;
                                                        break;
                                                    }
                                                    case powerKPIMatrix.kpiIndicatorValueColumn.name: {
                                                        kpiIndicatorValue_1 = value;
                                                        kpiIndicatorValueFormat_1 = format;
                                                        isKPIIndicatorValueSpecified_1 = true;
                                                        break;
                                                    }
                                                    case powerKPIMatrix.secondComparisonValueColumn.name: {
                                                        secondComparisonValue_1 = value;
                                                        secondComparisonValueFormat_1 = format;
                                                        secondComparisonValueColumnName_1 = mappedColumnName;
                                                        isSecondComparisonValueSpecified_1 = true;
                                                        break;
                                                    }
                                                    case powerKPIMatrix.secondKPIIndicatorValueColumn.name: {
                                                        secondKPIIndicatorValue_1 = value;
                                                        secondKPIIndicatorValueFormat_1 = format;
                                                        isSecondKPIIndicatorValueSpecified_1 = true;
                                                        break;
                                                    }
                                                }
                                            }
                                        });
                                        _this.applyDataToCurrentSeries({
                                            series: series,
                                            dataRepresentation: dataRepresentation,
                                            axisValue: axisValue,
                                            currentValue: currentValue,
                                            currentFormat: currentFormat,
                                            currentValueColumnName: currentValueColumnName,
                                            comparisonValue: comparisonValue_1,
                                            comparisonFormat: comparisonFormat_1,
                                            comparisonValueColumnName: comparisonValueColumnName_1,
                                            isComparisonValueSpecified: isComparisonValueSpecified_1,
                                            kpiIndicatorIndex: kpiIndicatorIndex_1,
                                            isKPIIndicatorIndexSpecified: isKPIIndicatorIndexSpecified_1,
                                            kpiIndicatorValue: kpiIndicatorValue_1,
                                            kpiIndicatorValueFormat: kpiIndicatorValueFormat_1,
                                            isKPIIndicatorValueSpecified: isKPIIndicatorValueSpecified_1,
                                            secondComparisonValue: secondComparisonValue_1,
                                            secondComparisonValueFormat: secondComparisonValueFormat_1,
                                            isSecondComparisonValueSpecified: isSecondComparisonValueSpecified_1,
                                            secondKPIIndicatorValue: secondKPIIndicatorValue_1,
                                            secondKPIIndicatorValueFormat: secondKPIIndicatorValueFormat_1,
                                            isSecondKPIIndicatorValueSpecified: isSecondKPIIndicatorValueSpecified_1,
                                            secondComparisonValueColumnName: secondComparisonValueColumnName_1,
                                        });
                                    }
                                });
                            }
                        }
                    };
                    ColumnBasedModelConverter.prototype.deepSearchSeries = function (seriesSet, levels) {
                        if (levels === void 0) { levels = []; }
                        var seriesName = levels[0];
                        if (seriesSet[seriesName]) {
                            return seriesSet[seriesName];
                        }
                        for (var seriesSetName in seriesSet) {
                            var currentSeries = seriesSet[seriesSetName];
                            if (currentSeries && currentSeries.childrenSet) {
                                var series = this.deepSearchSeries(currentSeries.childrenSet, levels);
                                if (series) {
                                    return series;
                                }
                            }
                        }
                        return null;
                    };
                    return ColumnBasedModelConverter;
                }(powerKPIMatrix.DataConverter));
                powerKPIMatrix.ColumnBasedModelConverter = ColumnBasedModelConverter;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var RowBasedModelConverter = /** @class */ (function (_super) {
                    __extends(RowBasedModelConverter, _super);
                    function RowBasedModelConverter() {
                        return _super !== null && _super.apply(this, arguments) || this;
                    }
                    RowBasedModelConverter.prototype.converterStep = function (dataRepresentation, columnValues, identities, identityQueryName, columnMapping, rows, rowIndex, settings, levels) {
                        var axisValue;
                        if (columnValues[powerKPIMatrix.dateColumn.name]) {
                            var dateColumnName = Object.keys(columnValues[powerKPIMatrix.dateColumn.name])[0];
                            axisValue =
                                dateColumnName
                                    && columnValues[powerKPIMatrix.dateColumn.name][dateColumnName]
                                    && columnValues[powerKPIMatrix.dateColumn.name][dateColumnName].value;
                        }
                        if (powerKPIMatrix.NumericValueUtils.isValueDefined(axisValue)) {
                            var seriesColumnName = columnValues[powerKPIMatrix.rowBasedMetricNameColumn.name]
                                && Object.keys(columnValues[powerKPIMatrix.rowBasedMetricNameColumn.name])[0];
                            var seriesName = seriesColumnName
                                && columnValues[powerKPIMatrix.rowBasedMetricNameColumn.name][seriesColumnName]
                                && columnValues[powerKPIMatrix.rowBasedMetricNameColumn.name][seriesColumnName].value
                                || undefined;
                            if (seriesName) {
                                var series = this.getSeriesByDisplayName(dataRepresentation.series, dataRepresentation.seriesArray, levels, seriesName, identities, rowIndex, identityQueryName, rows, settings, dataRepresentation.type);
                                var currentValue = void 0;
                                var currentFormat = void 0;
                                var comparisonValue = NaN;
                                var comparisonFormat = void 0;
                                var isComparisonValueSpecified = false;
                                var comparisonValueColumnName = void 0;
                                var kpiIndicatorIndex = NaN;
                                var isKPIIndicatorIndexSpecified = false;
                                var kpiIndicatorValue = NaN;
                                var kpiIndicatorValueFormat = void 0;
                                var isKPIIndicatorValueSpecified = false;
                                var secondComparisonValue = NaN;
                                var secondComparisonValueFormat = void 0;
                                var isSecondComparisonValueSpecified = false;
                                var secondComparisonValueColumnName = void 0;
                                var secondKPIIndicatorValue = NaN;
                                var secondKPIIndicatorValueFormat = void 0;
                                var isSecondKPIIndicatorValueSpecified = false;
                                for (var columnName in columnValues) {
                                    if (columnValues[columnName]) {
                                        var currentColumnName = Object.keys(columnValues[columnName])[0];
                                        var columnValue = columnValues[columnName][currentColumnName];
                                        var value = columnValue && columnValue.value;
                                        var format = columnValue && columnValue.format;
                                        switch (columnName) {
                                            case powerKPIMatrix.actualValueColumn.name: {
                                                currentValue = value;
                                                currentFormat = format;
                                                break;
                                            }
                                            case powerKPIMatrix.comparisonValueColumn.name: {
                                                comparisonValue = value;
                                                comparisonFormat = format;
                                                comparisonValueColumnName = currentColumnName;
                                                isComparisonValueSpecified = true;
                                                break;
                                            }
                                            case powerKPIMatrix.kpiIndicatorIndexColumn.name: {
                                                kpiIndicatorIndex = value;
                                                isKPIIndicatorIndexSpecified = true;
                                                break;
                                            }
                                            case powerKPIMatrix.kpiIndicatorValueColumn.name: {
                                                kpiIndicatorValue = value;
                                                kpiIndicatorValueFormat = format;
                                                isKPIIndicatorValueSpecified = true;
                                                break;
                                            }
                                            case powerKPIMatrix.secondComparisonValueColumn.name: {
                                                secondComparisonValue = value;
                                                secondComparisonValueFormat = format;
                                                secondComparisonValueColumnName = currentColumnName;
                                                isSecondComparisonValueSpecified = true;
                                                break;
                                            }
                                            case powerKPIMatrix.secondKPIIndicatorValueColumn.name: {
                                                secondKPIIndicatorValue = value;
                                                secondKPIIndicatorValueFormat = format;
                                                isSecondKPIIndicatorValueSpecified = true;
                                                break;
                                            }
                                        }
                                    }
                                }
                                this.applyDataToCurrentSeries({
                                    series: series,
                                    dataRepresentation: dataRepresentation,
                                    axisValue: axisValue,
                                    currentValue: currentValue,
                                    currentFormat: currentFormat,
                                    currentValueColumnName: series.name,
                                    comparisonValue: comparisonValue,
                                    comparisonFormat: comparisonFormat,
                                    isComparisonValueSpecified: isComparisonValueSpecified,
                                    comparisonValueColumnName: comparisonValueColumnName,
                                    kpiIndicatorIndex: kpiIndicatorIndex,
                                    isKPIIndicatorIndexSpecified: isKPIIndicatorIndexSpecified,
                                    kpiIndicatorValue: kpiIndicatorValue,
                                    kpiIndicatorValueFormat: kpiIndicatorValueFormat,
                                    isKPIIndicatorValueSpecified: isKPIIndicatorValueSpecified,
                                    secondComparisonValue: secondComparisonValue,
                                    secondComparisonValueFormat: secondComparisonValueFormat,
                                    isSecondComparisonValueSpecified: isSecondComparisonValueSpecified,
                                    secondKPIIndicatorValue: secondKPIIndicatorValue,
                                    secondKPIIndicatorValueFormat: secondKPIIndicatorValueFormat,
                                    isSecondKPIIndicatorValueSpecified: isSecondKPIIndicatorValueSpecified,
                                    secondComparisonValueColumnName: secondComparisonValueColumnName,
                                });
                            }
                        }
                    };
                    RowBasedModelConverter.prototype.deepSearchSeries = function (seriesSet, levels) {
                        if (levels === void 0) { levels = []; }
                        var restLevels = levels.slice(); // Copies an array in order not to modify the original one
                        var currentLevel = restLevels.shift();
                        var series = seriesSet && seriesSet[currentLevel];
                        if (!series) {
                            return null;
                        }
                        if (!restLevels.length) {
                            return series;
                        }
                        return this.deepSearchSeries(series.childrenSet, restLevels);
                    };
                    return RowBasedModelConverter;
                }(powerKPIMatrix.DataConverter));
                powerKPIMatrix.RowBasedModelConverter = RowBasedModelConverter;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var DataDirector = /** @class */ (function () {
                    function DataDirector(dataColumn, rowBasedModelConverter, columnBasedModelConverter) {
                        this.dataColumn = dataColumn;
                        this.rowBasedModelConverter = rowBasedModelConverter;
                        this.columnBasedModelConverter = columnBasedModelConverter;
                    }
                    DataDirector.prototype.convert = function (options) {
                        var converter = this.getConverter(options
                            && options.dataView
                            && options.dataView.table
                            && options.dataView.table.columns
                            || []);
                        return converter && converter.convert(options);
                    };
                    DataDirector.prototype.getConverter = function (columns) {
                        if (columns === void 0) { columns = []; }
                        for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {
                            var column = columns_2[_i];
                            if (column.roles && column.roles[this.dataColumn.name]) {
                                return this.rowBasedModelConverter;
                            }
                        }
                        return this.columnBasedModelConverter;
                    };
                    return DataDirector;
                }());
                powerKPIMatrix.DataDirector = DataDirector;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var HyperlinkAdapter = /** @class */ (function () {
                    function HyperlinkAdapter() {
                    }
                    Object.defineProperty(HyperlinkAdapter.prototype, "host", {
                        set: function (host) {
                            this.hostServices = host;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    HyperlinkAdapter.prototype.open = function (hyperlink) {
                        if (!hyperlink) {
                            return;
                        }
                        if (this.hostServices && this.hostServices.launchUrl) {
                            this.hostServices.launchUrl(hyperlink);
                        }
                        else {
                            window.open(hyperlink, "_blank");
                        }
                    };
                    return HyperlinkAdapter;
                }());
                powerKPIMatrix.HyperlinkAdapter = HyperlinkAdapter;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var State = /** @class */ (function () {
                    function State() {
                    }
                    State.prototype.save = function () {
                        return this.state;
                    };
                    State.prototype.parse = function (state) {
                        this.state = state || {};
                    };
                    return State;
                }());
                powerKPIMatrix.State = State;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ColumnMappingState = /** @class */ (function (_super) {
                    __extends(ColumnMappingState, _super);
                    function ColumnMappingState() {
                        var _this = _super.call(this) || this;
                        _this.state = {};
                        return _this;
                    }
                    ColumnMappingState.prototype.setRow = function (rowName) {
                        this.state[rowName] = this.state[rowName]
                            ? this.state[rowName]
                            : {};
                        return this;
                    };
                    ColumnMappingState.prototype.isCurrentRowSet = function () {
                        return this.currentRowName !== undefined
                            && this.currentRowName !== null;
                    };
                    ColumnMappingState.prototype.setCurrentRowName = function (rowName) {
                        this.currentRowName = rowName;
                        return this;
                    };
                    ColumnMappingState.prototype.setColumn = function (columnName, displayName) {
                        this.state[this.currentRowName][columnName] = displayName || undefined;
                        return this;
                    };
                    ColumnMappingState.prototype.getSelectedValueByColumnName = function (columnName) {
                        if (!this.currentRowName || !this.state[this.currentRowName]) {
                            return null;
                        }
                        return this.state[this.currentRowName][columnName] || null;
                    };
                    ColumnMappingState.prototype.getColumnMapping = function () {
                        return this.state;
                    };
                    ColumnMappingState.prototype.applyDefaultRows = function (rowNames) {
                        var _this = this;
                        (rowNames || []).forEach(function (rowName) {
                            _this.setRow(rowName);
                        });
                        return this;
                    };
                    return ColumnMappingState;
                }(powerKPIMatrix.State));
                powerKPIMatrix.ColumnMappingState = ColumnMappingState;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var TableInternalState = /** @class */ (function (_super) {
                    __extends(TableInternalState, _super);
                    function TableInternalState() {
                        var _this = _super.call(this) || this;
                        _this.state = { rowSet: {} };
                        return _this;
                    }
                    TableInternalState.prototype.set = function (state) {
                        this.state = state || {
                            rowSet: {}
                        };
                    };
                    TableInternalState.prototype.getRowStateSet = function () {
                        return this.state.rowSet || {};
                    };
                    return TableInternalState;
                }(powerKPIMatrix.State));
                powerKPIMatrix.TableInternalState = TableInternalState;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var StateService = /** @class */ (function () {
                    function StateService(states, onSave) {
                        this.states = states;
                        this.onSave = onSave;
                    }
                    StateService.prototype.save = function (isRenderRequired) {
                        if (isRenderRequired === void 0) { isRenderRequired = false; }
                        var obj = {};
                        for (var stateName in this.states) {
                            var state = this.states[stateName];
                            obj[stateName] = state.save();
                        }
                        this.onSave(JSON.stringify(obj), isRenderRequired);
                    };
                    StateService.prototype.parse = function (value) {
                        var obj;
                        try {
                            obj = JSON.parse(value);
                        }
                        catch (_) {
                            obj = {};
                        }
                        for (var stateName in this.states) {
                            this.states[stateName].parse(obj && obj[stateName]);
                        }
                    };
                    return StateService;
                }());
                powerKPIMatrix.StateService = StateService;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var BaseComponent = /** @class */ (function () {
                    function BaseComponent() {
                        this.isComponentShown = true;
                        this.italicClassName = "italicStyle";
                        this.boldClassName = "boldStyle";
                        this.horizontalAlignmentClassNamePrefix = "horizontalAlignment";
                        this.verticalAlignmentClassNamePrefix = "verticalAlignment";
                        this.wrapTextClassNamePrefix = "text";
                    }
                    BaseComponent.prototype.clear = function () {
                        if (!this.element) {
                            return;
                        }
                        this.element
                            .selectAll("*")
                            .remove();
                    };
                    BaseComponent.prototype.destroy = function () {
                        if (this.element) {
                            this.element.remove();
                        }
                        this.element = null;
                    };
                    BaseComponent.prototype.hide = function () {
                        if (!this.element || !this.isComponentShown) {
                            return;
                        }
                        this.element.style("display", "none");
                        this.isComponentShown = false;
                    };
                    BaseComponent.prototype.show = function () {
                        if (!this.element || this.isComponentShown) {
                            return;
                        }
                        this.element.style("display", null);
                        this.isComponentShown = true;
                    };
                    BaseComponent.prototype.toggle = function () {
                        if (this.isComponentShown) {
                            this.hide();
                        }
                        else {
                            this.show();
                        }
                    };
                    Object.defineProperty(BaseComponent.prototype, "isShown", {
                        get: function () {
                            return this.isComponentShown;
                        },
                        enumerable: true,
                        configurable: true
                    });
                    BaseComponent.prototype.updateOrder = function (order) {
                        this.updateElementOrder(this.element, order);
                    };
                    BaseComponent.prototype.updateElementOrder = function (element, order) {
                        if (!element) {
                            return;
                        }
                        var browserSpecificOrder = order + 1;
                        element.style({
                            "-webkit-box-ordinal-group": browserSpecificOrder,
                            "-ms-flex-order": order,
                            order: order,
                        });
                    };
                    BaseComponent.prototype.updateAlignment = function (element, horizontalAlignment, verticalAlignment) {
                        if (!element) {
                            return;
                        }
                        element
                            .classed(this.horizontalAlignmentClassNamePrefix + "_left", horizontalAlignment === powerKPIMatrix.HorizontalTextAlignment.left)
                            .classed(this.horizontalAlignmentClassNamePrefix + "_center", horizontalAlignment === powerKPIMatrix.HorizontalTextAlignment.center)
                            .classed(this.horizontalAlignmentClassNamePrefix + "_right", horizontalAlignment === powerKPIMatrix.HorizontalTextAlignment.right)
                            .classed(this.verticalAlignmentClassNamePrefix + "_top", verticalAlignment === powerKPIMatrix.VerticalTextAlignment.top)
                            .classed(this.verticalAlignmentClassNamePrefix + "_center", verticalAlignment === powerKPIMatrix.VerticalTextAlignment.center)
                            .classed(this.verticalAlignmentClassNamePrefix + "_bottom", verticalAlignment === powerKPIMatrix.VerticalTextAlignment.bottom);
                    };
                    BaseComponent.prototype.updateTextWrapping = function (element, wrapText) {
                        if (!element) {
                            return;
                        }
                        element
                            .classed(this.wrapTextClassNamePrefix + "NoWrap", wrapText === powerKPIMatrix.WrapText.NoWrap)
                            .classed(this.wrapTextClassNamePrefix + "Wrap", wrapText === powerKPIMatrix.WrapText.Wrap)
                            .classed(this.wrapTextClassNamePrefix + "BreakWord ", wrapText === powerKPIMatrix.WrapText.BreakWord);
                    };
                    BaseComponent.prototype.updateBackgroundColor = function (element, color) {
                        if (!element) {
                            return;
                        }
                        element.style("background-color", color || null);
                    };
                    return BaseComponent;
                }());
                powerKPIMatrix.BaseComponent = BaseComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var BaseContainerComponent = /** @class */ (function (_super) {
                    __extends(BaseContainerComponent, _super);
                    function BaseContainerComponent() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.components = [];
                        return _this;
                    }
                    BaseContainerComponent.prototype.render = function (options) {
                        this.components.forEach(function (component) {
                            component.render(options);
                        });
                    };
                    BaseContainerComponent.prototype.clear = function () {
                        this.components.forEach(function (component) {
                            component.clear();
                        });
                        _super.prototype.clear.call(this);
                    };
                    BaseContainerComponent.prototype.destroy = function () {
                        this.components.forEach(function (component) {
                            component.destroy();
                        });
                        _super.prototype.destroy.call(this);
                    };
                    return BaseContainerComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.BaseContainerComponent = BaseContainerComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var ModalWindowService = /** @class */ (function (_super) {
                    __extends(ModalWindowService, _super);
                    function ModalWindowService(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "modalWindow_rootElement";
                        _this.innerElementClassName = "modalWindow_rootElement-innerElement";
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true)
                            .on("click", _this.toggle.bind(_this));
                        _this.innerElement = _this.element
                            .append("div")
                            .classed(_this.innerElementClassName, true)
                            .on("click", function () {
                            d3.event.preventDefault();
                            d3.event.stopPropagation();
                            d3.event.stopImmediatePropagation();
                        });
                        var componentOptions = {
                            element: _this.innerElement,
                        };
                        _this.hide();
                        _this.components = options.componentCreators.map(function (componentCreator) {
                            return componentCreator(componentOptions);
                        });
                        return _this;
                    }
                    ModalWindowService.prototype.render = function (options) {
                        var shouldBeShown = options
                            && options.settings
                            && options.settings.popOutGeneralSettings
                            && options.settings.popOutGeneralSettings.show;
                        if (!shouldBeShown) {
                            if (this.isShown) {
                                this.hide();
                            }
                            return;
                        }
                        if (!this.isShown) {
                            this.show();
                        }
                        this.renderComponent(options);
                    };
                    ModalWindowService.prototype.renderComponent = function (options) {
                        var popOutGeneralSettings = options.settings.popOutGeneralSettings;
                        var viewport = this.getInnerViewport(options.viewport, popOutGeneralSettings.getViewportSizeInPercent());
                        var extendedOptions = __assign({}, options, { viewport: viewport });
                        this.updateElementSize(this.element, options.viewport);
                        this.updateElementSize(this.innerElement, viewport);
                        this.updateBackgroundColor(this.innerElement, popOutGeneralSettings.backgroundColor);
                        this.renderOptions = extendedOptions;
                        _super.prototype.render.call(this, extendedOptions);
                    };
                    ModalWindowService.prototype.getInnerViewport = function (baseViewport, innerElementSize) {
                        return {
                            width: baseViewport.width * innerElementSize,
                            height: baseViewport.height * innerElementSize,
                        };
                    };
                    ModalWindowService.prototype.updateElementSize = function (element, viewport) {
                        if (!element) {
                            return;
                        }
                        element.style({
                            width: PixelConverter.toString(viewport.width),
                            height: PixelConverter.toString(viewport.height),
                        });
                    };
                    ModalWindowService.prototype.getRenderOptions = function () {
                        return this.renderOptions;
                    };
                    ModalWindowService.prototype.destroy = function () {
                        this.renderOptions = null;
                        this.innerElement = null;
                        _super.prototype.destroy.call(this);
                    };
                    return ModalWindowService;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.ModalWindowService = ModalWindowService;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var ColumnMappingHeaderComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingHeaderComponent, _super);
                    function ColumnMappingHeaderComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingHeaderComponent";
                        _this.textHeaderSelector = createClassAndSelector("columnMappingHeaderComponent_headerElement");
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        return _this;
                    }
                    ColumnMappingHeaderComponent.prototype.render = function (options) {
                        this.renderHeaderElements([
                            { value: "Column Mapping" },
                        ]);
                    };
                    ColumnMappingHeaderComponent.prototype.renderHeaderElements = function (elements) {
                        var textSelection = this.element
                            .selectAll(this.textHeaderSelector.selector)
                            .data(elements);
                        textSelection
                            .enter()
                            .append("div")
                            .classed(this.textHeaderSelector.class, true);
                        textSelection
                            .text(function (element) { return element.value; })
                            .on("click", function (element) {
                            if (element.clickHandler) {
                                element.clickHandler();
                            }
                        });
                        textSelection
                            .exit()
                            .remove();
                    };
                    return ColumnMappingHeaderComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.ColumnMappingHeaderComponent = ColumnMappingHeaderComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var ColumnMappingDropDownComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingDropDownComponent, _super);
                    function ColumnMappingDropDownComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingDropDownComponent";
                        _this.containerClassName = "columnMappingDropDownComponent_container";
                        _this.captionClassName = "columnMappingDropDownComponent_caption";
                        _this.captionTextSelector = createClassAndSelector("columnMappingDropDownComponent_captionText");
                        _this.captionIndicatorSelector = createClassAndSelector("columnMappingDropDownComponent_captionIndicator");
                        _this.helpMessageContainerClassName = "columnMappingDropDownComponent_captionIndicatorHelpMessageContainer";
                        _this.pbiGlyphIcon = "glyphicon";
                        _this.pbiGlyphInfoClassName = " pbi-glyph-info";
                        _this.selectBoxSelector = createClassAndSelector("columnMappingDropDownComponent_select");
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true)
                            .append("div")
                            .classed(_this.containerClassName, true);
                        _this.captionElement = _this.element
                            .append("div")
                            .classed(_this.captionClassName, true);
                        _this.helpMessageElement = _this.element
                            .append("div")
                            .classed(_this.helpMessageContainerClassName, true);
                        return _this;
                    }
                    ColumnMappingDropDownComponent.prototype.render = function (options) {
                        this.name = options.name;
                        this.renderCaptionText(this.captionElement, this.name);
                        this.renderCaptionIndicator(this.captionElement, options.helpMessage);
                        this.renderSelectBox(options);
                    };
                    ColumnMappingDropDownComponent.prototype.renderCaptionText = function (selection, text) {
                        var captionTextSelection = selection
                            .selectAll(this.captionTextSelector.selector)
                            .data([text]);
                        captionTextSelection
                            .enter()
                            .append("div")
                            .classed(this.captionTextSelector.class, true);
                        captionTextSelection
                            .text(function (text) { return text; })
                            .attr("title", function (text) { return text; });
                        captionTextSelection
                            .exit()
                            .remove();
                    };
                    ColumnMappingDropDownComponent.prototype.renderCaptionIndicator = function (selection, helpMessage) {
                        var _this = this;
                        var captionIndicatorSelection = selection
                            .selectAll(this.captionIndicatorSelector.selector)
                            .data(helpMessage ? [helpMessage] : []);
                        captionIndicatorSelection
                            .enter()
                            .append("div")
                            .classed(this.captionIndicatorSelector.class, true)
                            .classed(this.pbiGlyphIcon, true)
                            .classed(this.pbiGlyphInfoClassName, true)
                            .on("mouseover", function (message) {
                            _this.showHelpMessage(message, d3.event.x, d3.event.y);
                        })
                            .on("mouseleave", this.hideHelpMessage.bind(this));
                        captionIndicatorSelection
                            .exit()
                            .remove();
                    };
                    ColumnMappingDropDownComponent.prototype.renderSelectBox = function (options) {
                        var selectBoxSelection = this.element
                            .selectAll(this.selectBoxSelector.selector)
                            .data([options]);
                        selectBoxSelection
                            .enter()
                            .append("select")
                            .classed(this.selectBoxSelector.class, true);
                        selectBoxSelection
                            .on("change", function () {
                            var selectElement = d3.event.target;
                            options.onChange(selectElement.value);
                        });
                        var optionSelection = selectBoxSelection
                            .selectAll("option")
                            .data(function (options) { return options.values.sort(); });
                        optionSelection
                            .enter()
                            .append("option");
                        optionSelection
                            .attr("value", function (value) { return value; })
                            .text(function (value) { return value; });
                        optionSelection
                            .exit()
                            .remove();
                        selectBoxSelection
                            .exit()
                            .remove();
                        if (options.selectedValue !== undefined) {
                            selectBoxSelection.node().value = options.selectedValue;
                        }
                    };
                    ColumnMappingDropDownComponent.prototype.showHelpMessage = function (helpMessage, x, y) {
                        var element = this.element.node();
                        var elementRect = element.getBoundingClientRect();
                        var left = x - elementRect.left;
                        this.helpMessageElement
                            .text(helpMessage)
                            .style({
                            left: PixelConverter.toString(left),
                            "display": "block",
                        });
                    };
                    ColumnMappingDropDownComponent.prototype.hideHelpMessage = function () {
                        this.helpMessageElement.style("display", null);
                    };
                    ColumnMappingDropDownComponent.prototype.getValue = function () {
                        var selectBoxSelection = this.element
                            .select(this.selectBoxSelector.selector);
                        return selectBoxSelection
                            .node()
                            .value;
                    };
                    ColumnMappingDropDownComponent.prototype.getState = function () {
                        return _a = {},
                            _a[this.name] = this.getValue(),
                            _a;
                        var _a;
                    };
                    ColumnMappingDropDownComponent.prototype.clear = function () {
                        this.captionElement
                            .selectAll("*")
                            .remove();
                        _super.prototype.clear.call(this);
                    };
                    ColumnMappingDropDownComponent.prototype.destroy = function () {
                        this.captionElement.remove();
                        this.captionElement = null;
                        this.helpMessageElement.remove();
                        this.helpMessageElement = null;
                        _super.prototype.destroy.call(this);
                    };
                    return ColumnMappingDropDownComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.ColumnMappingDropDownComponent = ColumnMappingDropDownComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var ColumnMappingGroupComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingGroupComponent, _super);
                    function ColumnMappingGroupComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingGroupComponent";
                        _this.titleContainerSelector = createClassAndSelector("columnMappingGroupComponent_titleContainer");
                        _this.titleSelector = createClassAndSelector("columnMappingGroupComponent_title");
                        _this.components = [];
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        return _this;
                    }
                    ColumnMappingGroupComponent.prototype.render = function (options) {
                        this.renderTitle(options.title);
                        this.renderComponents(options);
                    };
                    ColumnMappingGroupComponent.prototype.renderComponents = function (options) {
                        this.components
                            .splice(options.groups.length)
                            .forEach(function (component) {
                            component.clear();
                            component.destroy();
                        });
                        if (this.components.length < options.groups.length) {
                            for (var index = this.components.length; index < options.groups.length; index++) {
                                this.components.push(new powerKPIMatrix.ColumnMappingDropDownComponent({ element: this.element }));
                            }
                        }
                        this.components.forEach(function (component, index) {
                            component.render(options.groups[index]);
                        });
                    };
                    ColumnMappingGroupComponent.prototype.renderTitle = function (title) {
                        var titleContainerSelection = this.element
                            .selectAll(this.titleContainerSelector.selector)
                            .data(title ? [title] : []);
                        titleContainerSelection
                            .enter()
                            .append("div")
                            .classed(this.titleContainerSelector.class, true);
                        var titleSelection = titleContainerSelection
                            .selectAll(this.titleSelector.selector)
                            .data(function (data) { return [data]; });
                        titleSelection
                            .enter()
                            .append("div")
                            .classed(this.titleSelector.class, true);
                        titleSelection
                            .text(function (title) { return title; })
                            .attr("title", function (title) { return title; });
                        titleSelection
                            .exit()
                            .remove();
                        titleContainerSelection
                            .exit()
                            .remove();
                    };
                    ColumnMappingGroupComponent.prototype.getState = function () {
                        var state = {};
                        if (this.components) {
                            this.components.forEach(function (component) {
                                var componentState = component.getState();
                                Object.keys(componentState).forEach(function (name) {
                                    state[name] = componentState[name];
                                });
                            });
                        }
                        return state;
                    };
                    return ColumnMappingGroupComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.ColumnMappingGroupComponent = ColumnMappingGroupComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ColumnMappingColumnSelectorComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingColumnSelectorComponent, _super);
                    function ColumnMappingColumnSelectorComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingColumnSelectorComponent";
                        _this.title = "";
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        _this.title = options.title;
                        _this.columns = options.columns;
                        _this.onChange = options.onChange;
                        _this.getSelectedValueByColumnName = options.getSelectedValueByColumnName;
                        _this.components = [
                            new powerKPIMatrix.ColumnMappingGroupComponent({ element: _this.element }),
                        ];
                        return _this;
                    }
                    ColumnMappingColumnSelectorComponent.prototype.render = function (options) {
                        _super.prototype.render.call(this, this.getColumnMappingGroupRenderOptions(options));
                    };
                    ColumnMappingColumnSelectorComponent.prototype.getColumnMappingGroupRenderOptions = function (options) {
                        return {
                            title: this.title,
                            groups: this.getDropDownRenderOptions(options)
                        };
                    };
                    ColumnMappingColumnSelectorComponent.prototype.getDropDownRenderOptions = function (options) {
                        var _this = this;
                        var columnSet = options.columnSet;
                        return this.columns.map(function (column) {
                            var emptyValues = column.emptyValues || [];
                            var columnValues = columnSet[column.name] || [];
                            var values = emptyValues.concat(columnValues);
                            var selectedValue = _this.getSelectedValueByColumnName(column.name, values) || emptyValues[0];
                            return {
                                values: values,
                                selectedValue: selectedValue,
                                helpMessage: column.helpMessage,
                                name: column.displayName,
                                onChange: function (value) {
                                    var currentValue = emptyValues.indexOf(value) >= 0
                                        ? undefined
                                        : value;
                                    _this.onChange(column.name, currentValue, options);
                                }
                            };
                        });
                    };
                    ColumnMappingColumnSelectorComponent.prototype.getState = function () {
                        return this.components[0].getState();
                    };
                    return ColumnMappingColumnSelectorComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.ColumnMappingColumnSelectorComponent = ColumnMappingColumnSelectorComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var ColumnMappingButtonComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingButtonComponent, _super);
                    function ColumnMappingButtonComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingButtonComponent";
                        _this.buttonSelector = createClassAndSelector("columnMappingButtonComponent_button");
                        _this.onClick = options.onClick;
                        _this.buttonText = options.buttonText;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        return _this;
                    }
                    ColumnMappingButtonComponent.prototype.render = function (options) {
                        var _this = this;
                        var buttonSelection = this.element
                            .selectAll(this.buttonSelector.selector)
                            .data([this.buttonText]);
                        buttonSelection
                            .enter()
                            .append("button")
                            .classed(this.buttonSelector.class, true);
                        buttonSelection
                            .text(function (value) { return [value]; })
                            .on("click", function () {
                            _this.onClick(options);
                        });
                        buttonSelection
                            .exit()
                            .remove();
                    };
                    return ColumnMappingButtonComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.ColumnMappingButtonComponent = ColumnMappingButtonComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var ColumnMappingFooterComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingFooterComponent, _super);
                    function ColumnMappingFooterComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingFooterComponent";
                        _this.containerClassName = "columnMappingFooterComponent_container";
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true)
                            .append("div")
                            .classed(_this.containerClassName, true);
                        _this.components = options.buttons.map(function (button) {
                            return new powerKPIMatrix.ColumnMappingButtonComponent({
                                element: _this.element,
                                onClick: button.onClick,
                                buttonText: button.buttonText
                            });
                        });
                        return _this;
                    }
                    return ColumnMappingFooterComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.ColumnMappingFooterComponent = ColumnMappingFooterComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var ColumnMappingComponent = /** @class */ (function (_super) {
                    __extends(ColumnMappingComponent, _super);
                    function ColumnMappingComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "columnMappingComponent";
                        _this.rootElementSelector = createClassAndSelector("columnMappingComponent_root");
                        _this.scrollableElementSelector = createClassAndSelector("columnMappingComponent_scrollable");
                        _this.stateService = options.stateService;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        _this.rootElement = _this.element
                            .append("div")
                            .classed(_this.rootElementSelector.class, true);
                        _this.scrollableElement = _this.rootElement
                            .append("div")
                            .classed(_this.scrollableElementSelector.class, true);
                        var header = new powerKPIMatrix.ColumnMappingHeaderComponent({
                            element: _this.rootElement,
                        });
                        var row = new powerKPIMatrix.ColumnMappingColumnSelectorComponent({
                            element: _this.scrollableElement,
                            title: "Select the Row to map to additional columns from your data model",
                            columns: [powerKPIMatrix.actualValueColumn],
                            onChange: function (columnName, displayName, options) {
                                if (!_this.stateService.states.columnMapping) {
                                    return;
                                }
                                _this.stateService.states.columnMapping
                                    .setRow(displayName)
                                    .setCurrentRowName(displayName);
                                _this.render(options);
                            },
                            getSelectedValueByColumnName: function (columnName, values) {
                                if (!_this.stateService.states.columnMapping.isCurrentRowSet()) {
                                    var defaultValue = values[0];
                                    _this.stateService.states.columnMapping.setCurrentRowName(defaultValue);
                                    return defaultValue;
                                }
                                return undefined;
                            }
                        });
                        var columns = new powerKPIMatrix.ColumnMappingColumnSelectorComponent({
                            element: _this.scrollableElement,
                            title: "Link to the associated columns from your data model",
                            columns: [
                                powerKPIMatrix.comparisonValueColumn,
                                powerKPIMatrix.kpiIndicatorIndexColumn,
                                powerKPIMatrix.kpiIndicatorValueColumn,
                                powerKPIMatrix.secondComparisonValueColumn,
                                powerKPIMatrix.secondKPIIndicatorValueColumn,
                            ],
                            onChange: function (columnName, displayName) {
                                if (!_this.stateService.states.columnMapping) {
                                    return;
                                }
                                var rowName = row.getState()[powerKPIMatrix.actualValueColumn.displayName];
                                _this.stateService.states.columnMapping
                                    .setRow(rowName)
                                    .setCurrentRowName(rowName)
                                    .setColumn(columnName, displayName);
                            },
                            getSelectedValueByColumnName: function (columnName) {
                                return _this.stateService.states.columnMapping.getSelectedValueByColumnName(columnName);
                            }
                        });
                        var footer = new powerKPIMatrix.ColumnMappingFooterComponent({
                            element: _this.rootElement,
                            buttons: [
                                {
                                    buttonText: "Apply",
                                    onClick: _this.onApply.bind(_this)
                                }
                            ]
                        });
                        _this.components = [
                            header,
                            row,
                            columns,
                            footer
                        ];
                        return _this;
                    }
                    ColumnMappingComponent.prototype.render = function (options) {
                        if (options.isAdvancedEditModeTurnedOn) {
                            this.show();
                        }
                        else {
                            this.hide();
                        }
                        _super.prototype.render.call(this, options);
                    };
                    ColumnMappingComponent.prototype.destroy = function () {
                        this.stateService = null;
                        _super.prototype.destroy.call(this);
                    };
                    ColumnMappingComponent.prototype.onApply = function (options) {
                        this.stateService.save(true);
                    };
                    return ColumnMappingComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.ColumnMappingComponent = ColumnMappingComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var CellComponent = /** @class */ (function (_super) {
                    __extends(CellComponent, _super);
                    function CellComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "cellComponent";
                        _this.minWidth = 20;
                        _this.width = 120;
                        _this.minHeight = 20;
                        _this.height = 55;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        return _this;
                    }
                    CellComponent.prototype.updateSize = function (width, height) {
                        if (!isNaN(width) && isFinite(width)) {
                            this.width = Math.max(this.minWidth, width);
                        }
                        if (!isNaN(height) && isFinite(height)) {
                            this.height = Math.max(this.minHeight, height);
                        }
                        this.updateSizeOfElement(this.width, this.height);
                    };
                    CellComponent.prototype.updateSizeOfElement = function (width, height) {
                        if (!this.element) {
                            return;
                        }
                        var styleObject = {};
                        styleObject["width"]
                            = styleObject["min-width"]
                                = styleObject["max-width"]
                                    = width !== undefined && width !== null
                                        ? PixelConverter.toString(width)
                                        : null;
                        styleObject["height"]
                            = styleObject["min-height"]
                                = styleObject["max-height"]
                                    = height !== undefined && height !== null
                                        ? PixelConverter.toString(height)
                                        : null;
                        this.element.style(styleObject);
                    };
                    CellComponent.prototype.getState = function () {
                        return {
                            width: this.width,
                            height: this.height,
                        };
                    };
                    return CellComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.CellComponent = CellComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var CellContainerComponent = /** @class */ (function (_super) {
                    __extends(CellContainerComponent, _super);
                    function CellContainerComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.componentClassName = "cellContainerComponent";
                        _this.element.classed(_this.componentClassName, true);
                        _this.components = [];
                        return _this;
                    }
                    return CellContainerComponent;
                }(powerKPIMatrix.CellComponent));
                powerKPIMatrix.CellContainerComponent = CellContainerComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var DraggableComponent = /** @class */ (function (_super) {
                    __extends(DraggableComponent, _super);
                    function DraggableComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "draggableComponent";
                        _this.width = options.width || 0;
                        _this.height = options.height || 0;
                        var drag = d3.behavior.drag()
                            .origin(function () {
                            var point = options.onDragStart
                                ? options.onDragStart()
                                : { x: 0, y: 0 };
                            var scale = options.scaleService.getScale();
                            point.x *= scale.width;
                            point.y *= scale.height;
                            return point;
                        })
                            .on("dragstart", function () {
                            _this.stopEventPropagation(d3.event.sourceEvent); // We should stop propagation of this event in order to stop moving entire custom visual
                        })
                            .on("drag", options.onDrag
                            ? function () {
                                var event = d3.event;
                                var scale = options.scaleService.getScale();
                                options.onDrag(event.x / scale.width, event.y / scale.height);
                            }
                            : null)
                            .on("dragend", options.onSaveState || null);
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true)
                            .on("pointerdown", function () {
                            _this.stopEventPropagation(d3.event);
                        })
                            .on("click", function () {
                            _this.stopEventPropagation(d3.event);
                        })
                            .call(drag);
                        _this.updateSize(options.width, options.height);
                        return _this;
                    }
                    DraggableComponent.prototype.stopEventPropagation = function (event) {
                        if (!event || !event.stopPropagation) {
                            return;
                        }
                        event.stopPropagation();
                    };
                    DraggableComponent.prototype.getState = function () {
                        return {
                            width: this.width,
                            height: this.height,
                        };
                    };
                    DraggableComponent.prototype.updateSize = function (width, height, shouldKeepCurrentSize) {
                        if (shouldKeepCurrentSize === void 0) { shouldKeepCurrentSize = false; }
                        if (!this.element) {
                            return;
                        }
                        var widthInPx = null;
                        var heightInPx = null;
                        if (!isNaN(width) && isFinite(width)) {
                            this.width = width;
                            widthInPx = PixelConverter.toString(width);
                        }
                        else if (shouldKeepCurrentSize) {
                            widthInPx = PixelConverter.toString(this.width);
                        }
                        if (!isNaN(height) && isFinite(height)) {
                            this.height = height;
                            heightInPx = PixelConverter.toString(height);
                        }
                        else if (shouldKeepCurrentSize) {
                            heightInPx = PixelConverter.toString(this.height);
                        }
                        this.element.style({
                            "width": widthInPx,
                            "min-width": widthInPx,
                            "max-width": widthInPx,
                            "height": heightInPx,
                            "min-height": heightInPx,
                            "max-height": heightInPx,
                        });
                    };
                    DraggableComponent.prototype.updateColor = function (color) {
                        if (!this.element) {
                            return;
                        }
                        this.element.style("background-color", color || null);
                    };
                    DraggableComponent.prototype.render = function (options) { };
                    return DraggableComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.DraggableComponent = DraggableComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var TextCellComponent = /** @class */ (function (_super) {
                    __extends(TextCellComponent, _super);
                    function TextCellComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.componentClassName = "textCellComponent";
                        _this.textSelector = createClassAndSelector("textCellComponent_text");
                        _this.textHyperlinkClassName = "textCellComponent_text_hyperlink";
                        _this.imageSelector = createClassAndSelector("textCellComponent_image");
                        _this.element.classed(_this.componentClassName, true);
                        _this.updateSize(_this.width, _this.height);
                        return _this;
                    }
                    TextCellComponent.prototype.render = function (options) {
                        var _a = options.fontSettings, alignment = _a.alignment, backgroundColor = _a.backgroundColor, verticalAlignment = _a.verticalAlignment, order = options.order;
                        this.updateOrder(order);
                        this.updateBackgroundColor(this.element, backgroundColor);
                        this.updateAlignment(this.element, alignment, verticalAlignment);
                        this.renderElements(options);
                    };
                    TextCellComponent.prototype.renderElements = function (options) {
                        this.applyFontSettings(options.fontSettings);
                        this.renderImage(options);
                        this.renderText(options);
                    };
                    TextCellComponent.prototype.applyFontSettings = function (fontSettings) {
                        this.element.style({
                            "font-size": fontSettings
                                ? PixelConverter.toString(PixelConverter.fromPointToPixel(fontSettings.textFontSize))
                                : null,
                            "font-family": fontSettings ? fontSettings.fontFamily : null,
                        });
                    };
                    TextCellComponent.prototype.renderImage = function (options) {
                        var image = options.image, hyperlink = options.hyperlink, fontSettings = options.fontSettings, hyperlinkAdapter = options.hyperlinkAdapter;
                        var isImageSpecified = !!image;
                        fontSettings.updateImageVisibility(isImageSpecified);
                        var imageSelection = this.element
                            .selectAll(this.imageSelector.selector)
                            .data(isImageSpecified && fontSettings.shouldShowImage
                            ? [image]
                            : []);
                        imageSelection
                            .enter()
                            .append("div")
                            .classed(this.imageSelector.class, true);
                        this.bindHyperlinkHandler(imageSelection, hyperlink, hyperlinkAdapter);
                        var width = fontSettings.imageIconWidth
                            ? PixelConverter.toString(fontSettings.imageIconWidth)
                            : null;
                        var height = fontSettings.imageIconWidth
                            ? PixelConverter.toString(fontSettings.imageIconHeight)
                            : null;
                        imageSelection
                            .style({
                            "background-image": "url(" + image + ")",
                            width: width,
                            "min-width": width,
                            height: height,
                            "min-height": height,
                        });
                        imageSelection
                            .exit()
                            .remove();
                    };
                    TextCellComponent.prototype.renderText = function (options) {
                        var image = options.image, value = options.value, hyperlink = options.hyperlink, fontSettings = options.fontSettings, hyperlinkAdapter = options.hyperlinkAdapter;
                        var isHyperlinkSpecified = !!hyperlink;
                        fontSettings.updateHyperlinkVisibility(isHyperlinkSpecified);
                        var textSelection = this.element
                            .selectAll(this.textSelector.selector)
                            .data(value !== undefined
                            && value !== null
                            && (fontSettings.shouldShowLabel || (!image && !fontSettings.shouldShowLabel))
                            ? [value]
                            : []);
                        textSelection
                            .enter()
                            .append("div")
                            .classed(this.textSelector.class, true);
                        this.bindHyperlinkHandler(textSelection, hyperlink, hyperlinkAdapter);
                        textSelection
                            .text(function (textValue) { return textValue; })
                            .style({
                            "color": fontSettings.getColor(isHyperlinkSpecified),
                            "text-decoration": fontSettings.isTextUnderlined(isHyperlinkSpecified)
                                ? "underline"
                                : null,
                        })
                            .classed(this.textHyperlinkClassName, isHyperlinkSpecified)
                            .classed(this.boldClassName, fontSettings && fontSettings.isBold)
                            .classed(this.italicClassName, fontSettings && fontSettings.isItalic);
                        this.updateTextWrapping(textSelection, fontSettings.wrapText);
                        textSelection
                            .exit()
                            .remove();
                    };
                    TextCellComponent.prototype.bindHyperlinkHandler = function (element, hyperlink, hyperlinkAdapter) {
                        if (!element) {
                            return;
                        }
                        element
                            .attr({
                            title: hyperlink || null
                        })
                            .on("click", !!hyperlink
                            ? this.openHyperlink.bind(this, hyperlinkAdapter, hyperlink)
                            : null);
                    };
                    TextCellComponent.prototype.openHyperlink = function (hyperlinkAdapter, hyperlink) {
                        if (hyperlinkAdapter) {
                            hyperlinkAdapter.open(hyperlink);
                        }
                        if (d3.event && d3.event.stopPropagation) {
                            d3.event.stopPropagation();
                        }
                    };
                    return TextCellComponent;
                }(powerKPIMatrix.CellComponent));
                powerKPIMatrix.TextCellComponent = TextCellComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var CollapserCellComponent = /** @class */ (function (_super) {
                    __extends(CollapserCellComponent, _super);
                    function CollapserCellComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.extraClassName = "collapserCellComponent";
                        _this.collapserSelector = createClassAndSelector("collapserCellComponent_collapserSign");
                        _this.glyphClassName = "powervisuals-glyph";
                        _this.chevronDownClassName = "chevron-down";
                        _this.chevronUpClassName = "chevron-up";
                        _this.element.classed(_this.extraClassName, true);
                        _this.onChangeHandler = options.onChangeHandler;
                        return _this;
                    }
                    CollapserCellComponent.prototype.render = function (options) {
                        var isShown = options.isShown;
                        _super.prototype.render.call(this, options);
                        this.renderCollapser(isShown);
                    };
                    CollapserCellComponent.prototype.renderCollapser = function (state) {
                        var _this = this;
                        var collapserSelection = this.element
                            .selectAll(this.collapserSelector.selector)
                            .data([state]);
                        collapserSelection
                            .enter()
                            .append("div")
                            .classed(this.collapserSelector.class, true)
                            .classed(this.glyphClassName, true)
                            .on("click", function (state) {
                            var newState = !state;
                            _this.renderCollapser(newState);
                            _this.onChangeHandler(newState);
                        });
                        collapserSelection
                            .classed(this.chevronDownClassName, !state)
                            .classed(this.chevronUpClassName, state);
                        collapserSelection
                            .exit()
                            .remove();
                    };
                    return CollapserCellComponent;
                }(powerKPIMatrix.TextCellComponent));
                powerKPIMatrix.CollapserCellComponent = CollapserCellComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var KPIIndicatorCellComponent = /** @class */ (function (_super) {
                    __extends(KPIIndicatorCellComponent, _super);
                    function KPIIndicatorCellComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.componentExtraClassName = "kpiIndicatorCellComponent";
                        _this.indicatorClassName = createClassAndSelector("kpiIndicatorCellComponent_indicator");
                        _this.glyphClassName = "powerKPIMatrix_glyphIcon";
                        _this.kpiIndicatorPositionLeftClassName = "kpiIndicatorPosition_left";
                        _this.kpiIndicatorPositionRightClassName = "kpiIndicatorPosition_right";
                        _this.kpiIndicatorRowDirectionClassName = "kpiIndicatorRowDirectionClassName";
                        _this.kpiIndicatorColumnDirectionClassName = "kpiIndicatorColumnDirectionClassName";
                        _this.kpiStatusHorizontalAlignmentCenterClassName = "kpiStatus_horizontalAlignment_center";
                        _this.element.classed(_this.componentExtraClassName, true);
                        _this.updateSize(_this.width, _this.height);
                        return _this;
                    }
                    KPIIndicatorCellComponent.prototype.render = function (options) {
                        var kpiIndicatorSettings = options
                            .kpiIndicatorSettings
                            .getCurrentKPI(options.kpiIndicatorIndex);
                        options.fontSettings.kpiColor = kpiIndicatorSettings && kpiIndicatorSettings.color;
                        this.updateElementsDirection(options.kpiIndicatorSettings.shouldWrap);
                        this.updatePosition(options.kpiIndicatorSettings.position);
                        this.renderIndicator(options, kpiIndicatorSettings);
                        var value = options.fontSettings.isShown
                            ? options.value
                            : undefined;
                        _super.prototype.render.call(this, {
                            value: value,
                            order: options.order,
                            fontSettings: options.fontSettings,
                        });
                        this.applyCenterAlignment(options.kpiIndicatorSettings.isShown
                            &&
                                options.fontSettings.isShown
                            &&
                                options.fontSettings.alignment === powerKPIMatrix.HorizontalTextAlignment.center);
                    };
                    KPIIndicatorCellComponent.prototype.applyCenterAlignment = function (shouldApply) {
                        if (!this.element) {
                            return;
                        }
                        this.element.classed(this.kpiStatusHorizontalAlignmentCenterClassName, shouldApply);
                    };
                    KPIIndicatorCellComponent.prototype.updateElementsDirection = function (shouldUseColumnDirection) {
                        if (!this.element) {
                            return;
                        }
                        this.element
                            .classed(this.kpiIndicatorColumnDirectionClassName, shouldUseColumnDirection)
                            .classed(this.kpiIndicatorRowDirectionClassName, !shouldUseColumnDirection);
                    };
                    KPIIndicatorCellComponent.prototype.updatePosition = function (position) {
                        if (!this.element) {
                            return;
                        }
                        this.element
                            .classed(this.kpiIndicatorPositionLeftClassName, position === powerKPIMatrix.KPIIndicatorPosition.left)
                            .classed(this.kpiIndicatorPositionRightClassName, position === powerKPIMatrix.KPIIndicatorPosition.right);
                    };
                    KPIIndicatorCellComponent.prototype.renderIndicator = function (options, kpiIndicatorSettings) {
                        var nodeSelection = this.element
                            .selectAll(this.indicatorClassName.selector)
                            .data(options.kpiIndicatorSettings.isShown ? [[]] : []);
                        nodeSelection
                            .enter()
                            .append("div");
                        var className = kpiIndicatorSettings.shape
                            ? this.indicatorClassName.class + " " + this.glyphClassName + " " + kpiIndicatorSettings.shape
                            : "" + this.indicatorClassName.class;
                        nodeSelection
                            .attr({
                            "class": className,
                        })
                            .style({
                            color: kpiIndicatorSettings.color,
                            "font-size": PixelConverter.toString(PixelConverter.fromPointToPixel(options.kpiIndicatorSettings.textFontSize)),
                        });
                        this.updateTextWrapping(nodeSelection, options.fontSettings.wrapText);
                        nodeSelection
                            .exit()
                            .remove();
                    };
                    return KPIIndicatorCellComponent;
                }(powerKPIMatrix.TextCellComponent));
                powerKPIMatrix.KPIIndicatorCellComponent = KPIIndicatorCellComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var RowComponent = /** @class */ (function (_super) {
                    __extends(RowComponent, _super);
                    function RowComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.containerClassName = "rowComponent_container";
                        _this.className = "rowComponent";
                        _this.tableType = powerKPIMatrix.TableType.RowBasedKPIS;
                        _this.verticalDraggableComponents = [];
                        _this.options = options;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        _this.containerElement = _this.element
                            .append("div")
                            .classed(_this.containerClassName, true);
                        _this.components = [];
                        return _this;
                    }
                    RowComponent.prototype.initHorizontalDraggableComponent = function (options) {
                        if (this.horizontalDraggableComponent) {
                            return;
                        }
                        this.horizontalDraggableComponent = new powerKPIMatrix.DraggableComponent({
                            element: this.element,
                            scaleService: options.scaleService,
                            onDragStart: this.getPoint.bind(this),
                            onDrag: this.onSizeChange.bind(this),
                            onSaveState: options.onSaveState,
                            height: options.defaultMargin,
                        });
                    };
                    RowComponent.prototype.getCellByIndex = function (index) {
                        if (!this.components) {
                            return null;
                        }
                        return this.components[index] instanceof powerKPIMatrix.CellComponent
                            ? this.components[index]
                            : null;
                    };
                    RowComponent.prototype.applyState = function (state) {
                        var _this = this;
                        if (!this.options.stateService) {
                            return;
                        }
                        if (!state || !state.cellSet || !state.cellSet[this.tableType]) {
                            var width = void 0;
                            var height = void 0;
                            if (this.components
                                && this.components[0] instanceof powerKPIMatrix.CellComponent
                                && this.components[0].getState) {
                                var cellState = this.components[0].getState();
                                width = cellState.width;
                                height = cellState.height;
                            }
                            var _a = this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                                ? [height, width]
                                : [width, height], widthReverted = _a[0], heightReverted = _a[1];
                            var currentWidth_1 = this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                                ? widthReverted
                                : undefined;
                            var currentHeight_1 = this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                ? heightReverted
                                : undefined;
                            this.components.forEach(function (_, componentIndex) {
                                _this.updateCellComponentSizeByIndex(currentWidth_1, currentHeight_1, componentIndex);
                            });
                            this.updateSize(width, height);
                            this.updateSizeBasedOnChildren();
                            return;
                        }
                        this.components.forEach(function (component, cellIndex) {
                            var cellState = state.cellSet[_this.tableType][cellIndex]
                                || (_this.components && _this.components[0] && _this.components[0].getState());
                            if (cellState) {
                                if (cellIndex === 0) {
                                    var width = cellState.width, height = cellState.height;
                                    if (_this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS) {
                                        _a = [height, width], width = _a[0], height = _a[1];
                                    }
                                    _this.updateSize(width, height);
                                }
                                _this.updateCellComponentSizeByIndex(cellState.width, cellState.height, cellIndex);
                            }
                            var _a;
                        });
                        this.updateSizeBasedOnChildren();
                    };
                    RowComponent.prototype.getPoint = function () {
                        var cellState = {
                            width: 0,
                            height: 0,
                        };
                        for (var _i = 0, _a = this.components; _i < _a.length; _i++) {
                            var component = _a[_i];
                            if (component && component.getState) {
                                cellState = component.getState();
                                break;
                            }
                        }
                        return {
                            x: cellState.width,
                            y: cellState.height
                        };
                    };
                    RowComponent.prototype.onSizeChange = function (width, height) {
                        var _this = this;
                        this.components.forEach(function (component, componentIndex) {
                            if (component instanceof powerKPIMatrix.CellComponent) {
                                var currentWidth = _this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                    ? undefined
                                    : width;
                                var currentHeight = _this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                                    ? undefined
                                    : height;
                                component.updateSize(currentWidth, currentHeight);
                                if (componentIndex === 1) {
                                    var cellState = component.getState();
                                    _this.updateSize(undefined, _this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                        ? cellState.height
                                        : cellState.width);
                                }
                            }
                        });
                    };
                    RowComponent.prototype.updateSize = function (width, height) {
                        if (this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS) {
                            _a = [height, width], width = _a[0], height = _a[1];
                        }
                        var heightStr = null;
                        var widthStr = null;
                        switch (this.tableType) {
                            case powerKPIMatrix.TableType.RowBasedKPIS: {
                                heightStr = height !== undefined && height !== null
                                    ? PixelConverter.toString(height)
                                    : null;
                                break;
                            }
                            case powerKPIMatrix.TableType.ColumnBasedKPIS: {
                                widthStr = width !== undefined && width !== null
                                    ? PixelConverter.toString(width)
                                    : null;
                                break;
                            }
                        }
                        this.containerElement.style({
                            height: heightStr,
                            width: widthStr
                        });
                        var _a;
                    };
                    RowComponent.prototype.updateSizeBasedOnChildren = function () {
                        if (!this.horizontalDraggableComponent) {
                            return;
                        }
                        var width = this.getWidth();
                        var height;
                        if (this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS) {
                            _a = [height, width], width = _a[0], height = _a[1];
                        }
                        this.horizontalDraggableComponent.updateSize(width, height, true);
                        var _a;
                    };
                    RowComponent.prototype.pushComponent = function (component, options) {
                        this.components.push(component);
                        this.verticalDraggableComponents.push(new powerKPIMatrix.DraggableComponent(options));
                    };
                    RowComponent.prototype.applyFontSettings = function (fontSettings) {
                        if (!this.element || !fontSettings) {
                            return;
                        }
                        this.element
                            .style({
                            "font-size": PixelConverter.toString(PixelConverter.fromPointToPixel(fontSettings.textFontSize)),
                            "font-family": fontSettings.fontFamily
                        })
                            .classed(this.italicClassName, fontSettings.isItalic)
                            .classed(this.boldClassName, fontSettings.isBold);
                    };
                    RowComponent.prototype.getWidth = function () {
                        var viewport = this.getSize(this.components.concat(this.verticalDraggableComponents));
                        switch (this.tableType) {
                            case powerKPIMatrix.TableType.ColumnBasedKPIS: {
                                return viewport.height;
                            }
                            case powerKPIMatrix.TableType.RowBasedKPIS:
                            default: {
                                return viewport.width;
                            }
                        }
                    };
                    RowComponent.prototype.getHeight = function (shouldConsiderSplitter) {
                        if (shouldConsiderSplitter === void 0) { shouldConsiderSplitter = true; }
                        var components = [];
                        this.components.some(function (component) {
                            if (component && component.isShown) {
                                components.push(component);
                                return true;
                            }
                            return false;
                        });
                        if (shouldConsiderSplitter) {
                            components.push(this.horizontalDraggableComponent);
                        }
                        switch (this.tableType) {
                            case powerKPIMatrix.TableType.ColumnBasedKPIS: {
                                return this.getSize(components).width;
                            }
                            case powerKPIMatrix.TableType.RowBasedKPIS:
                            default: {
                                return this.getSize(components).height;
                            }
                        }
                    };
                    RowComponent.prototype.getSize = function (components) {
                        return (components || []).reduce(function (viewport, component) {
                            if (component && component.isShown && component.getState) {
                                var cellState = component.getState();
                                viewport.height += cellState.height;
                                viewport.width += cellState.width;
                            }
                            return viewport;
                        }, {
                            width: 0,
                            height: 0
                        });
                    };
                    RowComponent.prototype.clear = function () {
                        if (this.containerElement) {
                            this.containerElement
                                .selectAll("*")
                                .remove();
                        }
                        _super.prototype.clear.call(this);
                    };
                    RowComponent.prototype.destroy = function () {
                        if (this.containerElement) {
                            this.containerElement.remove();
                        }
                        this.containerElement = null;
                        [
                            this.horizontalDraggableComponent
                        ].concat(this.verticalDraggableComponents).forEach(function (component) {
                            if (component) {
                                component.destroy();
                            }
                        });
                        this.horizontalDraggableComponent = null;
                        this.verticalDraggableComponents = null;
                        _super.prototype.destroy.call(this);
                    };
                    RowComponent.prototype.updateCellComponentSizeByIndex = function (width, height, cellIndex) {
                        var component = this.getCellByIndex(cellIndex);
                        if (component && component.updateSize) {
                            component.updateSize(width, height);
                        }
                    };
                    RowComponent.prototype.updateSizeOfCellByIndex = function (width, height, cellIndex) {
                        this.updateCellComponentSizeByIndex(width, height, cellIndex);
                        this.updateSizeBasedOnChildren();
                    };
                    RowComponent.prototype.getState = function () {
                        var _this = this;
                        var state = {
                            name: this.name,
                            cellSet: (_a = {},
                                _a[this.tableType] = [],
                                _a),
                        };
                        if (this.components) {
                            this.components.forEach(function (component) {
                                if (component && component.getState) {
                                    state.cellSet[_this.tableType].push(component.getState());
                                }
                            });
                        }
                        return state;
                        var _a;
                    };
                    RowComponent.prototype.updateGrid = function (horizontalGridSettings, verticalGridSettings) {
                        if (this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS) {
                            _a = [verticalGridSettings, horizontalGridSettings], horizontalGridSettings = _a[0], verticalGridSettings = _a[1];
                        }
                        this.updateDraggableComponents([this.horizontalDraggableComponent], horizontalGridSettings, true);
                        this.updateDraggableComponents(this.verticalDraggableComponents, verticalGridSettings, false);
                        this.updateBorder(verticalGridSettings);
                        var _a;
                    };
                    RowComponent.prototype.updateBorder = function (verticalGridSettings) {
                        var border = this.getStringRepresentationOfBorderByGridSettings(verticalGridSettings);
                        this.element.style({
                            "border-top": this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                                ? border
                                : null,
                            "border-left": this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                ? border
                                : null,
                        });
                    };
                    RowComponent.prototype.getStringRepresentationOfBorderByGridSettings = function (gridSettings) {
                        return gridSettings && gridSettings.show
                            ? PixelConverter.toString(gridSettings.thickness) + " solid " + gridSettings.color
                            : null;
                    };
                    RowComponent.prototype.updateDraggableComponents = function (components, gridSettings, isHorizontal) {
                        if (isHorizontal === void 0) { isHorizontal = true; }
                        var size = gridSettings.show
                            ? gridSettings.thickness
                            : this.options.defaultMargin;
                        var color = gridSettings.show
                            ? gridSettings.color
                            : null;
                        var _a = [size, size], width = _a[0], height = _a[1];
                        if (isHorizontal) {
                            width = undefined;
                        }
                        else {
                            height = undefined;
                        }
                        if (this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS) {
                            _b = [height, width], width = _b[0], height = _b[1];
                        }
                        components.forEach(function (component) {
                            if (component) {
                                component.updateSize(width, height);
                                component.updateColor(color);
                            }
                        });
                        var _b;
                    };
                    RowComponent.prototype.updateVisibility = function (visibilities) {
                        if (!this.components || !this.verticalDraggableComponents) {
                            return;
                        }
                        this.updateVisibilityOfComponents(visibilities, this.components, this.verticalDraggableComponents);
                        this.updateSizeBasedOnChildren();
                    };
                    RowComponent.prototype.updateVisibilityOfComponents = function (visibilities, components, verticalDraggableComponents) {
                        var _loop_7 = function (componentIndex) {
                            var visibility = visibilities[componentIndex];
                            [
                                components[componentIndex],
                                verticalDraggableComponents[componentIndex]
                            ].forEach(function (component) {
                                if (component) {
                                    if (visibility) {
                                        component.show();
                                    }
                                    else {
                                        component.hide();
                                    }
                                }
                            });
                        };
                        for (var componentIndex = 0; componentIndex < components.length; componentIndex++) {
                            _loop_7(componentIndex);
                        }
                        this.updateSizeBasedOnChildren();
                    };
                    RowComponent.prototype.onCellSizeChange = function (width, height, index) {
                        if (!this.options || !this.options.onCellSizeChange) {
                            return;
                        }
                        var currentWidth = this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                            ? width
                            : undefined;
                        var currentHeight = this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                            ? height
                            : undefined;
                        this.options.onCellSizeChange(currentWidth, currentHeight, index);
                    };
                    return RowComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.RowComponent = RowComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var TableBaseComponent = /** @class */ (function (_super) {
                    __extends(TableBaseComponent, _super);
                    function TableBaseComponent() {
                        var _this = _super !== null && _super.apply(this, arguments) || this;
                        _this.tableType = powerKPIMatrix.TableType.RowBasedKPIS;
                        return _this;
                    }
                    TableBaseComponent.prototype.updateSizeOfCellByIndex = function (width, height, cellIndex) {
                        if (!this.components) {
                            return;
                        }
                        this.components.forEach(function (component) {
                            if (component.updateSizeOfCellByIndex) {
                                component.updateSizeOfCellByIndex(width, height, cellIndex);
                            }
                        });
                    };
                    TableBaseComponent.prototype.getState = function () {
                        var state = {
                            rowSet: {}
                        };
                        if (this.components) {
                            this.components.forEach(function (component) {
                                if (component.getState) {
                                    if (component instanceof powerKPIMatrix.RowComponent) {
                                        var rowState = component.getState();
                                        state.rowSet[rowState.name] = rowState;
                                    }
                                    else if (component instanceof TableBaseComponent) {
                                        var subTableState = component.getState();
                                        for (var rowName in subTableState.rowSet) {
                                            state.rowSet[rowName] = subTableState.rowSet[rowName];
                                        }
                                    }
                                }
                            });
                        }
                        return state;
                    };
                    TableBaseComponent.prototype.updateVisibility = function (visibilities) {
                        this.components.forEach(function (component) {
                            if (component.updateVisibility) {
                                component.updateVisibility(visibilities);
                            }
                        });
                    };
                    return TableBaseComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.TableBaseComponent = TableBaseComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var BodyRowComponentViewMode;
                (function (BodyRowComponentViewMode) {
                    BodyRowComponentViewMode[BodyRowComponentViewMode["tabular"] = 0] = "tabular";
                    BodyRowComponentViewMode[BodyRowComponentViewMode["common"] = 1] = "common";
                })(BodyRowComponentViewMode = powerKPIMatrix.BodyRowComponentViewMode || (powerKPIMatrix.BodyRowComponentViewMode = {}));
                var BaseBodyRowComponent = /** @class */ (function (_super) {
                    __extends(BaseBodyRowComponent, _super);
                    function BaseBodyRowComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.extraClassName = "bodyRowComponent";
                        _this.rootContainerClassName = "bodyRowComponent_root_container";
                        _this.childrenContainerClassName = "bodyRowComponent_children_container";
                        _this.level = 0;
                        _this.element.classed(_this.extraClassName, true);
                        _this.childrenContainer = _this.element
                            .append("div")
                            .classed(_this.childrenContainerClassName, true);
                        _this.parentOnChildrenSizeChangeHandler = options.onChildrenSizeChange;
                        _this.bodyOptions = __assign({}, options, { element: _this.childrenContainer, onChildrenSizeChange: _this.onChildrenSizeChange.bind(_this) });
                        _this.cellOptions = {
                            element: _this.containerElement,
                            scaleService: options.scaleService,
                            stateService: options.stateService,
                            powerKPIModalWindowService: options.powerKPIModalWindowService,
                        };
                        return _this;
                    }
                    BaseBodyRowComponent.prototype.updateBorder = function (verticalGridSettings) {
                        _super.prototype.updateBorder.call(this, this.level === 0 ? verticalGridSettings : null);
                    };
                    BaseBodyRowComponent.prototype.onSizeChange = function (width, height) {
                        _super.prototype.onSizeChange.call(this, width, height);
                        this.onChildrenSizeChange();
                    };
                    BaseBodyRowComponent.prototype.onChildrenSizeChange = function () {
                        if (this.parentOnChildrenSizeChangeHandler) {
                            this.parentOnChildrenSizeChangeHandler();
                        }
                    };
                    BaseBodyRowComponent.prototype.initCells = function (constructors, options, cellOptions) {
                        var _this = this;
                        constructors.forEach(function (componentConstructor, componentConstructorIndex) {
                            var component = new componentConstructor(cellOptions);
                            if (component.updateSize
                                && options.cellStates
                                && options.cellStates[componentConstructorIndex]) {
                                component.updateSize(options.cellStates[componentConstructorIndex].width, undefined);
                            }
                            _this.pushComponent(component, {
                                element: _this.containerElement,
                                scaleService: options.scaleService,
                                onDragStart: function () {
                                    var cellState = component.getState();
                                    return {
                                        x: cellState.width,
                                        y: cellState.height,
                                    };
                                },
                                onDrag: function (width, height) {
                                    _this.onCellSizeChange(width, height, componentConstructorIndex + _this.level);
                                },
                                onSaveState: options.onSaveState,
                                width: options.defaultMargin,
                            });
                        });
                    };
                    BaseBodyRowComponent.prototype.destroyComponents = function () {
                        this.components.concat(this.verticalDraggableComponents, [
                            this.horizontalDraggableComponent
                        ]).forEach(function (component) {
                            if (component) {
                                component.destroy();
                            }
                        });
                        this.components = [];
                        this.verticalDraggableComponents = [];
                        this.horizontalDraggableComponent = null;
                    };
                    BaseBodyRowComponent.prototype.updateClassNamesBasedOnViewMode = function (viewMode) {
                        if (!this.element) {
                            return;
                        }
                        this.element
                            .classed(BodyRowComponentViewMode[BodyRowComponentViewMode.tabular], viewMode === BodyRowComponentViewMode.tabular)
                            .classed(BodyRowComponentViewMode[BodyRowComponentViewMode.common], viewMode === BodyRowComponentViewMode.common);
                    };
                    return BaseBodyRowComponent;
                }(powerKPIMatrix.RowComponent));
                powerKPIMatrix.BaseBodyRowComponent = BaseBodyRowComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var CollapsedBodyRowComponent = /** @class */ (function (_super) {
                    __extends(CollapsedBodyRowComponent, _super);
                    function CollapsedBodyRowComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.emptyCellConstructor = powerKPIMatrix.CellComponent;
                        _this.amountOfPreCells = 0;
                        _this.cellConstructors = [
                            powerKPIMatrix.CellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.CellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.CellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.TextCellComponent,
                        ];
                        _this.name = "__##__collapsedBodyRowComponent__##__"; // Don't change this value. This value is used for state mapping
                        _this.hide(); // This component must be hidden by default
                        return _this;
                    }
                    CollapsedBodyRowComponent.prototype.getCellConstructors = function (amountOfPreCells) {
                        var cellConstructors = [];
                        for (var i = 0; i < amountOfPreCells; i++) {
                            cellConstructors.push(this.emptyCellConstructor);
                        }
                        return cellConstructors.concat(this.cellConstructors);
                    };
                    CollapsedBodyRowComponent.prototype.render = function (options) {
                        var series = options.series, settings = options.settings, seriesDeep = options.seriesDeep, rowStateSet = options.rowStateSet, originRowStateSet = options.originRowStateSet;
                        this.tableType = settings.table.type;
                        this.level = series.level + 1;
                        var rowState = (rowStateSet
                            && rowStateSet[series.name]
                            && rowStateSet[series.name].rowSet
                            && rowStateSet[series.name].rowSet[this.name])
                            ||
                                (originRowStateSet
                                    && originRowStateSet[series.name]
                                    && originRowStateSet[series.name].rowSet
                                    && originRowStateSet[series.name].rowSet[this.name]);
                        var amountOfPreCells = seriesDeep - this.level - 1;
                        if (this.amountOfPreCells !== amountOfPreCells || !this.components.length) {
                            this.destroyComponents();
                            this.initCells(this.getCellConstructors(amountOfPreCells), this.bodyOptions, this.cellOptions);
                            this.initHorizontalDraggableComponent(this.options);
                        }
                        this.amountOfPreCells = amountOfPreCells;
                        this.renderCells(options);
                        this.updateClassNamesBasedOnViewMode(powerKPIMatrix.BodyRowComponentViewMode.common);
                        this.updateGrid(settings.horizontalGrid, settings.verticalGrid);
                        this.applyState(rowState);
                    };
                    CollapsedBodyRowComponent.prototype.renderCells = function (options) {
                        var series = options.series, settings = options.settings;
                        // As of Date
                        this.updateOrderByIndex(0, settings.asOfDate.order);
                        // Metric Name
                        var metricNameOrder = this.getOrder(settings.metricName.order);
                        this.components[this.amountOfPreCells + 1].render({
                            order: metricNameOrder,
                            value: this.getLabel(series),
                            fontSettings: settings.metricName,
                        });
                        this.verticalDraggableComponents[this.amountOfPreCells + 1].updateOrder(metricNameOrder);
                        // Current Value's formatter
                        var currentValueFormatter = powerKPIMatrix.FormattingUtils.getValueFormatter(settings.currentValue.displayUnits || series.currentValue || 0, undefined, undefined, settings.currentValue.precision, settings.currentValue.getFormat());
                        // Current Value
                        var currentValueOrder = this.getOrder(settings.currentValue.order);
                        this.components[this.amountOfPreCells + 2].render({
                            order: currentValueOrder,
                            fontSettings: settings.currentValue,
                            value: powerKPIMatrix.FormattingUtils.getFormattedValue(series.currentValue, currentValueFormatter),
                        });
                        this.verticalDraggableComponents[this.amountOfPreCells + 2].updateOrder(currentValueOrder);
                        // KPI Indicator
                        this.updateOrderByIndex(3, settings.kpiIndicatorValue.order);
                        // Comparison Value's formatter
                        var comparisonValueFormatter = powerKPIMatrix.FormattingUtils.getValueFormatter(settings.comparisonValue.displayUnits || series.comparisonValue || 0, undefined, undefined, settings.comparisonValue.precision, settings.comparisonValue.getFormat());
                        // Comparison Value
                        var comparisonValueOrder = this.getOrder(settings.comparisonValue.order);
                        this.components[this.amountOfPreCells + 4].render({
                            order: comparisonValueOrder,
                            fontSettings: settings.comparisonValue,
                            value: powerKPIMatrix.FormattingUtils.getFormattedValue(series.comparisonValue, comparisonValueFormatter),
                        });
                        this.verticalDraggableComponents[this.amountOfPreCells + 4].updateOrder(comparisonValueOrder);
                        // Sparkline
                        this.updateOrderByIndex(5, settings.sparklineSettings.order);
                        // Second Comparison Value's formatter
                        var secondComparisonValueFormatter = powerKPIMatrix.FormattingUtils.getValueFormatter(settings.secondComparisonValue.displayUnits || series.secondComparisonValue || 0, undefined, undefined, settings.secondComparisonValue.precision, settings.secondComparisonValue.getFormat());
                        // Second Comparison Value
                        var secondComparisonValueOrder = this.getOrder(settings.secondComparisonValue.order);
                        this.components[this.amountOfPreCells + 6].render({
                            order: secondComparisonValueOrder,
                            fontSettings: settings.secondComparisonValue,
                            value: powerKPIMatrix.FormattingUtils.getFormattedValue(series.secondComparisonValue, secondComparisonValueFormatter),
                        });
                        this.verticalDraggableComponents[this.amountOfPreCells + 6].updateOrder(secondComparisonValueOrder);
                        this.updateOrderByIndex(7, settings.secondKPIIndicatorValue.order);
                    };
                    CollapsedBodyRowComponent.prototype.getOrder = function (order) {
                        return this.amountOfPreCells + order;
                    };
                    CollapsedBodyRowComponent.prototype.updateOrderByIndex = function (index, order) {
                        var componentIndex = this.amountOfPreCells + index;
                        var componentOrder = this.getOrder(order);
                        this.components[componentIndex].updateOrder(componentOrder);
                        this.verticalDraggableComponents[componentIndex].updateOrder(componentOrder);
                    };
                    CollapsedBodyRowComponent.prototype.getLabel = function (series) {
                        var amountOfHiddenItems = series.children.length;
                        var amountOfHiddenSubCategories = series.children
                            .reduce(function (currentAmount, currentSeries) {
                            return currentAmount + currentSeries.children.length;
                        }, 0);
                        return amountOfHiddenSubCategories
                            ? amountOfHiddenSubCategories + " Items hidden across " + amountOfHiddenItems + " subcategories"
                            : amountOfHiddenItems + " Items hidden";
                    };
                    return CollapsedBodyRowComponent;
                }(powerKPIMatrix.BaseBodyRowComponent));
                powerKPIMatrix.CollapsedBodyRowComponent = CollapsedBodyRowComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var BodyRowComponent = /** @class */ (function (_super) {
                    __extends(BodyRowComponent, _super);
                    function BodyRowComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.isContainerShown = true;
                        _this.viewMode = powerKPIMatrix.BodyRowComponentViewMode.common;
                        _this.bodyRowComponentClickActionClassName = "bodyRowComponent_clickAction";
                        _this.amountOfSubRows = 1;
                        _this.cellConstructors = [
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.KPIIndicatorCellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.SparklineCellComponent,
                            powerKPIMatrix.TextCellComponent,
                            powerKPIMatrix.TextCellComponent,
                        ];
                        _this.tabularViewCellConstructors = [powerKPIMatrix.CollapserCellComponent];
                        _this.cellOptions.onChangeHandler = _this.changeContainerStateAndKeepState.bind(_this);
                        _this.powerKPIModalWindowService = options.powerKPIModalWindowService;
                        return _this;
                    }
                    BodyRowComponent.prototype.onChildrenSizeChange = function () {
                        if (this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.tabular) {
                            var childrenSize = this.getHeight();
                            switch (this.tableType) {
                                case powerKPIMatrix.TableType.ColumnBasedKPIS: {
                                    this.updateCellComponentSizeByIndex(childrenSize, undefined, 0);
                                    break;
                                }
                                case powerKPIMatrix.TableType.RowBasedKPIS: {
                                    this.updateCellComponentSizeByIndex(undefined, childrenSize, 0);
                                    if (this.verticalDraggableComponents
                                        && this.verticalDraggableComponents[0]) {
                                        this.verticalDraggableComponents[0].updateSize(undefined, childrenSize, true);
                                    }
                                    break;
                                }
                            }
                        }
                        _super.prototype.onChildrenSizeChange.call(this);
                    };
                    BodyRowComponent.prototype.changeContainerStateAndKeepState = function (state) {
                        this.changeContainerState(state);
                        this.onChildrenSizeChange();
                        if (this.options) {
                            this.options.onSaveState();
                        }
                    };
                    BodyRowComponent.prototype.changeContainerState = function (state) {
                        if (!this.components || this.isContainerShown === state) {
                            return;
                        }
                        var cellConstructors = this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.tabular
                            ? this.tabularViewCellConstructors
                            : [];
                        this.changeComponentsState(this.components.slice(cellConstructors.length, cellConstructors.length + this.amountOfSubRows), !state);
                        this.changeComponentsState(this.components.slice(cellConstructors.length + this.amountOfSubRows), state);
                        this.isContainerShown = state;
                    };
                    BodyRowComponent.prototype.changeComponentsState = function (components, state) {
                        components.forEach(function (component) {
                            if (component) {
                                if (state) {
                                    component.show();
                                }
                                else {
                                    component.hide();
                                }
                            }
                        });
                    };
                    BodyRowComponent.prototype.renderCells = function (options) {
                        var y = options.y, series = options.series, settings = options.settings, hyperlinkAdapter = options.hyperlinkAdapter, type = options.type, metadata = options.metadata, viewport = options.viewport;
                        // As of Date's formatter
                        var asOfDateFormatter = powerKPIMatrix.FormattingUtils.getFormatterOfAxisValue(series.x.min, series.x.max, type, metadata, series.settings.asOfDate);
                        // As of Date
                        var formattedValue = series.axisValue === undefined
                            ? ""
                            : asOfDateFormatter.format(series.axisValue);
                        this.components[0].render({
                            value: formattedValue,
                            order: settings.asOfDate.order,
                            fontSettings: series.settings.asOfDate,
                        });
                        this.verticalDraggableComponents[0].updateOrder(settings.asOfDate.order);
                        // Metric Name
                        this.components[1].render({
                            hyperlinkAdapter: hyperlinkAdapter,
                            image: series.image,
                            value: series.name,
                            hyperlink: series.hyperlink,
                            order: settings.metricName.order,
                            fontSettings: series.settings.metricName,
                        });
                        this.verticalDraggableComponents[1].updateOrder(settings.metricName.order);
                        // Current Value
                        this.components[2].render({
                            order: settings.currentValue.order,
                            fontSettings: series.settings.currentValue,
                            value: this.getFormattedValueBySettings(series.currentValue, series.settings.currentValue),
                        });
                        this.verticalDraggableComponents[2].updateOrder(settings.currentValue.order);
                        // KPI Indicator
                        this.components[3].render({
                            order: settings.kpiIndicatorValue.order,
                            kpiIndicatorIndex: series.kpiIndicatorIndex,
                            kpiIndicatorSettings: series.settings.kpiIndicator,
                            value: this.getFormattedValueBySettings(series.kpiIndicatorValue, series.settings.kpiIndicatorValue),
                            fontSettings: series.settings.kpiIndicatorValue,
                        });
                        this.verticalDraggableComponents[3].updateOrder(settings.kpiIndicatorValue.order);
                        // Comparison Value
                        this.components[4].render({
                            order: settings.comparisonValue.order,
                            fontSettings: series.settings.comparisonValue,
                            value: this.getFormattedValueBySettings(series.comparisonValue, series.settings.comparisonValue),
                        });
                        this.verticalDraggableComponents[4].updateOrder(settings.comparisonValue.order);
                        var sparklineCellRenderOptions = {
                            y: y,
                            series: series,
                            settings: settings,
                            metadata: metadata,
                            viewport: viewport,
                            order: settings.sparklineSettings.order,
                            kpiIndicatorIndex: series.kpiIndicatorIndex,
                            kpiIndicatorSettings: settings.kpiIndicator,
                            offset: settings.sparklineSettings.getOffset(),
                        };
                        // Sparkline
                        this.components[5].render(sparklineCellRenderOptions);
                        this.verticalDraggableComponents[5].updateOrder(settings.sparklineSettings.order);
                        this.bindClickEventToOpenModalWindow(sparklineCellRenderOptions);
                        this.components[6].render({
                            order: settings.secondComparisonValue.order,
                            fontSettings: series.settings.secondComparisonValue,
                            value: this.getFormattedValueBySettings(series.secondComparisonValue, series.settings.secondComparisonValue),
                        });
                        this.verticalDraggableComponents[6].updateOrder(settings.secondComparisonValue.order);
                        this.components[7].render({
                            order: settings.secondKPIIndicatorValue.order,
                            fontSettings: series.settings.secondKPIIndicatorValue,
                            value: this.getFormattedValueBySettings(series.secondKPIIndicatorValue, series.settings.secondKPIIndicatorValue),
                        });
                        this.verticalDraggableComponents[7].updateOrder(settings.secondKPIIndicatorValue.order);
                    };
                    BodyRowComponent.prototype.getFormattedValueBySettings = function (value, settings) {
                        if (settings.textReplacement) {
                            return settings.textReplacement;
                        }
                        else {
                            var currentValueFormatter = powerKPIMatrix.FormattingUtils.getValueFormatter(settings.displayUnits || value || 0, undefined, undefined, settings.precision, settings.getFormat());
                            return powerKPIMatrix.FormattingUtils.getFormattedValue(value, currentValueFormatter);
                        }
                    };
                    BodyRowComponent.prototype.render = function (options) {
                        var _this = this;
                        var series = options.series, settings = options.settings, rowStateSet = options.rowStateSet, originRowStateSet = options.originRowStateSet;
                        this.name = series.name;
                        this.level = series.level;
                        this.tableType = settings.table.type;
                        var rowState = (rowStateSet && rowStateSet[this.name])
                            ||
                                (originRowStateSet && originRowStateSet[this.name]);
                        if (series.children && series.children.length) {
                            var isContainerShown = rowState
                                ? rowState.isShown === true || rowState.isShown === undefined
                                : true;
                            this.setViewMode(powerKPIMatrix.BodyRowComponentViewMode.tabular);
                            this.renderContainer(options, this.tabularViewCellConstructors, isContainerShown, rowState, 0, 0);
                            this.verticalDraggableComponents.forEach(function (component) {
                                _this.updateComponentOrder(component, 0);
                            });
                            this.updateContainerGrid(this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                ? settings.horizontalGrid
                                : settings.verticalGrid);
                            this.changeContainerState(isContainerShown);
                            this.bindClickEventToOpenModalWindow(null);
                        }
                        else if (series.hasBeenFilled) {
                            this.setViewMode(powerKPIMatrix.BodyRowComponentViewMode.common);
                            if (!this.components.length) {
                                this.initCells(this.cellConstructors, this.bodyOptions, this.cellOptions);
                                this.initHorizontalDraggableComponent(this.options);
                            }
                            this.applyContainerClassName(false);
                            this.renderCells(options);
                            this.updateContainerGrid(null);
                            this.updateAlignment(this.containerElement, undefined, undefined);
                        }
                        this.updateClassNamesBasedOnViewMode(this.viewMode);
                        this.updateGrid(settings.horizontalGrid, settings.verticalGrid);
                        this.applyState(rowState);
                        this.postRender();
                    };
                    BodyRowComponent.prototype.bindClickEventToOpenModalWindow = function (data) {
                        var _this = this;
                        this.powerKPIModalWindowServiceRenderData = data;
                        var isInteractable = this.powerKPIModalWindowServiceRenderData
                            && this.powerKPIModalWindowServiceRenderData.settings
                            && this.powerKPIModalWindowServiceRenderData.settings.popOutGeneralSettings
                            && this.powerKPIModalWindowServiceRenderData.settings.popOutGeneralSettings.show;
                        this.element
                            .on("click", isInteractable
                            ? function () {
                                _this.powerKPIModalWindowService.render(_this.powerKPIModalWindowServiceRenderData);
                            }
                            : null)
                            .classed(this.bodyRowComponentClickActionClassName, isInteractable);
                        if (this.powerKPIModalWindowService && this.powerKPIModalWindowService.isShown) {
                            var currentData = this.powerKPIModalWindowService.getRenderOptions();
                            if (currentData
                                && this.powerKPIModalWindowServiceRenderData
                                && currentData.series
                                && this.powerKPIModalWindowServiceRenderData.series
                                && currentData.series.name === this.powerKPIModalWindowServiceRenderData.series.name) {
                                this.powerKPIModalWindowService.render(this.powerKPIModalWindowServiceRenderData);
                            }
                        }
                    };
                    BodyRowComponent.prototype.postRender = function () {
                        if (this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.tabular) {
                            this.onChildrenSizeChange();
                        }
                    };
                    BodyRowComponent.prototype.updateContainerGrid = function (gridSettings) {
                        if (!this.containerElement) {
                            return;
                        }
                        var border = this.getStringRepresentationOfBorderByGridSettings(gridSettings);
                        this.containerElement.style({
                            "border-bottom": this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                ? border
                                : null,
                            "border-right": this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                                ? border
                                : null,
                        });
                    };
                    BodyRowComponent.prototype.updateComponentOrder = function (component, order) {
                        if (!component || !component.updateOrder) {
                            return;
                        }
                        component.updateOrder(order);
                    };
                    BodyRowComponent.prototype.initSubRows = function (preComponentsLength, subRowConstructor, amountOfComponents) {
                        this.components
                            .splice(preComponentsLength + amountOfComponents)
                            .forEach(function (component) {
                            component.clear();
                            component.destroy();
                        });
                        if (this.components.length - preComponentsLength < amountOfComponents) {
                            for (var index = this.components.length - preComponentsLength; index < amountOfComponents; index++) {
                                this.components.push(new subRowConstructor(this.bodyOptions));
                            }
                        }
                    };
                    BodyRowComponent.prototype.renderContainer = function (options, cellConstructors, isContainerShown, rowState, collapserIndex, collapserOrder) {
                        var _this = this;
                        var hyperlinkAdapter = options.hyperlinkAdapter, series = options.series, settings = options.settings, originRowStateSet = options.originRowStateSet, seriesDeep = options.seriesDeep, viewport = options.viewport;
                        var cellsLength = cellConstructors.length;
                        var expectedAmountOfComponents = this.amountOfSubRows + cellsLength + options.series.children.length;
                        if (this.components.length !== expectedAmountOfComponents || !this.components.length) {
                            this.destroyComponents();
                            this.initCells(cellConstructors, this.bodyOptions, this.cellOptions);
                            this.initSubRows(cellsLength, powerKPIMatrix.CollapsedBodyRowComponent, this.amountOfSubRows);
                            this.initSubRows(this.amountOfSubRows + cellsLength, BodyRowComponent, options.series.children.length);
                        }
                        var category = powerKPIMatrix.SettingsBase.getCategoryByIndex(series.level);
                        var fontSettings = settings[category.name] || settings.metricName;
                        this.components[collapserIndex].render({
                            fontSettings: fontSettings,
                            hyperlinkAdapter: hyperlinkAdapter,
                            image: series.image,
                            value: series.name,
                            order: collapserOrder,
                            isShown: isContainerShown,
                            hyperlink: series.hyperlink,
                        });
                        this.components[collapserIndex + this.amountOfSubRows].render(options);
                        this.applyContainerClassName();
                        if ((this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.tabular || this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.common)
                            && fontSettings) {
                            this.updateAlignment(this.containerElement, fontSettings.alignment, fontSettings.verticalAlignment);
                        }
                        else {
                            this.updateAlignment(this.containerElement, undefined, undefined);
                        }
                        options.series.children.forEach(function (childSeries, childSeriesIndex) {
                            var component = _this.components[childSeriesIndex + cellConstructors.length + _this.amountOfSubRows];
                            if (component) {
                                component.render({
                                    viewport: viewport,
                                    seriesDeep: seriesDeep,
                                    originRowStateSet: originRowStateSet,
                                    y: options.y,
                                    type: options.type,
                                    series: childSeries,
                                    metadata: options.metadata,
                                    settings: options.settings,
                                    seriesSettings: options.seriesSettings,
                                    rowStateSet: rowState && rowState.rowSet,
                                    hyperlinkAdapter: options.hyperlinkAdapter,
                                });
                            }
                        });
                    };
                    BodyRowComponent.prototype.applyContainerClassName = function (isContainer) {
                        if (isContainer === void 0) { isContainer = true; }
                        if (!this.containerElement) {
                            return;
                        }
                        this.containerElement.classed(this.rootContainerClassName, isContainer);
                    };
                    BodyRowComponent.prototype.getWidth = function () {
                        if (this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.common) {
                            return _super.prototype.getWidth.call(this);
                        }
                        return this.getWidthOfChildren();
                    };
                    BodyRowComponent.prototype.getHeight = function (shouldConsiderSplitter) {
                        if (shouldConsiderSplitter === void 0) { shouldConsiderSplitter = false; }
                        if (this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.common) {
                            return _super.prototype.getHeight.call(this, shouldConsiderSplitter);
                        }
                        return this.getHeightOfChildren(shouldConsiderSplitter);
                    };
                    BodyRowComponent.prototype.getWidthOfChildren = function () {
                        return this.components.reduce(function (width, rowComponent) {
                            if (rowComponent && rowComponent.isShown && rowComponent.getWidth) {
                                return Math.max(width, rowComponent.getWidth());
                            }
                            return width;
                        }, 0);
                    };
                    BodyRowComponent.prototype.getHeightOfChildren = function (shouldConsiderSplitter) {
                        if (shouldConsiderSplitter === void 0) { shouldConsiderSplitter = false; }
                        return this.components
                            .filter(function (component) {
                            return component
                                && (component instanceof powerKPIMatrix.BaseBodyRowComponent)
                                && component.isShown
                                && component.getHeight;
                        })
                            .reduce(function (height, component, componentIndex, components) {
                            return height + component.getHeight(componentIndex !== components.length - 1 || shouldConsiderSplitter);
                        }, 0);
                    };
                    BodyRowComponent.prototype.updateSizeOfCellByIndex = function (width, height, cellIndex) {
                        switch (this.viewMode) {
                            case powerKPIMatrix.BodyRowComponentViewMode.common: {
                                _super.prototype.updateSizeOfCellByIndex.call(this, width, height, cellIndex);
                                break;
                            }
                            case powerKPIMatrix.BodyRowComponentViewMode.tabular: {
                                var constructorsLength = this.tabularViewCellConstructors.length;
                                var currentCellIndex_1 = cellIndex - constructorsLength;
                                if (currentCellIndex_1 >= 0) {
                                    this.components
                                        .slice(constructorsLength)
                                        .forEach(function (component) {
                                        component.updateSizeOfCellByIndex(width, height, currentCellIndex_1);
                                    });
                                }
                                _super.prototype.updateSizeOfCellByIndex.call(this, width, height, cellIndex);
                                break;
                            }
                        }
                    };
                    BodyRowComponent.prototype.getState = function () {
                        switch (this.viewMode) {
                            case powerKPIMatrix.BodyRowComponentViewMode.common: {
                                return _super.prototype.getState.call(this);
                            }
                            case powerKPIMatrix.BodyRowComponentViewMode.tabular: {
                                return this.getContainerState(this.tabularViewCellConstructors.length);
                            }
                        }
                    };
                    BodyRowComponent.prototype.getContainerState = function (cellsLength) {
                        var cells = this.components
                            .slice(0, cellsLength)
                            .map(function (component) {
                            return component.getState();
                        });
                        var rowSet = {};
                        this.components
                            .slice(cellsLength)
                            .forEach(function (component) {
                            var state = component.getState();
                            rowSet[state.name] = state;
                        });
                        return {
                            cellSet: (_a = {}, _a[this.tableType] = cells, _a),
                            rowSet: rowSet,
                            name: this.name,
                            isShown: this.isContainerShown,
                        };
                        var _a;
                    };
                    BodyRowComponent.prototype.updateVisibility = function (visibilities) {
                        switch (this.viewMode) {
                            case powerKPIMatrix.BodyRowComponentViewMode.common: {
                                _super.prototype.updateVisibility.call(this, visibilities);
                                break;
                            }
                            case powerKPIMatrix.BodyRowComponentViewMode.tabular: {
                                var cellConstructorsLength = this.tabularViewCellConstructors.length;
                                this.updateContainerVisibility(visibilities, visibilities.slice(cellConstructorsLength), cellConstructorsLength);
                                break;
                            }
                        }
                    };
                    BodyRowComponent.prototype.updateContainerVisibility = function (originalVisibilities, componentVisibilities, cellsLength) {
                        this.updateVisibilityOfComponents(originalVisibilities, this.components.slice(0, cellsLength), this.verticalDraggableComponents);
                        this.components
                            .slice(cellsLength)
                            .forEach(function (component) {
                            if (component && component.updateVisibility) {
                                component.updateVisibility(componentVisibilities);
                            }
                        });
                    };
                    BodyRowComponent.prototype.setViewMode = function (viewMode) {
                        if (viewMode === this.viewMode) {
                            return;
                        }
                        this.viewMode = viewMode;
                        this.destroyComponents();
                    };
                    BodyRowComponent.prototype.updateSize = function (width, height) {
                        if (this.viewMode === powerKPIMatrix.BodyRowComponentViewMode.tabular) {
                            _super.prototype.updateSize.call(this, width, undefined);
                        }
                        else {
                            _super.prototype.updateSize.call(this, width, height);
                        }
                    };
                    BodyRowComponent.prototype.destroy = function () {
                        this.powerKPIModalWindowServiceRenderData = null;
                        _super.prototype.destroy.call(this);
                    };
                    return BodyRowComponent;
                }(powerKPIMatrix.BaseBodyRowComponent));
                powerKPIMatrix.BodyRowComponent = BodyRowComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var HeaderRowComponent = /** @class */ (function (_super) {
                    __extends(HeaderRowComponent, _super);
                    function HeaderRowComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.extraClassName = "headerRowComponent";
                        _this.componentContainerClassName = "headerRowComponent_container";
                        _this.maxSize = 200;
                        _this.initHorizontalDraggableComponent(_this.options);
                        _this.name = "__#__headerRowComponent__#__"; // Don't change this value. This value is used for state mapping
                        _this.element.classed(_this.extraClassName, true);
                        _this.containerElement.classed(_this.componentContainerClassName, true);
                        return _this;
                    }
                    HeaderRowComponent.prototype.render = function (options) {
                        var _this = this;
                        var settings = options.settings, columnNames = options.columnNames, columnOrders = options.columnOrders;
                        this.tableType = settings.table.type;
                        if (settings && settings.header && settings.header.show) {
                            this.initCells(columnNames.length);
                            this.updateGrid(settings.horizontalGrid, settings.verticalGrid);
                            this.show();
                            this.components.forEach(function (component, componentIndex) {
                                var order = columnOrders[componentIndex];
                                var componentRenderOptions = {
                                    order: order,
                                    fontSettings: settings.header,
                                    value: columnNames[componentIndex],
                                };
                                component.render(componentRenderOptions);
                                _this.verticalDraggableComponents[componentIndex].updateOrder(order);
                            });
                            this.applyState(this.options.stateService.states.table.getRowStateSet()[this.name]);
                            this.applyFontSettings(settings.header);
                        }
                        else {
                            this.hide();
                        }
                    };
                    HeaderRowComponent.prototype.initCells = function (cellsLength) {
                        this.destroyComponentsByLength(this.components, cellsLength);
                        this.destroyComponentsByLength(this.verticalDraggableComponents, cellsLength);
                        if (this.components.length < cellsLength) {
                            var constructorOptions = {
                                element: this.containerElement
                            };
                            for (var index = this.components.length; index < cellsLength; index++) {
                                this.initCellElement(constructorOptions, index);
                            }
                        }
                    };
                    HeaderRowComponent.prototype.destroyComponentsByLength = function (components, length) {
                        components
                            .splice(length)
                            .forEach(function (component) {
                            component.clear();
                            component.destroy();
                        });
                    };
                    HeaderRowComponent.prototype.initCellElement = function (constructorOptions, index) {
                        var _this = this;
                        var cell = new powerKPIMatrix.TextCellComponent(constructorOptions);
                        this.pushComponent(cell, {
                            element: this.containerElement,
                            scaleService: this.options.scaleService,
                            onDragStart: function () {
                                var cellState = cell.getState();
                                return {
                                    x: cellState.width,
                                    y: cellState.height,
                                };
                            },
                            onDrag: function (width, height) {
                                _this.onCellSizeChange(width, height, index);
                            },
                            onSaveState: this.options.onSaveState,
                            width: this.options.defaultMargin,
                        });
                    };
                    HeaderRowComponent.prototype.onSizeChange = function (width, height) {
                        var currentHeight = height;
                        var currentWidth = width;
                        if (this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                            && !isNaN(currentHeight)
                            && currentHeight !== null) {
                            currentHeight = Math.min(currentHeight, this.maxSize);
                        }
                        else if (this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                            && !isNaN(currentWidth)
                            && currentWidth !== null) {
                            currentWidth = Math.min(currentWidth, this.maxSize);
                        }
                        _super.prototype.onSizeChange.call(this, currentWidth, currentHeight);
                    };
                    HeaderRowComponent.prototype.scrollTo = function (xOffset, yOffset, scrollbarWidth, scrollbarHeight) {
                        if (!this.containerElement) {
                            return;
                        }
                        var marginRight = null;
                        var marginBottom = null;
                        switch (this.tableType) {
                            case powerKPIMatrix.TableType.RowBasedKPIS: {
                                marginRight = PixelConverter.toString(scrollbarWidth);
                                break;
                            }
                            case powerKPIMatrix.TableType.ColumnBasedKPIS: {
                                marginBottom = PixelConverter.toString(scrollbarHeight);
                                break;
                            }
                        }
                        powerKPIMatrix.ScrollUtils.d3ScrollTo(this.containerElement, xOffset, yOffset);
                        this.containerElement.style({
                            "margin-bottom": marginBottom,
                            "margin-right": marginRight,
                        });
                    };
                    HeaderRowComponent.prototype.resetScroll = function () {
                        this.scrollTo(0, 0, 0, 0);
                    };
                    return HeaderRowComponent;
                }(powerKPIMatrix.RowComponent));
                powerKPIMatrix.HeaderRowComponent = HeaderRowComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var LineComponent = /** @class */ (function (_super) {
                    __extends(LineComponent, _super);
                    function LineComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "lineComponent";
                        _this.lineClassName = createClassAndSelector("lineComponent_line");
                        _this.dataPointFilter = options.dataPointFilter;
                        _this.element = options.element
                            .append("g")
                            .classed(_this.className, true);
                        return _this;
                    }
                    LineComponent.prototype.render = function (options) {
                        var _this = this;
                        var x = options.x, y = options.y, offset = options.offset, points = options.points, viewport = options.viewport, _a = options.points, thickness = _a.thickness, lineStyle = _a.lineStyle;
                        var xScale = x.scale
                            .copy()
                            .range([
                            offset,
                            viewport.width - offset
                        ]);
                        var yScale = y.scale
                            .copy()
                            .range([
                            viewport.height - offset,
                            offset
                        ]);
                        var line = this.getLine(xScale, yScale);
                        var lineSelection = this.element
                            .selectAll(this.lineClassName.selector)
                            .data(this.dataPointFilter.groupAndFilterByColor(points.points, points.colors, points.color));
                        lineSelection.enter()
                            .append("svg:path")
                            .classed(this.lineClassName.class, true);
                        lineSelection
                            .attr({
                            d: function (options) {
                                return line(options.points);
                            },
                            "class": function () {
                                return "" + _this.lineClassName.class;
                            }
                        })
                            .style({
                            "stroke": function (options) { return options.color; },
                            "stroke-width": PixelConverter.toString(thickness),
                        })
                            .classed(powerKPIMatrix.LineStyle[powerKPIMatrix.LineStyle.dashedLine], lineStyle === powerKPIMatrix.LineStyle.dashedLine)
                            .classed(powerKPIMatrix.LineStyle[powerKPIMatrix.LineStyle.dottedLine], lineStyle === powerKPIMatrix.LineStyle.dottedLine)
                            .classed(powerKPIMatrix.LineStyle[powerKPIMatrix.LineStyle.dotDashedLine], lineStyle === powerKPIMatrix.LineStyle.dotDashedLine);
                        lineSelection
                            .exit()
                            .remove();
                    };
                    LineComponent.prototype.getLine = function (xScale, yScale) {
                        return d3.svg.line()
                            .x(function (data) {
                            return xScale.scale(data.axisValue);
                        })
                            .y(function (data) {
                            return yScale.scale(data.value);
                        });
                    };
                    return LineComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.LineComponent = LineComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon
                var PixelConverter = jsCommon.PixelConverter;
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var VerticalReferenceLineComponent = /** @class */ (function (_super) {
                    __extends(VerticalReferenceLineComponent, _super);
                    function VerticalReferenceLineComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "verticalLineComponent";
                        _this.lineSelector = createClassAndSelector("verticalLine");
                        _this.element = options.element
                            .append("g")
                            .classed(_this.className, true);
                        return _this;
                    }
                    VerticalReferenceLineComponent.prototype.render = function (options) {
                        var offset = options.offset, viewport = options.viewport, _a = options.series, x = _a.x, axisValue = _a.axisValue, sparklineSettings = _a.settings.sparklineSettings;
                        var xScale = x.scale
                            .copy()
                            .range([offset, viewport.width - offset]);
                        var xPosition = xScale.scale(axisValue);
                        var lineSelection = this.element
                            .selectAll(this.lineSelector.selector)
                            .data(powerKPIMatrix.NumericValueUtils.isValueDefined(axisValue)
                            && (sparklineSettings.isActualVisible || sparklineSettings.isTargetVisible || sparklineSettings.isSecondComparisonValueVisible)
                            ? [axisValue]
                            : []);
                        lineSelection
                            .enter()
                            .append("line")
                            .classed(this.lineSelector.class, true);
                        lineSelection
                            .attr({
                            x1: xPosition,
                            y1: 0,
                            x2: xPosition,
                            y2: viewport.height,
                        })
                            .style({
                            stroke: sparklineSettings.verticalReferenceLineColor,
                            "stroke-width": PixelConverter.toString(sparklineSettings.verticalReferenceLineThickness),
                        });
                        lineSelection
                            .exit()
                            .remove();
                    };
                    return VerticalReferenceLineComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.VerticalReferenceLineComponent = VerticalReferenceLineComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var createClassAndSelector = jsCommon.CssConstants.createClassAndSelector;
                var ReferenceDotsComponent = /** @class */ (function (_super) {
                    __extends(ReferenceDotsComponent, _super);
                    function ReferenceDotsComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "referenceDotsComponent";
                        _this.dotsSelector = createClassAndSelector("dots");
                        _this.dotSelector = createClassAndSelector("dot");
                        _this.dataPointFilter = powerKPIMatrix.DataRepresentationPointFilter.create();
                        _this.radiusFactor = 1.4;
                        _this.element = options.element
                            .append("g")
                            .classed(_this.className, true);
                        return _this;
                    }
                    ReferenceDotsComponent.prototype.render = function (options) {
                        var _this = this;
                        var series = options.series, offset = options.offset, viewport = options.viewport;
                        var xScale = series.x.scale
                            .copy()
                            .range([offset, viewport.width - offset]);
                        var yScale = series.y.scale
                            .copy()
                            .range([viewport.height - offset, offset]);
                        var dotGroupSelection = this.element
                            .selectAll(this.dotsSelector.selector)
                            .data(series ? [series] : []);
                        dotGroupSelection
                            .enter()
                            .append("g")
                            .classed(this.dotsSelector.class, true);
                        var dotSelection = dotGroupSelection
                            .selectAll(this.dotSelector.selector)
                            .data(function (series) {
                            return series.points.filter(function (pointSet) {
                                return pointSet.isShown && _this.dataPointFilter.filter(pointSet.points || []).length > 0;
                            });
                        });
                        dotSelection
                            .enter()
                            .append("circle")
                            .classed(this.dotSelector.class, true);
                        dotSelection
                            .attr({
                            cx: function (pointSet) { return xScale.scale(pointSet.points[0].axisValue); },
                            cy: function (pointSet) { return yScale.scale(pointSet.points[0].value); },
                            r: function (pointSet) { return pointSet.thickness * _this.radiusFactor; }
                        })
                            .style({
                            fill: function (pointSet) { return (pointSet.colors && pointSet.colors[0]) || pointSet.color; }
                        });
                        dotSelection
                            .exit()
                            .remove();
                        dotGroupSelection
                            .exit()
                            .remove();
                    };
                    return ReferenceDotsComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.ReferenceDotsComponent = ReferenceDotsComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerbi.visuals.controls
                var Rectangle = powerbi.visuals.controls.TouchUtils.Rectangle;
                var TooltipMarkerShapeEnum;
                (function (TooltipMarkerShapeEnum) {
                    TooltipMarkerShapeEnum[TooltipMarkerShapeEnum["circle"] = 0] = "circle";
                    TooltipMarkerShapeEnum[TooltipMarkerShapeEnum["none"] = 1] = "none";
                })(TooltipMarkerShapeEnum || (TooltipMarkerShapeEnum = {}));
                var TooltipComponent = /** @class */ (function () {
                    function TooltipComponent() {
                        this.varianceStrategy = new powerKPIMatrix.VarianceStrategy();
                        this.extraYOffset = 5;
                        try {
                            this.tooltipComponent = new visuals.ToolTipComponent({ hideArrow: true });
                        }
                        catch (err) {
                            this.tooltipComponent = null;
                        }
                    }
                    TooltipComponent.instance = function () {
                        if (!TooltipComponent.singletonInstance) {
                            TooltipComponent.singletonInstance = new TooltipComponent();
                        }
                        return TooltipComponent.singletonInstance;
                    };
                    TooltipComponent.prototype.render = function (options) {
                        var _this = this;
                        if (!options || !this.tooltipComponent) {
                            return;
                        }
                        var scale = options.scale, series = options.series, position = options.position, metadata = options.metadata, viewport = options.viewport;
                        var baseDataItems = [];
                        if (powerKPIMatrix.NumericValueUtils.isValueDefined(series.axisValue)) {
                            var asOfDateFormatter = powerKPIMatrix.FormattingUtils.getFormatterOfAxisValue(series.x.min, series.x.max, series.x.scale.type, metadata, series.settings.asOfDate);
                            baseDataItems.push({
                                displayName: "",
                                value: asOfDateFormatter.format(series.axisValue),
                                markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.circle)
                            });
                        }
                        this.addValueTooltip(baseDataItems, this.getVarianceTooltip(series.varianceSet && series.varianceSet[0], series.settings.kpiIndicatorValue, series.points[0] && series.points[0].kpiIndicatorIndexes, series.settings.kpiIndicator));
                        this.addValueTooltip(baseDataItems, this.getVarianceTooltip(series.varianceSet && series.varianceSet[1], series.settings.secondKPIIndicatorValue, null, null));
                        var additionalDataItems = [];
                        series.points.forEach(function (pointSet) {
                            _this.addValueTooltip(additionalDataItems, _this.getValueTooltip(pointSet));
                        });
                        if (additionalDataItems && additionalDataItems.length) {
                            baseDataItems.push({
                                displayName: "   ",
                                value: "",
                                markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.none)
                            }, {
                                displayName: "   ",
                                value: "",
                                markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.none)
                            });
                            baseDataItems.push.apply(baseDataItems, additionalDataItems);
                        }
                        var yOffset = position.y - position.offsetY;
                        var screenHeight = window.innerHeight;
                        var middleScreenHeight = screenHeight / 2;
                        var height = viewport.height * scale.height;
                        var isElementAboveOfMiddleOfScreen = (yOffset + (height / 2) < middleScreenHeight
                            && (yOffset + height) < middleScreenHeight)
                            || yOffset < middleScreenHeight;
                        var rect = new Rectangle(position.x, isElementAboveOfMiddleOfScreen ? 0 : screenHeight, 0, 0);
                        this.renderTooltip(baseDataItems, rect, 0, isElementAboveOfMiddleOfScreen
                            ? yOffset + height + this.extraYOffset
                            : screenHeight - yOffset + this.extraYOffset);
                    };
                    TooltipComponent.prototype.addValueTooltip = function (dataItems, dataItem) {
                        if (!dataItem) {
                            return;
                        }
                        dataItems.push(dataItem);
                    };
                    TooltipComponent.prototype.getVarianceTooltip = function (varianceSet, settings, kpiIndicatorIndexes, kpiIndicatorSettings) {
                        var variance = varianceSet && varianceSet[0];
                        if (!powerKPIMatrix.NumericValueUtils.isValueFinite(variance)) {
                            return null;
                        }
                        var kpiIndicatorValueFormatter = powerKPIMatrix.FormattingUtils.getValueFormatter(settings.displayUnits || variance || 0, undefined, undefined, settings.precision, settings.getFormat());
                        var color = "rgba(0,0,0,0)";
                        if (kpiIndicatorSettings) {
                            var kpiIndicatorIndex = kpiIndicatorIndexes && kpiIndicatorIndexes[0];
                            var currentKPIIndicator = kpiIndicatorSettings.getCurrentKPI(kpiIndicatorIndex);
                            color = (currentKPIIndicator && currentKPIIndicator.color) || color;
                        }
                        return {
                            color: color,
                            displayName: settings.label,
                            value: powerKPIMatrix.FormattingUtils.getFormattedValue(variance, kpiIndicatorValueFormatter),
                            markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.circle),
                        };
                    };
                    TooltipComponent.prototype.getValueTooltip = function (pointSet) {
                        if (!pointSet
                            || !pointSet.settings
                            || !pointSet.points
                            || !pointSet.points[0]
                            || !powerKPIMatrix.NumericValueUtils.isValueFinite(pointSet.points[0].value)) {
                            return null;
                        }
                        var name = pointSet.name, settings = pointSet.settings;
                        var value = pointSet.points[0].value;
                        var formatter = powerKPIMatrix.FormattingUtils.getValueFormatter(settings.displayUnits || value || 0, undefined, undefined, settings.precision, settings.getFormat());
                        return {
                            displayName: name || settings.label,
                            value: powerKPIMatrix.FormattingUtils.getFormattedValue(value, formatter),
                            markerShape: this.getTooltipMarkerShape(TooltipMarkerShapeEnum.circle),
                            color: (pointSet.colors && pointSet.colors[0]) || pointSet.color,
                        };
                    };
                    TooltipComponent.prototype.renderTooltip = function (dataItems, rect, offsetX, offsetY) {
                        if (!dataItems
                            || !dataItems.length
                            || !rect
                            || !this.tooltipComponent) {
                            this.hide();
                        }
                        else {
                            this.tooltipComponent.setTooltipAppearanceOptions({
                                offsetX: offsetX,
                                offsetY: offsetY
                            });
                            this.tooltipComponent.show(dataItems, rect);
                        }
                    };
                    Object.defineProperty(TooltipComponent.prototype, "isShown", {
                        get: function () {
                            return this.tooltipComponent
                                && this.tooltipComponent.isTooltipComponentVisible
                                && this.tooltipComponent.isTooltipComponentVisible();
                        },
                        enumerable: true,
                        configurable: true
                    });
                    TooltipComponent.prototype.clear = function () {
                        this.hide();
                    };
                    TooltipComponent.prototype.hide = function () {
                        if (!this.isShown) {
                            return;
                        }
                        this.tooltipComponent.hide();
                    };
                    TooltipComponent.prototype.destroy = function () {
                        if (!this.tooltipComponent) {
                            return;
                        }
                        this.hide();
                        this.tooltipComponent = null;
                        this.varianceStrategy = null;
                    };
                    TooltipComponent.prototype.getTooltipMarkerShape = function (markerShape) {
                        return TooltipMarkerShapeEnum[markerShape];
                    };
                    return TooltipComponent;
                }());
                powerKPIMatrix.TooltipComponent = TooltipComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var SparklineCellComponent = /** @class */ (function (_super) {
                    __extends(SparklineCellComponent, _super);
                    function SparklineCellComponent(options) {
                        var _this = _super.call(this, options) || this;
                        _this.extraClassName = "sparklineCellComponent";
                        _this.svgClassName = "sparklineCellComponent_svg";
                        _this.scaleService = options.scaleService;
                        _this.element.classed(_this.extraClassName, true);
                        _this.svgElement = _this.element
                            .append("svg")
                            .classed(_this.svgClassName, true);
                        _this.mainGroupElement = _this.svgElement.append("g");
                        _this.updateSize(_this.width, _this.height);
                        _this.bindEvents(_this.svgElement);
                        var dynamicOptions = {
                            element: _this.svgElement,
                            scaleService: options.scaleService,
                            stateService: options.stateService
                        };
                        _this.dynamicComponents = [
                            new powerKPIMatrix.VerticalReferenceLineComponent(dynamicOptions),
                            new powerKPIMatrix.ReferenceDotsComponent(dynamicOptions),
                            powerKPIMatrix.TooltipComponent.instance(),
                        ];
                        return _this;
                    }
                    SparklineCellComponent.prototype.bindEvents = function (element) {
                        var _this = this;
                        element.on("mousemove", function () { return _this.pointerMoveEvent(_this.renderOptions); });
                        element.on("touchmove", function () { return _this.pointerMoveEvent(_this.renderOptions); });
                        element.on("mouseleave", function () { return _this.pointerLeaveHandler(); });
                        element.on("touchend", function () { return _this.pointerLeaveHandler(); });
                    };
                    SparklineCellComponent.prototype.pointerMoveEvent = function (options) {
                        var event = d3.event;
                        var offsetX = Number.MAX_VALUE;
                        var offsetY = Number.MAX_VALUE;
                        var originalXPosition = Number.MAX_VALUE;
                        var originalYPosition = Number.MAX_VALUE;
                        var viewportScale = this.scaleService.getScale();
                        var elementRect = this.element
                            .node()
                            .getBoundingClientRect();
                        switch (event.type) {
                            case "mousemove": {
                                offsetX = event.offsetX;
                                offsetY = event.offsetY;
                                originalXPosition = event.pageX;
                                originalYPosition = elementRect.top + offsetY;
                                break;
                            }
                            case "touchmove": {
                                event.preventDefault();
                                event.stopPropagation();
                                event.stopImmediatePropagation();
                                var touch = event;
                                if (touch && touch.touches && touch.touches[0]) {
                                    originalXPosition = touch.touches[0].pageX;
                                    originalYPosition = touch.touches[0].pageY;
                                    offsetX = (originalXPosition - elementRect.left) / viewportScale.width;
                                    offsetY = (originalYPosition - elementRect.top);
                                }
                                break;
                            }
                        }
                        this.renderDynamicComponentByPosition(offsetX, offsetY, originalXPosition, originalYPosition, viewportScale, options);
                    };
                    SparklineCellComponent.prototype.pointerLeaveHandler = function () {
                        this.clearDynamicComponents();
                    };
                    SparklineCellComponent.prototype.clearDynamicComponents = function () {
                        this.clearComponents(this.dynamicComponents);
                    };
                    SparklineCellComponent.prototype.clearComponents = function (components) {
                        components.forEach(function (component) {
                            component.clear();
                        });
                    };
                    SparklineCellComponent.prototype.renderDynamicComponentByPosition = function (offsetX, offsetY, xPosition, yPosition, scale, baseOptions) {
                        var series = baseOptions.series;
                        var amountOfPoints = series.axisValues.length;
                        var dataPointIndex = this.getIndexByPosition(offsetX);
                        dataPointIndex = Math.min(Math.max(0, dataPointIndex), amountOfPoints);
                        var axisValue = series.axisValues[dataPointIndex];
                        var particularSeries = {
                            axisValue: axisValue,
                            x: series.x,
                            y: series.y,
                            children: [],
                            childrenSet: null,
                            name: series.name,
                            level: series.level,
                            settings: series.settings,
                            axisValues: [axisValue],
                        };
                        particularSeries.points = series.points
                            .map(function (pointSet) {
                            return __assign({}, pointSet, { points: [pointSet.points[dataPointIndex]], colors: [pointSet.colors[dataPointIndex]], kpiIndicatorIndexes: [pointSet.kpiIndicatorIndexes[dataPointIndex]] });
                        });
                        particularSeries.varianceSet = series.varianceSet.map(function (variances) {
                            return [variances[dataPointIndex]];
                        });
                        var dynamicOptions = {
                            scale: scale,
                            y: baseOptions.y,
                            order: baseOptions.order,
                            series: particularSeries,
                            offset: baseOptions.offset,
                            viewport: this.getViewport(),
                            metadata: baseOptions.metadata,
                            settings: baseOptions.settings,
                            position: {
                                x: xPosition,
                                offsetX: offsetX,
                                y: yPosition,
                                offsetY: offsetY,
                            },
                            kpiIndicatorIndex: baseOptions.kpiIndicatorIndex,
                            kpiIndicatorSettings: baseOptions.kpiIndicatorSettings,
                        };
                        this.dynamicComponents.forEach(function (component) {
                            component.render(dynamicOptions);
                        });
                    };
                    SparklineCellComponent.prototype.render = function (options) {
                        var _this = this;
                        this.renderOptions = options;
                        var order = options.order, series = options.series, offset = options.offset, settings = options.series.settings;
                        this.updateOrder(order);
                        this.updateBackgroundColor(this.element, settings.sparklineSettings.backgroundColor);
                        var viewport = this.getViewport();
                        var filteredPoints = series.points
                            .filter(function (pointSet, pointSetIndex) {
                            return pointSet && pointSet.isShown;
                        });
                        this.positions = this.getPositions(viewport, series.x.scale, series.axisValues, offset);
                        var amountOfLines = filteredPoints.length;
                        this.components
                            .splice(amountOfLines)
                            .forEach(function (component) {
                            component.clear();
                            component.destroy();
                        });
                        if (this.components.length < amountOfLines) {
                            for (var index = this.components.length; index < amountOfLines; index++) {
                                this.components.push(new powerKPIMatrix.LineComponent({
                                    element: this.mainGroupElement,
                                    dataPointFilter: powerKPIMatrix.DataRepresentationPointFilter.create(),
                                }));
                            }
                        }
                        filteredPoints.forEach(function (pointSet, index) {
                            _this.components[index].render({
                                offset: offset,
                                viewport: viewport,
                                x: series.x,
                                y: series.y,
                                points: pointSet,
                            });
                        });
                    };
                    SparklineCellComponent.prototype.getIndexByPosition = function (position) {
                        if (!this.positions) {
                            return NaN;
                        }
                        var length = this.positions.length;
                        for (var index = 0; index < length; index++) {
                            var condition = (index === 0
                                && position <= this.positions[index])
                                || (index === 0
                                    && this.positions[index + 1] !== undefined
                                    && position <= this.positions[index] + (this.positions[index + 1] - this.positions[index]) / 2)
                                || (index === length - 1
                                    && position >= this.positions[index])
                                || (index === length - 1
                                    && this.positions[index - 1] !== undefined
                                    && position >= this.positions[index] - (this.positions[index] - this.positions[index - 1]) / 2)
                                || (this.positions[index - 1] !== undefined
                                    && this.positions[index] !== undefined
                                    && this.positions[index + 1] !== undefined
                                    && (position >= (this.positions[index] - Math.abs(this.positions[index] - this.positions[index - 1]) / 2))
                                    && (position <= (this.positions[index] + Math.abs(this.positions[index + 1] - this.positions[index]) / 2)));
                            if (condition) {
                                return index;
                            }
                        }
                        return NaN;
                    };
                    SparklineCellComponent.prototype.getViewport = function () {
                        return {
                            width: this.width,
                            height: this.height,
                        };
                    };
                    SparklineCellComponent.prototype.getPositions = function (viewport, originalScale, points, offset) {
                        var scale = originalScale
                            .copy()
                            .range([offset, viewport.width - offset]);
                        return points.map(function (value) {
                            return scale.scale(value);
                        });
                    };
                    SparklineCellComponent.prototype.updateSize = function (width, height) {
                        _super.prototype.updateSize.call(this, width, height);
                        if (this.renderOptions) {
                            this.render(this.renderOptions);
                        }
                    };
                    SparklineCellComponent.prototype.clear = function () {
                        this.svgElement
                            .selectAll("*")
                            .remove();
                        _super.prototype.clear.call(this);
                    };
                    SparklineCellComponent.prototype.destroy = function () {
                        this.renderOptions = null;
                        if (this.svgElement) {
                            this.svgElement.remove();
                        }
                        this.mainGroupElement = null;
                        _super.prototype.destroy.call(this);
                    };
                    return SparklineCellComponent;
                }(powerKPIMatrix.CellContainerComponent));
                powerKPIMatrix.SparklineCellComponent = SparklineCellComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var BodyComponent = /** @class */ (function (_super) {
                    __extends(BodyComponent, _super);
                    function BodyComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "bodyComponent";
                        _this.getCellStatesHandler = options.getCellStates;
                        _this.onSaveState = options.onSaveState;
                        _this.onCellSizeChange = options.onCellSizeChange;
                        _this.powerKPIModalWindowService = options.powerKPIModalWindowService;
                        _this.scaleService = options.scaleService;
                        _this.stateService = options.stateService;
                        _this.defaultMargin = options.defaultMargin;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true)
                            .on("scroll", options.onScroll
                            ? function () {
                                var element = d3.event.target;
                                options.onScroll(element.scrollLeft, element.scrollTop, element.offsetWidth - element.clientWidth, element.offsetHeight - element.clientHeight);
                            }
                            : null);
                        _this.components = [];
                        return _this;
                    }
                    BodyComponent.prototype.render = function (options) {
                        var _this = this;
                        var settings = options.settings, _a = options.data, y = _a.y, seriesArray = _a.seriesArray, seriesDeep = _a.seriesDeep, type = _a.type, metadata = _a.metadata, hyperlinkAdapter = options.hyperlinkAdapter;
                        this.components
                            .splice(seriesArray.length)
                            .forEach(function (component) {
                            component.clear();
                            component.destroy();
                        });
                        if (this.components.length < seriesArray.length) {
                            for (var index = this.components.length; index < seriesArray.length; index++) {
                                this.components.push(new powerKPIMatrix.BodyRowComponent({
                                    element: this.element,
                                    onSaveState: this.onSaveState,
                                    scaleService: this.scaleService,
                                    stateService: this.stateService,
                                    defaultMargin: this.defaultMargin,
                                    onCellSizeChange: this.onCellSizeChange,
                                    powerKPIModalWindowService: this.powerKPIModalWindowService,
                                    cellStates: this.getCellStatesHandler && this.getCellStatesHandler() || [],
                                }));
                            }
                        }
                        var rowStateSet = this.stateService.states.table.getRowStateSet();
                        seriesArray.forEach(function (series, rowIndex) {
                            var rowRenderOptions = {
                                y: y,
                                type: type,
                                series: series,
                                metadata: metadata,
                                settings: settings,
                                seriesDeep: seriesDeep,
                                rowStateSet: rowStateSet,
                                hyperlinkAdapter: hyperlinkAdapter,
                                viewport: options.viewport,
                                originRowStateSet: rowStateSet,
                                seriesSettings: series.settings,
                            };
                            _this.components[rowIndex].render(rowRenderOptions);
                        });
                    };
                    BodyComponent.prototype.resetScroll = function () {
                        powerKPIMatrix.ScrollUtils.resetScroll(this.element);
                    };
                    return BodyComponent;
                }(powerKPIMatrix.TableBaseComponent));
                powerKPIMatrix.BodyComponent = BodyComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                var TableComponent = /** @class */ (function (_super) {
                    __extends(TableComponent, _super);
                    function TableComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "tableComponent";
                        _this.columnClassName = "tableComponent_column";
                        _this.rowClassName = "tableComponent_row";
                        _this.defaultMargin = 0;
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        _this.stateService = options.stateService;
                        var headerRowComponent = new powerKPIMatrix.HeaderRowComponent({
                            element: _this.element,
                            defaultMargin: _this.defaultMargin,
                            scaleService: options.scaleService,
                            stateService: options.stateService,
                            onCellSizeChange: _this.updateSizeOfCellByIndex.bind(_this),
                            onSaveState: _this.onSaveState.bind(_this),
                        });
                        var bodyComponent = new powerKPIMatrix.BodyComponent({
                            element: _this.element,
                            scaleService: options.scaleService,
                            stateService: options.stateService,
                            defaultMargin: _this.defaultMargin,
                            onCellSizeChange: _this.updateSizeOfCellByIndex.bind(_this),
                            powerKPIModalWindowService: options.powerKPIModalWindowService,
                            onScroll: headerRowComponent
                                .scrollTo
                                .bind(headerRowComponent),
                            getCellStates: function () {
                                return headerRowComponent.getState().cellSet[_this.tableType];
                            },
                            onSaveState: _this.onSaveState.bind(_this),
                        });
                        _this.headerRowComponent = headerRowComponent;
                        _this.bodyComponent = bodyComponent;
                        _this.components = [
                            headerRowComponent,
                            bodyComponent,
                        ];
                        return _this;
                    }
                    TableComponent.prototype.onSaveState = function () {
                        this.stateService.states.table.set(this.getState());
                        this.stateService.save();
                    };
                    TableComponent.prototype.render = function (options) {
                        var settings = options.settings, type = options.settings.table.type, seriesDeep = options.data.seriesDeep;
                        if (this.tableType !== type) {
                            this.components.forEach(function (component) {
                                if (component && component.resetScroll) {
                                    component.resetScroll();
                                }
                            });
                        }
                        this.tableType = type;
                        var extendedOptions = options;
                        var columnNames = [];
                        var columnOrders = [];
                        var visibilities = [];
                        for (var index = 0; index < seriesDeep - 1; index++) {
                            var category = powerKPIMatrix.SettingsBase.getCategoryByIndex(index);
                            var categorySettings = settings[category.name];
                            if (categorySettings) {
                                columnNames.push(categorySettings.label);
                                visibilities.push(categorySettings.show);
                                columnOrders.push(categorySettings.order);
                            }
                        }
                        [
                            settings.asOfDate,
                            settings.metricName,
                            settings.currentValue,
                            settings.kpiIndicatorValue,
                            settings.comparisonValue,
                            settings.sparklineSettings,
                            settings.secondComparisonValue,
                            settings.secondKPIIndicatorValue,
                        ].forEach(function (particularSettings) {
                            visibilities.push(particularSettings.show);
                            columnNames.push(particularSettings.label);
                            columnOrders.push(particularSettings.order);
                        });
                        extendedOptions.columnNames = columnNames;
                        extendedOptions.columnOrders = columnOrders;
                        this.updateTableType();
                        _super.prototype.render.call(this, extendedOptions);
                        this.updateVisibility(visibilities);
                        this.synchronizeCellWidth();
                    };
                    /**
                     * This method allow us to synchronize widths of header and body rows.
                     * TODO: Let's revisit it later in order to make a better solution
                     */
                    TableComponent.prototype.synchronizeCellWidth = function () {
                        var _this = this;
                        if (!this.headerRowComponent || !this.bodyComponent) {
                            return;
                        }
                        var headerState = this.headerRowComponent.getState();
                        if (!headerState
                            || !headerState.cellSet
                            || !headerState.cellSet[this.tableType]
                            || !headerState.cellSet[this.tableType].length) {
                            return;
                        }
                        headerState.cellSet[this.tableType].forEach(function (cellState, cellIndex) {
                            if (cellState) {
                                var width = _this.tableType === powerKPIMatrix.TableType.RowBasedKPIS
                                    ? cellState.width
                                    : undefined;
                                var height = _this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS
                                    ? cellState.height
                                    : undefined;
                                _this.bodyComponent.updateSizeOfCellByIndex(width, height, cellIndex);
                            }
                        });
                    };
                    TableComponent.prototype.updateTableType = function () {
                        if (!this.element) {
                            return;
                        }
                        this.element
                            .classed(this.columnClassName, this.tableType === powerKPIMatrix.TableType.ColumnBasedKPIS)
                            .classed(this.rowClassName, this.tableType === powerKPIMatrix.TableType.RowBasedKPIS);
                    };
                    TableComponent.prototype.destroy = function () {
                        this.headerRowComponent = null;
                        this.bodyComponent = null;
                        _super.prototype.destroy.call(this);
                    };
                    return TableComponent;
                }(powerKPIMatrix.TableBaseComponent));
                powerKPIMatrix.TableComponent = TableComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // jsCommon.CssConstants
                var PixelConverter = jsCommon.PixelConverter;
                var RootComponent = /** @class */ (function (_super) {
                    __extends(RootComponent, _super);
                    function RootComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.className = "powerKPIMatrix_rootComponent";
                        _this.element = options.element
                            .append("div")
                            .classed(_this.className, true);
                        var componentOptions = __assign({}, options, { element: _this.element });
                        _this.components = [
                            new powerKPIMatrix.ColumnMappingComponent(componentOptions),
                            new powerKPIMatrix.TableComponent(componentOptions),
                        ];
                        return _this;
                    }
                    RootComponent.prototype.render = function (options) {
                        var viewport = options.viewport;
                        this.updateViewport(viewport);
                        _super.prototype.render.call(this, options);
                    };
                    RootComponent.prototype.updateViewport = function (viewport) {
                        this.element.style({
                            width: PixelConverter.toString(viewport.width),
                            height: PixelConverter.toString(viewport.height)
                        });
                    };
                    return RootComponent;
                }(powerKPIMatrix.BaseContainerComponent));
                powerKPIMatrix.RootComponent = RootComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            var powerKPIMatrix;
            (function (powerKPIMatrix) {
                // powerKpi
                var PowerKpiSeriesSettings = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.SeriesSettings;
                var PowerKpiDataRepresentationScale = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.DataRepresentationScale;
                var PowerKpiDataRepresentationPointFilter = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKpi.DataRepresentationPointFilter;
                var PowerKPIComponent = /** @class */ (function (_super) {
                    __extends(PowerKPIComponent, _super);
                    function PowerKPIComponent(options) {
                        var _this = _super.call(this) || this;
                        _this.instance = new powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPI();
                        var style = options.style, element = options.element;
                        _this.element = element.append("div");
                        _this.instance.init({
                            style: style,
                            element: $(_this.element.node()),
                            host: null,
                            viewport: null,
                        });
                        return _this;
                    }
                    PowerKPIComponent.prototype.render = function (options) {
                        if (!this.instance) {
                            return;
                        }
                        this.instance.render(this.convertDataToPowerKPIFormat(options));
                    };
                    PowerKPIComponent.prototype.convertDataToPowerKPIFormat = function (options) {
                        var y = options.y, series = options.series, settings = options.settings, metadata = options.metadata;
                        var yAxis = {
                            min: undefined,
                            max: undefined,
                        };
                        var powerKPISettings = settings.powerKPISettings;
                        powerKPISettings.subtitle.titleText = series.name;
                        powerKPISettings.dateValueKPI.displayUnits = series.settings.asOfDate.displayUnits;
                        powerKPISettings.dateValueKPI.precision = series.settings.asOfDate.precision;
                        powerKPISettings.actualValueKPI.displayUnits = series.settings.currentValue.displayUnits;
                        powerKPISettings.actualValueKPI.precision = series.settings.currentValue.precision;
                        powerKPISettings.kpiIndicatorValue.displayUnits = series.settings.kpiIndicatorValue.displayUnits;
                        powerKPISettings.kpiIndicatorValue.precision = series.settings.kpiIndicatorValue.precision;
                        if (!powerKPISettings.tooltipVariance.label) {
                            powerKPISettings.tooltipVariance.label = settings.kpiIndicatorValue.label;
                        }
                        if (!powerKPISettings.secondTooltipVariance.label) {
                            powerKPISettings.secondTooltipVariance.label = settings.secondKPIIndicatorValue.label;
                        }
                        series.settings.kpiIndicator
                            .forEach(function (property, index, indexedName) {
                            powerKPISettings.kpiIndicator[indexedName] = series.settings.kpiIndicator[indexedName];
                        });
                        powerKPISettings.parseSettings(options.viewport, series.x.scale.type);
                        var columnFormat = series.settings.asOfDate.columnFormat;
                        powerKPISettings.dateValueKPI.setColumnFormat(columnFormat);
                        powerKPISettings.tooltipLabel.setColumnFormat(columnFormat);
                        if (series.settings.sparklineSettings.shouldUseCommonScale) {
                            yAxis.min = y.min;
                        }
                        else if (powerKPIMatrix.NumericValueUtils.isValueFinite(powerKPISettings.yAxis.min)) {
                            yAxis.min = powerKPISettings.yAxis.min;
                        }
                        else if (powerKPIMatrix.NumericValueUtils.isValueFinite(series.settings.sparklineSettings.yMin)) {
                            yAxis.min = series.settings.sparklineSettings.yMin;
                        }
                        if (series.settings.sparklineSettings.shouldUseCommonScale) {
                            yAxis.max = y.max;
                        }
                        else if (powerKPIMatrix.NumericValueUtils.isValueFinite(powerKPISettings.yAxis.max)) {
                            yAxis.max = powerKPISettings.yAxis.max;
                        }
                        else if (powerKPIMatrix.NumericValueUtils.isValueFinite(series.settings.sparklineSettings.yMax)) {
                            yAxis.max = series.settings.sparklineSettings.yMax;
                        }
                        var scaledYAxis = {
                            min: undefined,
                            max: undefined,
                            format: series.settings.currentValue.getFormat(),
                            scale: PowerKpiDataRepresentationScale.create(),
                        };
                        var pointFilter = new PowerKpiDataRepresentationPointFilter();
                        var maxThickness = 0;
                        var powerKPISeries = series.points
                            .map(function (pointSet, pointSetIndex) {
                            var gradientPoints = [];
                            var points = pointSet.points
                                .map(function (point, pointIndex) {
                                var powerKpiPoint = {
                                    x: point.axisValue,
                                    y: point.value,
                                    kpiIndex: pointSet.kpiIndicatorIndexes[pointIndex],
                                    color: pointSet.colors[pointIndex] || pointSet.color,
                                };
                                pointFilter.groupPointByColor(gradientPoints, powerKpiPoint);
                                return powerKpiPoint;
                            });
                            var thickness = pointSet.thickness;
                            maxThickness = Math.max(maxThickness, thickness);
                            powerKPIMatrix.DataConverter.applyYArguments(yAxis, pointSet.min);
                            powerKPIMatrix.DataConverter.applyYArguments(yAxis, pointSet.max);
                            var seriesSettings = PowerKpiSeriesSettings.getDefault();
                            seriesSettings.line.fillColor = pointSet.color;
                            seriesSettings.line.lineStyle = pointSet.lineStyle;
                            seriesSettings.line.thickness = thickness;
                            return {
                                points: points,
                                gradientPoints: gradientPoints,
                                settings: seriesSettings,
                                name: pointSet.name || pointSet.settings.label,
                                selectionId: pointSetIndex === 0
                                    ? series.selectionId
                                    : visuals.SelectionId.createWithMeasure("" + pointSetIndex),
                                current: {
                                    x: series.axisValue,
                                    y: series.currentValue,
                                    index: series.kpiIndicatorIndex,
                                    kpiIndex: series.kpiIndicatorIndex
                                },
                                format: pointSet.settings.getFormat(),
                                y: scaledYAxis,
                            };
                        });
                        scaledYAxis.scale.domain([yAxis.min, yAxis.max], series.y.scale.type);
                        scaledYAxis.min = yAxis.min;
                        scaledYAxis.max = yAxis.max;
                        var margin = powerKPISettings.dots.getMarginByThickness(maxThickness, {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        });
                        var powerKPIData = {
                            margin: margin,
                            series: powerKPISeries,
                            sortedSeries: powerKPISeries,
                            groups: [{
                                    series: powerKPISeries,
                                    y: scaledYAxis,
                                }],
                            viewport: options.viewport,
                            x: {
                                name: series.settings.asOfDate.label,
                                type: series.x.scale.type,
                                metadata: metadata,
                                min: series.x.min,
                                max: series.x.max,
                                values: series.axisValues,
                                format: series.settings.asOfDate.getFormat(),
                                scale: PowerKpiDataRepresentationScale
                                    .create()
                                    .domain(series.x.scale.getDomain(), series.x.scale.type)
                            },
                            settings: powerKPISettings,
                            variance: [
                                series.kpiIndicatorValue,
                                series.secondKPIIndicatorValue
                            ],
                            variances: series.varianceSet || [],
                        };
                        return powerKPIData;
                    };
                    PowerKPIComponent.prototype.destroy = function () {
                        if (this.instance) {
                            this.instance.destroy();
                        }
                        this.instance = null;
                        _super.prototype.destroy.call(this);
                    };
                    return PowerKPIComponent;
                }(powerKPIMatrix.BaseComponent));
                powerKPIMatrix.PowerKPIComponent = PowerKPIComponent;
            })(powerKPIMatrix = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix || (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix = {}));
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
/**
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6;
        (function (powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6) {
            // powerbi.visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix
            var Settings = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.Settings;
            var DataDirector = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.DataDirector;
            var Capabilities = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.Capabilities;
            var ScaleService = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.ScaleService;
            var StateService = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.StateService;
            var RootComponent = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.RootComponent;
            var SettingsService = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.SettingsService;
            var HyperlinkAdapter = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.HyperlinkAdapter;
            var actualValueColumn = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.actualValueColumn;
            var PowerKPIComponent = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.PowerKPIComponent;
            var TableInternalState = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.TableInternalState;
            var ColumnMappingState = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.ColumnMappingState;
            var ModalWindowService = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.ModalWindowService;
            var ColumnSetConverter = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.ColumnSetConverter;
            var comparisonValueColumn = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.comparisonValueColumn;
            var RowBasedModelConverter = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.RowBasedModelConverter;
            var rowBasedMetricNameColumn = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.rowBasedMetricNameColumn;
            var ColumnBasedModelConverter = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.ColumnBasedModelConverter;
            var CommonCapabilitiesFactory = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.CommonCapabilitiesFactory;
            var secondComparisonValueColumn = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.secondComparisonValueColumn;
            var PowerKPICapabilitiesFactory = powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.powerKPIMatrix.PowerKPICapabilitiesFactory;
            var PowerKPIMatrix = /** @class */ (function () {
                function PowerKPIMatrix(options) {
                    if (options === void 0) { options = {}; }
                    this.isFirstUpdate = true;
                    this.columnSetConverter = options.columnSetConverter || new ColumnSetConverter();
                    this.stateService = options.stateService || new StateService({
                        columnMapping: new ColumnMappingState(),
                        table: new TableInternalState(),
                    }, this.saveState.bind(this));
                    this.hyperlinkAdapter = options.hyperlinkAdapter || new HyperlinkAdapter();
                    this.scaleService = options.scaleService || new ScaleService();
                    this.settingsService = options.settingsService || new SettingsService();
                    this.dataDirector = options.dataDirector || new DataDirector(rowBasedMetricNameColumn, new RowBasedModelConverter(), new ColumnBasedModelConverter());
                }
                PowerKPIMatrix.prototype.init = function (options) {
                    var style = options.style;
                    this.rootElement = d3.select(options.element.get(0));
                    this.scaleService.element = this.rootElement.node();
                    this.settingsService.host = options.host;
                    this.hyperlinkAdapter.host = options.host;
                    this.powerKPIModalWindowService = new ModalWindowService({
                        element: this.rootElement,
                        componentCreators: [
                            function (options) {
                                return new PowerKPIComponent(__assign({}, options, { style: style }));
                            }
                        ]
                    });
                    this.component = new RootComponent({
                        element: this.rootElement,
                        scaleService: this.scaleService,
                        stateService: this.stateService,
                        powerKPIModalWindowService: this.powerKPIModalWindowService,
                    });
                };
                PowerKPIMatrix.prototype.update = function (options) {
                    var dataView = null, viewport = { height: 0, width: 0 };
                    if (options && options.dataViews) {
                        dataView = options.dataViews[0];
                    }
                    if (options && options.viewport) {
                        viewport = __assign({}, options.viewport);
                    }
                    var settings = Settings.getDefault().parse(dataView);
                    if (this.isFirstUpdate
                        && settings
                        && settings.internalState
                        && settings.internalState.value) {
                        this.stateService.parse(settings.internalState.value);
                        this.isFirstUpdate = false; // we don't want to parse column mapping more than once
                    }
                    this.converterOptions = {
                        dataView: dataView,
                        viewport: viewport,
                        settings: settings,
                        columnMapping: this.stateService.states.columnMapping.getColumnMapping(),
                    };
                    var columnSet = this.columnSetConverter.convert(this.converterOptions);
                    this.stateService.states.columnMapping.applyDefaultRows(columnSet[actualValueColumn.name]);
                    var dataRepresentation = this.dataDirector.convert(this.converterOptions);
                    var isAdvancedEditModeTurnedOn = options.editMode === 1 /* Advanced */
                        && dataRepresentation.isDataColumnBasedModel;
                    if (this.renderOptions
                        && this.settingsService
                        && this.renderOptions.isAdvancedEditModeTurnedOn === true
                        && isAdvancedEditModeTurnedOn === false) {
                        /**
                         * This is a workaround for Edit button issue. This line forces Power BI to update data-model and internal state
                         * Edit button disappears once we turn this mode on and go back to common mode by clicking Back to Report
                         *
                         * Please visit https://pbix.visualstudio.com/DefaultCollection/PaaS/_workitems/edit/21334 to find out more about this issue
                         */
                        this.settingsService.save("_#_apply_a_workaround_for_edit_mode_issue_#_", "" + Math.random());
                    }
                    this.renderOptions = {
                        viewport: viewport,
                        settings: settings,
                        columnSet: columnSet,
                        isAdvancedEditModeTurnedOn: isAdvancedEditModeTurnedOn,
                        data: dataRepresentation,
                        hyperlinkAdapter: this.hyperlinkAdapter,
                    };
                    this.component.render(this.renderOptions);
                };
                PowerKPIMatrix.prototype.enumerateObjectInstances = function (options) {
                    var instances = (this.renderOptions
                        && this.renderOptions.settings
                        && Settings.enumerateObjectInstances(this.renderOptions.settings, options).instances)
                        || [];
                    var enumerationBuilder = new visuals.ObjectEnumerationBuilder();
                    var objectName = options.objectName;
                    switch (objectName) {
                        case "asOfDate":
                        case "metricName":
                        case "kpiIndicator":
                        case "currentValue":
                        case "kpiIndicatorValue":
                        case "comparisonValue":
                        case "secondComparisonValue":
                        case "secondKPIIndicatorValue":
                        case "metricSpecific": {
                            this.enumerateSettings(enumerationBuilder, objectName, this.getSettings.bind(this));
                            break;
                        }
                        case "sparklineSettings": {
                            this.enumerateSettings(enumerationBuilder, objectName, this.getSparklineSettingsProperties.bind(this));
                            break;
                        }
                    }
                    var instance = enumerationBuilder.complete();
                    if (!instance || !instance.instances) {
                        return instances;
                    }
                    (_a = instance.instances).push.apply(_a, instances);
                    return instance;
                    var _a;
                };
                PowerKPIMatrix.prototype.enumerateSettings = function (enumerationBuilder, objectName, getSettings) {
                    this.applySettings(objectName, "[All Metrics]", null, enumerationBuilder, getSettings(this.renderOptions.settings[objectName], true));
                    this.enumerateSettingsDeep(this.renderOptions.data.seriesArray, objectName, enumerationBuilder, getSettings);
                };
                PowerKPIMatrix.prototype.getSettings = function (settings, areExtraPropertiesSpecified) {
                    if (areExtraPropertiesSpecified === void 0) { areExtraPropertiesSpecified = false; }
                    var properties = {};
                    for (var descriptor in settings) {
                        if (!areExtraPropertiesSpecified
                            && (descriptor === "show" || descriptor === "label" || descriptor === "order")) {
                            continue;
                        }
                        var value = descriptor === "format" && settings.getFormat
                            ? settings.getFormat()
                            : settings[descriptor];
                        var typeOfValue = typeof value;
                        if (typeOfValue === "undefined"
                            || typeOfValue === "number"
                            || typeOfValue === "string"
                            || typeOfValue === "boolean") {
                            properties[descriptor] = value;
                        }
                    }
                    return properties;
                };
                PowerKPIMatrix.prototype.applySettings = function (objectName, displayName, selector, enumerationBuilder, properties) {
                    enumerationBuilder.pushContainer({ displayName: displayName });
                    var instance = {
                        selector: selector,
                        objectName: objectName,
                        properties: properties,
                    };
                    enumerationBuilder.pushInstance(instance);
                    enumerationBuilder.popContainer();
                };
                PowerKPIMatrix.prototype.enumerateSettingsDeep = function (seriesArray, objectName, enumerationBuilder, getSettings) {
                    for (var _i = 0, seriesArray_2 = seriesArray; _i < seriesArray_2.length; _i++) {
                        var series = seriesArray_2[_i];
                        if (series.hasBeenFilled) {
                            this.applySettings(objectName, series.name, series.selectionId.getSelector(), enumerationBuilder, getSettings(series.settings[objectName]));
                        }
                        else if (series.children && series.children.length) {
                            this.enumerateSettingsDeep(series.children, objectName, enumerationBuilder, getSettings);
                        }
                    }
                };
                PowerKPIMatrix.prototype.getSparklineSettingsProperties = function (settings, areExtraPropertiesSpecified) {
                    if (areExtraPropertiesSpecified === void 0) { areExtraPropertiesSpecified = false; }
                    var properties = {};
                    if (areExtraPropertiesSpecified) {
                        properties["show"] = settings.show;
                        properties["label"] = settings.label;
                        properties["order"] = settings.order;
                    }
                    properties["isActualVisible"] = settings.isActualVisible;
                    if (settings.isActualVisible) {
                        properties["shouldActualUseKPIColors"] = settings.shouldActualUseKPIColors;
                    }
                    properties["actualColor"] = settings.actualColor;
                    properties["actualThickness"] = settings.actualThickness;
                    properties["actualLineStyle"] = settings.actualLineStyle;
                    if (this.renderOptions.data.columns[comparisonValueColumn.name]) {
                        properties["isTargetVisible"] = settings.isTargetVisible;
                        properties["targetColor"] = settings.targetColor;
                        properties["targetThickness"] = settings.targetThickness;
                        properties["targetLineStyle"] = settings.targetLineStyle;
                    }
                    if (this.renderOptions.data.columns[secondComparisonValueColumn.name]) {
                        properties["isSecondComparisonValueVisible"] = settings.isSecondComparisonValueVisible;
                        properties["secondComparisonValueColor"] = settings.secondComparisonValueColor;
                        properties["secondComparisonValueThickness"] = settings.secondComparisonValueThickness;
                        properties["secondComparisonValueLineStyle"] = settings.secondComparisonValueLineStyle;
                    }
                    properties.backgroundColor = settings.backgroundColor;
                    properties.shouldUseCommonScale = settings.shouldUseCommonScale;
                    properties.yMin = settings.yMin;
                    properties.yMax = settings.yMax;
                    properties.verticalReferenceLineColor = settings.verticalReferenceLineColor;
                    properties.verticalReferenceLineThickness = settings.verticalReferenceLineThickness;
                    return properties;
                };
                PowerKPIMatrix.prototype.saveState = function (state, isRenderRequired) {
                    this.settingsService.save("internalState", state);
                    if (isRenderRequired) {
                        this.updateWithMapping();
                    }
                };
                PowerKPIMatrix.prototype.updateWithMapping = function () {
                    this.converterOptions = {
                        viewport: this.converterOptions.viewport,
                        dataView: this.converterOptions.dataView,
                        settings: this.converterOptions.settings,
                        columnMapping: this.stateService.states.columnMapping.getColumnMapping(),
                    };
                    this.renderOptions.data = this.dataDirector.convert(this.converterOptions);
                    this.component.render(this.renderOptions);
                };
                PowerKPIMatrix.prototype.destroy = function () {
                    this.dataDirector = null;
                    this.converterOptions = null;
                    this.renderOptions = null;
                    this.stateService = null;
                    this.scaleService.destroy();
                    this.scaleService = null;
                    this.settingsService.destroy();
                    this.settingsService = null;
                    this.powerKPIModalWindowService.destroy();
                    this.powerKPIModalWindowService = null;
                    this.component.clear();
                    this.component.destroy();
                    this.component = null;
                };
                PowerKPIMatrix.capabilities = new Capabilities([
                    new CommonCapabilitiesFactory(),
                    new PowerKPICapabilitiesFactory(),
                ]).getCapabilities();
                return PowerKPIMatrix;
            }());
            powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPIMatrix = PowerKPIMatrix;
        })(powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 || (visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
var powerbi;
(function (powerbi) {
    var visuals;
    (function (visuals) {
        var plugins;
        (function (plugins) {
            plugins.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6 = {
                name: 'powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6',
                class: 'powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6',
                capabilities: powerbi.visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPIMatrix.capabilities,
                custom: true,
                create: function () { return new powerbi.visuals.powerKPIMatrixEB2381CC88A8425FBEB1B07FF57784E6.PowerKPIMatrix(); }
            };
        })(plugins = visuals.plugins || (visuals.plugins = {}));
    })(visuals = powerbi.visuals || (powerbi.visuals = {}));
})(powerbi || (powerbi = {}));
